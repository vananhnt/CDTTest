(declare-fun flag_0 () Int)
(declare-fun n_0 () Int)
(declare-fun k_0 () Int)
(declare-fun k_1 () Int)
(declare-fun i_0 () Int)
(declare-fun i_1 () Int)
(declare-fun j_0 () Int)
(declare-fun j_1 () Int)
(declare-fun z_0 () Int)
(declare-fun return_0 () Int)
(assert (and (and (=> (<= i_0 n_0) (and (and (=> (<= i_0 n_0) (and (= return_0 z_0) (and (= z_0 (+ (+ k_1 i_1) j_1)) (and (= j_1 (+ j_0 i_1)) (= i_1 (+ i_0 1)))))) (=> (not (<= i_0 n_0)) (and (= return_0 z_0) (= z_0 (+ (+ k_1 i_1) j_1))))) (and (= j_1 (+ j_0 i_1)) (= i_1 (+ i_0 1))))) (=> (not (<= i_0 n_0)) (and (= return_0 z_0) (= z_0 (+ (+ k_1 i_1) j_1))))) (and (= j_0 0) (and (= i_0 0) (and (and (=> (> flag_0 0) (= k_1 (* n_0 n_0))) (=> (not (> flag_0 0)) (= k_1 k_0))) (= k_0 1))))))
