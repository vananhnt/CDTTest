(aeval (null (setq !*mode (quote algebraic))))
(operator (list (quote !@f_f) (quote !@g_g) (quote newton) (quote delta) (quote
b_part) (quote bf_part) (quote pg) (quote chan) (quote s_part) (quote prykr) (
quote prykl)))
(operator (list (quote bos) (quote fer) (quote der) (quote del) (quote d) (quote
axp) (quote axx) (quote zan) (quote zen) (quote fun) (quote tet) (quote gras) (
quote ber) (quote fir) (quote berz) (quote firr) (quote dr) (quote stp) (quote 
byk) (quote r_r) (quote !&a) (quote p_p) (quote s_s) (quote waga)))
(noncom (list (quote bos) (quote fer) (quote der) (quote del) (quote d) (quote 
axp) (quote axx) (quote zan) (quote zen) (quote fun) (quote tet) (quote gras) (
quote ber) (quote fir) (quote berz) (quote firr) (quote dr) (quote stp) (quote 
byk) (quote r_r)))
(factor (list (quote !&a) (quote byk)))
(factor (list (quote fer) (quote bos) (quote fun) (quote gras)))
(setk (quote chiral) (aeval (list (quote list) (list (quote replaceby) (quote 
abra_kadabra) 1) (list (quote replaceby) (list (quote expt) (list (quote der) (
list (quote !~) (quote n))) 2) 0) (list (quote replaceby) (list (quote expt) (
list (quote del) (list (quote !~) (quote n))) 2) 0) (list (quote replaceby) (
list (quote times) (list (quote del) 2) (list (quote del) 1)) (list (quote 
difference) (list (quote minus) (list (quote d) 1)) (list (quote times) (list (
quote del) 1) (list (quote del) 2)))) (list (quote replaceby) (list (quote times
) (list (quote der) 2) (list (quote der) 1)) (list (quote difference) (list (
quote minus) (list (quote d) 1)) (list (quote times) (list (quote der) 1) (list
(quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote der)
(list (quote !~) (quote n))) (list (quote del) (list (quote !~) (quote n)))) 0)
(list (quote replaceby) (list (quote times) (list (quote del) (list (quote !~) (
quote n))) (list (quote der) (list (quote !~) (quote n)))) 0) (list (quote 
replaceby) (list (quote times) (list (quote der) 1) (list (quote del) 2)) (list
(quote difference) (list (quote minus) (list (quote d) 1)) (list (quote times) (
list (quote del) 2) (list (quote der) 1)))) (list (quote replaceby) (list (quote
times) (list (quote der) 2) (list (quote del) 1)) (list (quote difference) (list
(quote minus) (list (quote d) 1)) (list (quote times) (list (quote del) 1) (list
(quote der) 2)))) (list (quote replaceby) (quote b_chiral) (list (quote list)))
(list (quote replaceby) (quote f_chiral) (list (quote list))) (list (quote 
replaceby) (quote b_antychiral) (list (quote list))) (list (quote replaceby) (
quote f_antychiral) (list (quote list))) (list (quote replaceby) (list (quote 
fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote 
when) 0 (list (quote not) (list (quote freeof) (quote b_chiral) (quote f))))) (
list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 3 (list (
quote !~) (quote m))) (list (quote when) (list (quote minus) (list (quote bos) (
quote f) 0 (list (quote plus) (quote m) 1))) (list (quote not) (list (quote 
freeof) (quote b_chiral) (quote f))))) (list (quote replaceby) (list (quote bos)
(list (quote !~) (quote f)) 3 (list (quote !~) (quote m)) (list (quote !~) (
quote k))) (list (quote when) (list (quote times) (list (quote expt) (minus 1) (
quote k)) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1) (quote k
))) (list (quote not) (list (quote freeof) (quote b_chiral) (quote f))))) (list
(quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote 
!~) (quote m))) (list (quote when) 0 (list (quote not) (list (quote freeof) (
quote f_chiral) (quote f))))) (list (quote replaceby) (list (quote bos) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote k)))
(list (quote when) 0 (list (quote not) (list (quote freeof) (quote f_chiral) (
quote f))))) (list (quote replaceby) (list (quote fer) (list (quote !~) (quote f
)) 3 (list (quote !~) (quote m))) (list (quote when) (list (quote minus) (list (
quote fer) (quote f) 0 (list (quote plus) (quote m) 1))) (list (quote not) (list
(quote freeof) (quote f_chiral) (quote f))))) (list (quote replaceby) (list (
quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote when) 0 (list (quote not) (list (quote freeof) (quote b_antychiral) (quote
f))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m))) (list (quote when) 0 (list (quote not) (list (quote
freeof) (quote b_antychiral) (quote f))))) (list (quote replaceby) (list (quote
bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)) (list (quote !~)
(quote k))) (list (quote when) 0 (list (quote not) (list (quote freeof) (quote 
b_antychiral) (quote f))))) (list (quote replaceby) (list (quote bos) (list (
quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (quote when) 0 (list (
quote not) (list (quote freeof) (quote f_antychiral) (quote f))))) (list (quote
replaceby) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote m)) (list (quote !~) (quote k))) (list (quote when) 0 (list (quote not) (
list (quote freeof) (quote f_antychiral) (quote f))))) (list (quote replaceby) (
list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (
list (quote when) 0 (list (quote not) (list (quote freeof) (quote f_antychiral)
(quote f))))) (list (quote replaceby) (list (quote times) (list (quote der) 1) (
list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (
list (quote minus) (list (quote times) (list (quote fer) (quote f) 1 (quote m))
(list (quote der) 1)))) (list (quote replaceby) (list (quote times) (list (quote
der) 1) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote
m)))) (list (quote difference) (list (quote bos) (quote f) 3 (quote m)) (list (
quote times) (list (quote fer) (quote f) 2 (quote m)) (list (quote der) 1)))) (
list (quote replaceby) (list (quote times) (list (quote der) 1) (list (quote fer
) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (list (quote minus
) (list (quote times) (list (quote fer) (quote f) 3 (quote m)) (list (quote der)
1)))) (list (quote replaceby) (list (quote times) (list (quote fer) (list (quote
!~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote del) 1)) (list (quote
minus) (list (quote times) (list (quote del) 1) (list (quote fer) (quote f) 1 (
quote m))))) (list (quote replaceby) (list (quote times) (list (quote fer) (list
(quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (quote del) 1)) (list
(quote difference) (list (quote bos) (quote f) 3 (quote m)) (list (quote times)
(list (quote del) 1) (list (quote fer) (quote f) 2 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote fer) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m))) (list (quote del) 1)) (list (quote minus) (list (
quote times) (list (quote del) 1) (list (quote fer) (quote f) 3 (quote m))))) (
list (quote replaceby) (list (quote times) (list (quote der) 2) (list (quote fer
) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (quote 
difference) (list (quote difference) (list (quote minus) (list (quote bos) (
quote f) 0 (list (quote plus) (quote m) 1))) (list (quote bos) (quote f) 3 (
quote m))) (list (quote times) (list (quote fer) (quote f) 1 (quote m)) (list (
quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote der) 2
) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))))
(list (quote minus) (list (quote times) (list (quote fer) (quote f) 2 (quote m))
(list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote
der) 2) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote
m)))) (list (quote difference) (list (quote minus) (list (quote bos) (quote f) 2
(list (quote plus) (quote m) 1))) (list (quote times) (list (quote fer) (quote f
) 3 (quote m)) (list (quote der) 2)))) (list (quote replaceby) (list (quote 
times) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m
))) (list (quote del) 2)) (list (quote difference) (list (quote difference) (
list (quote minus) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)
)) (list (quote bos) (quote f) 3 (quote m))) (list (quote times) (list (quote 
del) 2) (list (quote fer) (quote f) 1 (quote m))))) (list (quote replaceby) (
list (quote times) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote
!~) (quote m))) (list (quote del) 2)) (list (quote minus) (list (quote times) (
list (quote del) 2) (list (quote fer) (quote f) 2 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote fer) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m))) (list (quote del) 2)) (list (quote difference) (list
(quote minus) (list (quote bos) (quote f) 2 (list (quote plus) (quote m) 1))) (
list (quote times) (list (quote del) 2) (list (quote fer) (quote f) 3 (quote m))
))) (list (quote replaceby) (list (quote times) (list (quote der) 1) (list (
quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (
quote times) (list (quote bos) (quote f) 1 (quote m)) (list (quote der) 1))) (
list (quote replaceby) (list (quote times) (list (quote der) 1) (list (quote bos
) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (quote plus)
(list (quote fer) (quote f) 3 (quote m)) (list (quote times) (list (quote bos) (
quote f) 2 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (quote f))
3 (list (quote !~) (quote m)))) (list (quote times) (list (quote bos) (quote f)
3 (quote m)) (list (quote der) 1))) (list (quote replaceby) (list (quote times)
(list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (
list (quote del) 1)) (list (quote times) (list (quote del) 1) (list (quote bos)
(quote f) 1 (quote m)))) (list (quote replaceby) (list (quote times) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote del) 1)) (list (quote plus) (list (quote minus) (list (quote fer) (quote f
) 3 (quote m))) (list (quote times) (list (quote del) 1) (list (quote bos) (
quote f) 2 (quote m))))) (list (quote replaceby) (list (quote times) (list (
quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (list (
quote del) 1)) (list (quote times) (list (quote del) 1) (list (quote bos) (quote
f) 3 (quote m)))) (list (quote replaceby) (list (quote times) (list (quote der)
2) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))))
(list (quote plus) (list (quote difference) (list (quote minus) (list (quote fer
) (quote f) 0 (list (quote plus) (quote m) 1))) (list (quote fer) (quote f) 3 (
quote m))) (list (quote times) (list (quote bos) (quote f) 1 (quote m)) (list (
quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote der) 2
) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))))
(list (quote times) (list (quote bos) (quote f) 2 (quote m)) (list (quote der) 2
))) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (list (
quote plus) (list (quote minus) (list (quote fer) (quote f) 2 (list (quote plus)
(quote m) 1))) (list (quote times) (list (quote bos) (quote f) 3 (quote m)) (
list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote
bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote del
) 2)) (list (quote plus) (list (quote fer) (quote f) 0 (list (quote plus) (quote
m) 1)) (list (quote fer) (quote f) 3 (quote m)) (list (quote times) (list (quote
del) 2) (list (quote bos) (quote f) 1 (quote m))))) (list (quote replaceby) (
list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote
!~) (quote m))) (list (quote del) 2)) (list (quote times) (list (quote del) 2) (
list (quote bos) (quote f) 2 (quote m)))) (list (quote replaceby) (list (quote 
times) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m
))) (list (quote del) 2)) (list (quote plus) (list (quote fer) (quote f) 2 (list
(quote plus) (quote m) 1)) (list (quote times) (list (quote del) 2) (list (quote
bos) (quote f) 3 (quote m))))) (list (quote replaceby) (list (quote times) (list
(quote der) 1) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~)
(quote m)) (list (quote !~) (quote l)))) (list (quote times) (list (quote bos) (
quote f) 1 (quote m) (quote l)) (list (quote der) 1))) (list (quote replaceby) (
list (quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (
quote plus) (list (quote times) (quote l) (list (quote fer) (quote f) 3 (quote m
)) (list (quote bos) (quote f) 2 (quote m) (list (quote difference) (quote l) 1)
)) (list (quote times) (list (quote bos) (quote f) 2 (quote m) (quote l)) (list
(quote der) 1)))) (list (quote replaceby) (list (quote times) (list (quote der)
1) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)) (
list (quote !~) (quote l)))) (list (quote times) (list (quote bos) (quote f) 3 (
quote m) (quote l)) (list (quote der) 1))) (list (quote replaceby) (list (quote
times) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m
)) (list (quote !~) (quote l))) (list (quote del) 1)) (list (quote times) (list
(quote del) 1) (list (quote bos) (quote f) 1 (quote m) (quote l)))) (list (quote
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (quote del) 1)) (
list (quote plus) (list (quote minus) (list (quote times) (quote l) (list (quote
fer) (quote f) 3 (quote m)) (list (quote bos) (quote f) 2 (quote m) (list (quote
difference) (quote l) 1)))) (list (quote times) (list (quote del) 1) (list (
quote bos) (quote f) 2 (quote m) (quote l))))) (list (quote replaceby) (list (
quote times) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m)) (list (quote !~) (quote l))) (list (quote del) 1)) (list (quote times)
(list (quote del) 1) (list (quote bos) (quote f) 3 (quote m) (quote l)))) (list
(quote replaceby) (list (quote times) (list (quote der) 2) (list (quote bos) (
list (quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote
l)))) (list (quote plus) (list (quote minus) (list (quote times) (quote l) (list
(quote plus) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (
list (quote fer) (quote f) 3 (quote m))) (list (quote bos) (quote f) 1 (quote m)
(list (quote difference) (quote l) 1)))) (list (quote times) (list (quote bos) (
quote f) 1 (quote m) (quote l)) (list (quote der) 2)))) (list (quote replaceby)
(list (quote times) (list (quote der) 2) (list (quote bos) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (
quote times) (list (quote bos) (quote f) 2 (quote m) (quote l)) (list (quote der
) 2))) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)) (list (
quote !~) (quote l)))) (list (quote plus) (list (quote minus) (list (quote times
) (quote l) (list (quote fer) (quote f) 2 (list (quote plus) (quote m) 1)) (list
(quote bos) (quote f) 3 (quote m) (list (quote difference) (quote l) 1)))) (list
(quote times) (list (quote bos) (quote f) 3 (quote m) (quote l)) (list (quote 
der) 2)))) (list (quote replaceby) (list (quote times) (list (quote bos) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote l)))
(list (quote del) 2)) (list (quote plus) (list (quote times) (quote l) (list (
quote plus) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (list
(quote fer) (quote f) 3 (quote m))) (list (quote bos) (quote f) 1 (quote m) (
list (quote difference) (quote l) 1))) (list (quote times) (list (quote del) 2)
(list (quote bos) (quote f) 1 (quote m) (quote l))))) (list (quote replaceby) (
list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote
!~) (quote m)) (list (quote !~) (quote l))) (list (quote del) 2)) (list (quote 
times) (list (quote del) 2) (list (quote bos) (quote f) 2 (quote m) (quote l))))
(list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (
quote del) 2)) (list (quote plus) (list (quote times) (quote l) (list (quote fer
) (quote f) 2 (list (quote plus) (quote m) 1)) (list (quote bos) (quote f) 3 (
quote m) (list (quote difference) (quote l) 1))) (list (quote times) (list (
quote del) 2) (list (quote bos) (quote f) 3 (quote m) (quote l))))))))
(setk (quote chiral1) (aeval (list (quote list) (list (quote replaceby) (quote 
abra_kadabra) 3) (list (quote replaceby) (list (quote expt) (list (quote der) (
list (quote !~) (quote n))) 2) (list (quote when) 0 (list (quote neq) (quote n)
3))) (list (quote replaceby) (list (quote expt) (list (quote del) (list (quote 
!~) (quote n))) 2) (list (quote when) 0 (list (quote neq) (quote n) 3))) (list (
quote replaceby) (list (quote expt) (list (quote der) 3) 2) (list (quote expt) (
list (quote d) 1) 2)) (list (quote replaceby) (list (quote expt) (list (quote 
del) 3) 2) (list (quote expt) (list (quote d) 1) 2)) (list (quote replaceby) (
list (quote times) (list (quote der) 2) (list (quote der) 1)) (list (quote minus
) (list (quote quotient) (list (quote plus) (list (quote d) 1) (list (quote der)
3)) 2))) (list (quote replaceby) (list (quote times) (list (quote der) 1) (list
(quote der) 2)) (list (quote quotient) (list (quote plus) (list (quote minus) (
list (quote d) 1)) (list (quote der) 3)) 2)) (list (quote replaceby) (list (
quote times) (list (quote del) 2) (list (quote del) 1)) (list (quote minus) (
list (quote quotient) (list (quote plus) (list (quote d) 1) (list (quote del) 3)
) 2))) (list (quote replaceby) (list (quote times) (list (quote del) 1) (list (
quote del) 2)) (list (quote quotient) (list (quote plus) (list (quote minus) (
list (quote d) 1)) (list (quote del) 3)) 2)) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote der) 3)) (list (quote times) (
list (quote d) 1) (list (quote der) 1))) (list (quote replaceby) (list (quote 
times) (list (quote der) 2) (list (quote der) 3)) (list (quote minus) (list (
quote times) (list (quote d) 1) (list (quote der) 2)))) (list (quote replaceby)
(list (quote times) (list (quote der) 3) (list (quote der) 1)) (list (quote 
minus) (list (quote times) (list (quote d) 1) (list (quote der) 1)))) (list (
quote replaceby) (list (quote times) (list (quote der) 3) (list (quote der) 2))
(list (quote times) (list (quote d) 1) (list (quote der) 2))) (list (quote 
replaceby) (list (quote times) (list (quote del) 1) (list (quote del) 3)) (list
(quote times) (list (quote d) 1) (list (quote del) 1))) (list (quote replaceby)
(list (quote times) (list (quote del) 2) (list (quote del) 3)) (list (quote 
minus) (list (quote times) (list (quote d) 1) (list (quote del) 2)))) (list (
quote replaceby) (list (quote times) (list (quote del) 3) (list (quote del) 1))
(list (quote minus) (list (quote times) (list (quote d) 1) (list (quote del) 1))
)) (list (quote replaceby) (list (quote times) (list (quote del) 3) (list (quote
del) 2)) (list (quote times) (list (quote d) 1) (list (quote del) 2))) (list (
quote replaceby) (list (quote times) (list (quote der) (list (quote !~) (quote n
))) (list (quote del) (list (quote !~) (quote n)))) (list (quote cond) (list (
list (quote evalneq) (list (quote aeval) (quote (quote n))) 3) 0) (list (list (
quote evalequal) (list (quote aeval) (quote (quote n))) 3) (list (quote aeval) (
list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) 2
))))) (list (quote replaceby) (list (quote times) (list (quote del) (list (quote
!~) (quote n))) (list (quote der) (list (quote !~) (quote n)))) (list (quote 
cond) (list (list (quote evalneq) (list (quote aeval) (quote (quote n))) 3) 0) (
list (list (quote evalequal) (list (quote aeval) (quote (quote n))) 3) (list (
quote aeval) (list (quote list) (quote (quote expt)) (list (quote list) (quote (
quote d)) 1) 2))))) (list (quote replaceby) (list (quote times) (list (quote der
) 1) (list (quote del) 2)) (list (quote difference) (list (quote minus) (list (
quote d) 1)) (list (quote times) (list (quote del) 2) (list (quote der) 1)))) (
list (quote replaceby) (list (quote times) (list (quote der) 2) (list (quote del
) 1)) (list (quote difference) (list (quote minus) (list (quote d) 1)) (list (
quote times) (list (quote del) 1) (list (quote der) 2)))) (list (quote replaceby
) (list (quote times) (list (quote der) 1) (list (quote del) 3)) (list (quote 
times) (list (quote d) 1) (list (quote del) 1))) (list (quote replaceby) (list (
quote times) (list (quote der) 2) (list (quote del) 3)) (list (quote minus) (
list (quote times) (list (quote d) 1) (list (quote del) 2)))) (list (quote 
replaceby) (quote b_chiral) (list (quote list))) (list (quote replaceby) (quote
f_chiral) (list (quote list))) (list (quote replaceby) (quote b_antychiral) (
list (quote list))) (list (quote replaceby) (quote f_antychiral) (list (quote 
list))) (list (quote replaceby) (list (quote fer) (list (quote !~) (quote f)) 1
(list (quote !~) (quote m))) (list (quote when) 0 (list (quote not) (list (quote
freeof) (quote b_chiral) (quote f))))) (list (quote replaceby) (list (quote bos)
(list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (list (quote when) (
list (quote minus) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)
)) (list (quote not) (list (quote freeof) (quote b_chiral) (quote f))))) (list (
quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~
) (quote m)) (list (quote !~) (quote k))) (list (quote when) (list (quote times)
(list (quote expt) (minus 1) (quote k)) (list (quote bos) (quote f) 0 (list (
quote plus) (quote m) 1) (quote k))) (list (quote not) (list (quote freeof) (
quote b_chiral) (quote f))))) (list (quote replaceby) (list (quote bos) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote when) 0 (list (
quote not) (list (quote freeof) (quote f_chiral) (quote f))))) (list (quote 
replaceby) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (
quote m)) (list (quote !~) (quote k))) (list (quote when) 0 (list (quote not) (
list (quote freeof) (quote f_chiral) (quote f))))) (list (quote replaceby) (list
(quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (list (
quote when) (list (quote minus) (list (quote fer) (quote f) 0 (list (quote plus)
(quote m) 1))) (list (quote not) (list (quote freeof) (quote f_chiral) (quote f)
)))) (list (quote replaceby) (list (quote fer) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m))) (list (quote when) 0 (list (quote not) (list (quote
freeof) (quote b_antychiral) (quote f))))) (list (quote replaceby) (list (quote
bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (list (quote 
when) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)) (list (
quote not) (list (quote freeof) (quote b_antychiral) (quote f))))) (list (quote
replaceby) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m)) (list (quote !~) (quote k))) (list (quote when) (list (quote bos) (
quote f) 0 (list (quote plus) (quote m) 1) (quote k)) (list (quote not) (list (
quote freeof) (quote b_antychiral) (quote f))))) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote when) 0 (list (quote not) (list (quote freeof) (quote f_antychiral) (quote
f))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m)) (list (quote !~) (quote k))) (list (quote when) 0 (
list (quote not) (list (quote freeof) (quote f_antychiral) (quote f))))) (list (
quote replaceby) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~
) (quote m))) (list (quote when) (list (quote fer) (quote f) 0 (list (quote plus
) (quote m) 1)) (list (quote not) (list (quote freeof) (quote f_antychiral) (
quote f))))) (list (quote replaceby) (list (quote times) (list (quote der) 1) (
list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (
list (quote minus) (list (quote times) (list (quote fer) (quote f) 1 (quote m))
(list (quote der) 1)))) (list (quote replaceby) (list (quote times) (list (quote
der) 1) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote
m)))) (list (quote plus) (list (quote minus) (list (quote quotient) (list (quote
bos) (quote f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote difference) (
list (quote quotient) (list (quote bos) (quote f) 3 (quote m)) 2) (list (quote 
times) (list (quote fer) (quote f) 2 (quote m)) (list (quote der) 1))))) (list (
quote replaceby) (list (quote times) (list (quote der) 1) (list (quote fer) (
list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (list (quote 
difference) (list (quote bos) (quote f) 1 (list (quote plus) (quote m) 1)) (list
(quote times) (list (quote fer) (quote f) 3 (quote m)) (list (quote der) 1)))) (
list (quote replaceby) (list (quote times) (list (quote fer) (list (quote !~) (
quote f)) 1 (list (quote !~) (quote m))) (list (quote del) 1)) (list (quote 
minus) (list (quote times) (list (quote del) 1) (list (quote fer) (quote f) 1 (
quote m))))) (list (quote replaceby) (list (quote times) (list (quote fer) (list
(quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (quote del) 1)) (list
(quote plus) (list (quote minus) (list (quote quotient) (list (quote bos) (quote
f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote difference) (list (quote
quotient) (list (quote bos) (quote f) 3 (quote m)) 2) (list (quote times) (list
(quote del) 1) (list (quote fer) (quote f) 2 (quote m)))))) (list (quote 
replaceby) (list (quote times) (list (quote fer) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m))) (list (quote del) 1)) (list (quote difference) (list
(quote bos) (quote f) 1 (list (quote plus) (quote m) 1)) (list (quote times) (
list (quote del) 1) (list (quote fer) (quote f) 3 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote der) 2) (list (quote fer) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (quote difference) (
list (quote difference) (list (quote minus) (list (quote quotient) (list (quote
bos) (quote f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote quotient) (
list (quote bos) (quote f) 3 (quote m)) 2)) (list (quote times) (list (quote fer
) (quote f) 1 (quote m)) (list (quote der) 2)))) (list (quote replaceby) (list (
quote times) (list (quote der) 2) (list (quote fer) (list (quote !~) (quote f))
2 (list (quote !~) (quote m)))) (list (quote minus) (list (quote times) (list (
quote fer) (quote f) 2 (quote m)) (list (quote der) 2)))) (list (quote replaceby
) (list (quote times) (list (quote der) 2) (list (quote fer) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m)))) (list (quote difference) (list (quote
minus) (list (quote bos) (quote f) 2 (list (quote plus) (quote m) 1))) (list (
quote times) (list (quote fer) (quote f) 3 (quote m)) (list (quote der) 2)))) (
list (quote replaceby) (list (quote times) (list (quote fer) (list (quote !~) (
quote f)) 1 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote 
difference) (list (quote difference) (list (quote minus) (list (quote quotient)
(list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote
quotient) (list (quote bos) (quote f) 3 (quote m)) 2)) (list (quote times) (list
(quote del) 2) (list (quote fer) (quote f) 1 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote fer) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m))) (list (quote del) 2)) (list (quote minus) (list (
quote times) (list (quote del) 2) (list (quote fer) (quote f) 2 (quote m))))) (
list (quote replaceby) (list (quote times) (list (quote fer) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote 
difference) (list (quote minus) (list (quote bos) (quote f) 2 (list (quote plus)
(quote m) 1))) (list (quote times) (list (quote del) 2) (list (quote fer) (quote
f) 3 (quote m))))) (list (quote replaceby) (list (quote times) (list (quote der)
3) (list (quote fer) (list (quote !~) (quote f)) 0 (list (quote !~) (quote m))))
(list (quote plus) (list (quote fer) (quote f) 3 (quote m)) (list (quote 
difference) (list (quote times) (list (quote fer) (quote f) 0 (quote m)) (list (
quote der) 3)) (list (quote times) 2 (list (quote bos) (quote f) 1 (quote m)) (
list (quote der) 2))) (list (quote times) 2 (list (quote bos) (quote f) 2 (quote
m)) (list (quote der) 1)))) (list (quote replaceby) (list (quote times) (list (
quote der) 3) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (
quote m)))) (list (quote plus) (list (quote difference) (list (quote difference)
(list (quote minus) (list (quote fer) (quote f) 1 (list (quote plus) (quote m) 1
))) (list (quote times) (list (quote bos) (quote f) 0 (list (quote plus) (quote
m) 1)) (list (quote der) 1))) (list (quote times) (list (quote bos) (quote f) 3
(quote m)) (list (quote der) 1))) (list (quote times) (list (quote fer) (quote f
) 1 (quote m)) (list (quote der) 3)))) (list (quote replaceby) (list (quote 
times) (list (quote der) 3) (list (quote fer) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m)))) (list (quote plus) (list (quote difference) (list (
quote times) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)) (
list (quote der) 2)) (list (quote times) (list (quote bos) (quote f) 3 (quote m)
) (list (quote der) 2))) (list (quote fer) (quote f) 2 (list (quote plus) (quote
m) 1)) (list (quote times) (list (quote fer) (quote f) 2 (quote m)) (list (quote
der) 3)))) (list (quote replaceby) (list (quote times) (list (quote der) 3) (
list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (
list (quote plus) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 2))
(list (quote difference) (list (quote difference) (list (quote times) (list (
quote fer) (quote f) 3 (quote m)) (list (quote der) 3)) (list (quote times) 2 (
list (quote bos) (quote f) 1 (list (quote plus) (quote m) 1)) (list (quote der)
2))) (list (quote times) 2 (list (quote bos) (quote f) 2 (list (quote plus) (
quote m) 1)) (list (quote der) 1))))) (list (quote replaceby) (list (quote times
) (list (quote fer) (list (quote !~) (quote f)) 0 (list (quote !~) (quote m))) (
list (quote del) 3)) (list (quote plus) (list (quote fer) (quote f) 3 (quote m))
(list (quote times) (list (quote del) 3) (list (quote fer) (quote f) 0 (quote m)
)) (list (quote difference) (list (quote times) 2 (list (quote del) 2) (list (
quote bos) (quote f) 1 (quote m))) (list (quote times) 2 (list (quote del) 1) (
list (quote bos) (quote f) 2 (quote m)))))) (list (quote replaceby) (list (quote
times) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m
))) (list (quote del) 3)) (list (quote plus) (list (quote minus) (list (quote 
fer) (quote f) 1 (list (quote plus) (quote m) 1))) (list (quote times) (list (
quote del) 1) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1))) (
list (quote times) (list (quote del) 1) (list (quote bos) (quote f) 3 (quote m))
) (list (quote times) (list (quote del) 3) (list (quote fer) (quote f) 1 (quote
m))))) (list (quote replaceby) (list (quote times) (list (quote fer) (list (
quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (quote del) 3)) (list
(quote plus) (list (quote minus) (list (quote times) (list (quote del) 2) (list
(quote bos) (quote f) 0 (list (quote plus) (quote m) 1)))) (list (quote times) (
list (quote del) 2) (list (quote bos) (quote f) 3 (quote m))) (list (quote fer)
(quote f) 2 (list (quote plus) (quote m) 1)) (list (quote times) (list (quote 
del) 3) (list (quote fer) (quote f) 2 (quote m))))) (list (quote replaceby) (
list (quote times) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote
!~) (quote m))) (list (quote del) 3)) (list (quote plus) (list (quote fer) (
quote f) 0 (list (quote plus) (quote m) 2)) (list (quote times) (list (quote del
) 3) (list (quote fer) (quote f) 3 (quote m))) (list (quote times) 2 (list (
quote del) 2) (list (quote bos) (quote f) 1 (list (quote plus) (quote m) 1))) (
list (quote times) 2 (list (quote del) 1) (list (quote bos) (quote f) 2 (list (
quote plus) (quote m) 1))))) (list (quote replaceby) (list (quote times) (list (
quote der) 1) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (
quote m)))) (list (quote times) (list (quote bos) (quote f) 1 (quote m)) (list (
quote der) 1))) (list (quote replaceby) (list (quote times) (list (quote der) 1)
(list (quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (
list (quote plus) (list (quote minus) (list (quote quotient) (list (quote fer) (
quote f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote quotient) (list (
quote fer) (quote f) 3 (quote m)) 2) (list (quote times) (list (quote bos) (
quote f) 2 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (quote f))
3 (list (quote !~) (quote m)))) (list (quote plus) (list (quote fer) (quote f) 1
(list (quote plus) (quote m) 1)) (list (quote times) (list (quote bos) (quote f)
3 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (quote times)
(list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (
list (quote del) 1)) (list (quote times) (list (quote del) 1) (list (quote bos)
(quote f) 1 (quote m)))) (list (quote replaceby) (list (quote times) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote del) 1)) (list (quote plus) (list (quote difference) (list (quote quotient
) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) 2) (list (quote
quotient) (list (quote fer) (quote f) 3 (quote m)) 2)) (list (quote times) (list
(quote del) 1) (list (quote bos) (quote f) 2 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m))) (list (quote del) 1)) (list (quote plus) (list (
quote minus) (list (quote fer) (quote f) 1 (list (quote plus) (quote m) 1))) (
list (quote times) (list (quote del) 1) (list (quote bos) (quote f) 3 (quote m))
))) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (
quote plus) (list (quote difference) (list (quote minus) (list (quote quotient)
(list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote
quotient) (list (quote fer) (quote f) 3 (quote m)) 2)) (list (quote times) (list
(quote bos) (quote f) 1 (quote m)) (list (quote der) 2)))) (list (quote 
replaceby) (list (quote times) (list (quote der) 2) (list (quote bos) (list (
quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (quote times) (list (
quote bos) (quote f) 2 (quote m)) (list (quote der) 2))) (list (quote replaceby)
(list (quote times) (list (quote der) 2) (list (quote bos) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m)))) (list (quote plus) (list (quote minus)
(list (quote fer) (quote f) 2 (list (quote plus) (quote m) 1))) (list (quote 
times) (list (quote bos) (quote f) 3 (quote m)) (list (quote der) 2)))) (list (
quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f
)) 1 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote plus) (list
(quote quotient) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1))
2) (list (quote quotient) (list (quote fer) (quote f) 3 (quote m)) 2) (list (
quote times) (list (quote del) 2) (list (quote bos) (quote f) 1 (quote m))))) (
list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote 
times) (list (quote del) 2) (list (quote bos) (quote f) 2 (quote m)))) (list (
quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f
)) 3 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote plus) (list
(quote fer) (quote f) 2 (list (quote plus) (quote m) 1)) (list (quote times) (
list (quote del) 2) (list (quote bos) (quote f) 3 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote der) 3) (list (quote bos) (list (
quote !~) (quote f)) 0 (list (quote !~) (quote m)))) (list (quote plus) (list (
quote bos) (quote f) 3 (quote m)) (list (quote times) (list (quote bos) (quote f
) 0 (quote m)) (list (quote der) 3)) (list (quote difference) (list (quote times
) 2 (list (quote fer) (quote f) 1 (quote m)) (list (quote der) 2)) (list (quote
times) 2 (list (quote fer) (quote f) 2 (quote m)) (list (quote der) 1))))) (list
(quote replaceby) (list (quote times) (list (quote der) 3) (list (quote bos) (
list (quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (quote plus) (
list (quote minus) (list (quote bos) (quote f) 1 (list (quote plus) (quote m) 1)
)) (list (quote times) (list (quote fer) (quote f) 0 (list (quote plus) (quote m
) 1)) (list (quote der) 1)) (list (quote times) (list (quote fer) (quote f) 3 (
quote m)) (list (quote der) 1)) (list (quote times) (list (quote bos) (quote f)
1 (quote m)) (list (quote der) 3)))) (list (quote replaceby) (list (quote times)
(list (quote der) 3) (list (quote bos) (list (quote !~) (quote f)) 2 (list (
quote !~) (quote m)))) (list (quote plus) (list (quote minus) (list (quote times
) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (list (quote 
der) 2))) (list (quote times) (list (quote fer) (quote f) 3 (quote m)) (list (
quote der) 2)) (list (quote times) (list (quote bos) (quote f) 2 (quote m)) (
list (quote der) 3)) (list (quote bos) (quote f) 2 (list (quote plus) (quote m)
1)))) (list (quote replaceby) (list (quote times) (list (quote der) 3) (list (
quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (list (
quote plus) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 2)) (list
(quote times) 2 (list (quote fer) (quote f) 2 (list (quote plus) (quote m) 1)) (
list (quote der) 1)) (list (quote times) 2 (list (quote fer) (quote f) 1 (list (
quote plus) (quote m) 1)) (list (quote der) 2)) (list (quote times) (list (quote
bos) (quote f) 3 (quote m)) (list (quote der) 3)))) (list (quote replaceby) (
list (quote times) (list (quote bos) (list (quote !~) (quote f)) 0 (list (quote
!~) (quote m))) (list (quote del) 3)) (list (quote plus) (list (quote bos) (
quote f) 3 (quote m)) (list (quote times) (list (quote del) 3) (list (quote bos)
(quote f) 0 (quote m))) (list (quote difference) (list (quote times) 2 (list (
quote del) 2) (list (quote fer) (quote f) 1 (quote m))) (list (quote times) 2 (
list (quote del) 1) (list (quote fer) (quote f) 2 (quote m)))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 1 (
list (quote !~) (quote m))) (list (quote del) 3)) (list (quote plus) (list (
quote times) (list (quote del) 1) (list (quote fer) (quote f) 0 (list (quote 
plus) (quote m) 1))) (list (quote difference) (list (quote times) (list (quote 
del) 1) (list (quote fer) (quote f) 3 (quote m))) (list (quote bos) (quote f) 1
(list (quote plus) (quote m) 1))) (list (quote times) (list (quote del) 3) (list
(quote bos) (quote f) 1 (quote m))))) (list (quote replaceby) (list (quote times
) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (
list (quote del) 3)) (list (quote plus) (list (quote minus) (list (quote times)
(list (quote del) 2) (list (quote fer) (quote f) 0 (list (quote plus) (quote m)
1)))) (list (quote times) (list (quote del) 2) (list (quote fer) (quote f) 3 (
quote m))) (list (quote times) (list (quote del) 3) (list (quote bos) (quote f)
2 (quote m))) (list (quote bos) (quote f) 2 (list (quote plus) (quote m) 1)))) (
list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m))) (list (quote del) 3)) (list (quote plus
) (list (quote bos) (quote f) 0 (list (quote plus) (quote m) 2)) (list (quote 
times) 2 (list (quote del) 1) (list (quote fer) (quote f) 2 (list (quote plus) (
quote m) 1))) (list (quote times) 2 (list (quote del) 2) (list (quote fer) (
quote f) 1 (list (quote plus) (quote m) 1))) (list (quote times) (list (quote 
del) 3) (list (quote bos) (quote f) 3 (quote m))))) (list (quote replaceby) (
list (quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (
quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (
quote times) (list (quote bos) (quote f) 1 (quote m) (quote l)) (list (quote der
) 1))) (list (quote replaceby) (list (quote times) (list (quote der) 1) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)) (list (
quote !~) (quote l)))) (list (quote plus) (list (quote times) (quote l) (list (
quote bos) (quote f) 2 (quote m) (list (quote difference) (quote l) 1)) (list (
quote plus) (list (quote minus) (list (quote quotient) (list (quote fer) (quote
f) 0 (list (quote plus) (quote m) 1)) 2)) (list (quote quotient) (list (quote 
fer) (quote f) 3 (quote m)) 2))) (list (quote times) (list (quote bos) (quote f)
2 (quote m) (quote l)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (quote f))
3 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (quote plus) (
list (quote times) (quote l) (list (quote bos) (quote f) 3 (quote m) (list (
quote difference) (quote l) 1)) (list (quote fer) (quote f) 1 (list (quote plus)
(quote m) 1))) (list (quote times) (list (quote bos) (quote f) 3 (quote m) (
quote l)) (list (quote der) 1)))) (list (quote replaceby) (list (quote times) (
list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list
(quote !~) (quote l))) (list (quote del) 1)) (list (quote times) (list (quote 
del) 1) (list (quote bos) (quote f) 1 (quote m) (quote l)))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (quote del) 1)) (
list (quote plus) (list (quote minus) (list (quote times) (quote l) (list (quote
bos) (quote f) 2 (quote m) (list (quote difference) (quote l) 1)) (list (quote 
plus) (list (quote minus) (list (quote quotient) (list (quote fer) (quote f) 0 (
list (quote plus) (quote m) 1)) 2)) (list (quote quotient) (list (quote fer) (
quote f) 3 (quote m)) 2)))) (list (quote times) (list (quote del) 1) (list (
quote bos) (quote f) 2 (quote m) (quote l))))) (list (quote replaceby) (list (
quote times) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m)) (list (quote !~) (quote l))) (list (quote del) 1)) (list (quote plus)
(list (quote minus) (list (quote times) (quote l) (list (quote bos) (quote f) 3
(quote m) (list (quote difference) (quote l) 1)) (list (quote fer) (quote f) 1 (
list (quote plus) (quote m) 1)))) (list (quote times) (list (quote del) 1) (list
(quote bos) (quote f) 3 (quote m) (quote l))))) (list (quote replaceby) (list (
quote times) (list (quote der) 2) (list (quote bos) (list (quote !~) (quote f))
1 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (quote plus) (
list (quote minus) (list (quote times) (quote l) (list (quote bos) (quote f) 1 (
quote m) (list (quote difference) (quote l) 1)) (list (quote plus) (list (quote
quotient) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) 2) (
list (quote quotient) (list (quote fer) (quote f) 3 (quote m)) 2)))) (list (
quote times) (list (quote bos) (quote f) 1 (quote m) (quote l)) (list (quote der
) 2)))) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)) (list (
quote !~) (quote l)))) (list (quote times) (list (quote bos) (quote f) 2 (quote
m) (quote l)) (list (quote der) 2))) (list (quote replaceby) (list (quote times)
(list (quote der) 2) (list (quote bos) (list (quote !~) (quote f)) 3 (list (
quote !~) (quote m)) (list (quote !~) (quote l)))) (list (quote plus) (list (
quote minus) (list (quote times) (quote l) (list (quote fer) (quote f) 2 (list (
quote plus) (quote m) 1)) (list (quote bos) (quote f) 3 (quote m) (list (quote 
difference) (quote l) 1)))) (list (quote times) (list (quote bos) (quote f) 3 (
quote m) (quote l)) (list (quote der) 2)))) (list (quote replaceby) (list (quote
times) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m
)) (list (quote !~) (quote l))) (list (quote del) 2)) (list (quote plus) (list (
quote times) (quote l) (list (quote plus) (list (quote quotient) (list (quote 
fer) (quote f) 0 (list (quote plus) (quote m) 1)) 2) (list (quote quotient) (
list (quote fer) (quote f) 3 (quote m)) 2)) (list (quote bos) (quote f) 1 (quote
m) (list (quote difference) (quote l) 1))) (list (quote times) (list (quote del)
2) (list (quote bos) (quote f) 1 (quote m) (quote l))))) (list (quote replaceby)
(list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (list (quote
!~) (quote m)) (list (quote !~) (quote l))) (list (quote del) 2)) (list (quote 
times) (list (quote del) 2) (list (quote bos) (quote f) 2 (quote m) (quote l))))
(list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (
quote del) 2)) (list (quote plus) (list (quote times) (quote l) (list (quote fer
) (quote f) 2 (list (quote plus) (quote m) 1)) (list (quote bos) (quote f) 3 (
quote m) (list (quote difference) (quote l) 1))) (list (quote times) (list (
quote del) 2) (list (quote bos) (quote f) 3 (quote m) (quote l))))) (list (quote
replaceby) (list (quote times) (list (quote der) 3) (list (quote bos) (list (
quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (quote m)) (
list (quote !~) (quote l)))) (list (quote difference) (list (quote times) (list
(quote der) 1) (list (quote prykr) (list (quote bos) (quote f) (quote k) (quote
m) (quote l)) 2)) (list (quote times) (list (quote der) 2) (list (quote prykr) (
list (quote bos) (quote f) (quote k) (quote m) (quote l)) 1)))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) (
list (quote !~) (quote k)) (list (quote !~) (quote m)) (list (quote !~) (quote l
))) (list (quote del) 3)) (list (quote plus) (list (quote minus) (list (quote 
times) (list (quote prykl) (list (quote bos) (quote f) (quote k) (quote m) (
quote l)) 2) (list (quote del) 1))) (list (quote times) (list (quote prykl) (
list (quote bos) (quote f) (quote k) (quote m) (quote l)) 1) (list (quote del) 2
)))))))
(setk (quote trad) (aeval (list (quote list) (list (quote replaceby) (quote 
abra_kadabra) 2) (list (quote replaceby) (list (quote expt) (list (quote der) (
list (quote !~) (quote n))) 2) (list (quote d) 1)) (list (quote replaceby) (list
(quote expt) (list (quote del) (list (quote !~) (quote n))) 2) (list (quote d) 1
)) (list (quote replaceby) (list (quote times) (list (quote del) 2) (list (quote
del) 1)) (list (quote minus) (list (quote times) (list (quote del) 1) (list (
quote del) 2)))) (list (quote replaceby) (list (quote times) (list (quote der) 2
) (list (quote der) 1)) (list (quote minus) (list (quote times) (list (quote der
) 1) (list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (
quote der) (list (quote !~) (quote n))) (list (quote del) (list (quote !~) (
quote n)))) (list (quote d) 1)) (list (quote replaceby) (list (quote times) (
list (quote del) (list (quote !~) (quote n))) (list (quote der) (list (quote !~)
(quote n)))) (list (quote d) 1)) (list (quote replaceby) (list (quote times) (
list (quote der) 1) (list (quote del) 2)) (list (quote minus) (list (quote times
) (list (quote del) 2) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 2) (list (quote del) 1)) (list (quote minus) (
list (quote times) (list (quote del) 1) (list (quote der) 2)))) (list (quote 
replaceby) (list (quote times) (list (quote der) 1) (list (quote fer) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m)))) (list (quote difference) (
list (quote bos) (quote f) 0 (list (quote plus) (quote m) 1)) (list (quote times
) (list (quote fer) (quote f) 1 (quote m)) (list (quote der) 1)))) (list (quote
replaceby) (list (quote times) (list (quote der) 1) (list (quote fer) (list (
quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (quote difference) (
list (quote bos) (quote f) 3 (quote m)) (list (quote times) (list (quote fer) (
quote f) 2 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote fer) (list (quote !~) (quote f))
3 (list (quote !~) (quote m)))) (list (quote difference) (list (quote bos) (
quote f) 2 (list (quote plus) (quote m) 1)) (list (quote times) (list (quote fer
) (quote f) 3 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (
quote m))) (list (quote del) 1)) (list (quote difference) (list (quote bos) (
quote f) 0 (list (quote plus) (quote m) 1)) (list (quote times) (list (quote del
) 1) (list (quote fer) (quote f) 1 (quote m))))) (list (quote replaceby) (list (
quote times) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote m))) (list (quote del) 1)) (list (quote difference) (list (quote bos) (
quote f) 3 (quote m)) (list (quote times) (list (quote del) 1) (list (quote fer)
(quote f) 2 (quote m))))) (list (quote replaceby) (list (quote times) (list (
quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (list (
quote del) 1)) (list (quote difference) (list (quote bos) (quote f) 2 (list (
quote plus) (quote m) 1)) (list (quote times) (list (quote del) 1) (list (quote
fer) (quote f) 3 (quote m))))) (list (quote replaceby) (list (quote times) (list
(quote der) 2) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~)
(quote m)))) (list (quote difference) (list (quote minus) (list (quote bos) (
quote f) 3 (quote m))) (list (quote times) (list (quote fer) (quote f) 1 (quote
m)) (list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (
quote der) 2) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote m)))) (list (quote difference) (list (quote bos) (quote f) 0 (list (quote
plus) (quote m) 1)) (list (quote times) (list (quote fer) (quote f) 2 (quote m))
(list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (quote
der) 2) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote
m)))) (list (quote difference) (list (quote minus) (list (quote bos) (quote f) 1
(list (quote plus) (quote m) 1))) (list (quote times) (list (quote fer) (quote f
) 3 (quote m)) (list (quote der) 2)))) (list (quote replaceby) (list (quote 
times) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m
))) (list (quote del) 2)) (list (quote difference) (list (quote minus) (list (
quote bos) (quote f) 3 (quote m))) (list (quote times) (list (quote del) 2) (
list (quote fer) (quote f) 1 (quote m))))) (list (quote replaceby) (list (quote
times) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m
))) (list (quote del) 2)) (list (quote difference) (list (quote bos) (quote f) 0
(list (quote plus) (quote m) 1)) (list (quote times) (list (quote del) 2) (list
(quote fer) (quote f) 2 (quote m))))) (list (quote replaceby) (list (quote times
) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))) (
list (quote del) 2)) (list (quote difference) (list (quote minus) (list (quote 
bos) (quote f) 1 (list (quote plus) (quote m) 1))) (list (quote times) (list (
quote del) 2) (list (quote fer) (quote f) 3 (quote m))))) (list (quote replaceby
) (list (quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (
quote f)) 1 (list (quote !~) (quote m)))) (list (quote plus) (list (quote fer) (
quote f) 0 (list (quote plus) (quote m) 1)) (list (quote times) (list (quote bos
) (quote f) 1 (quote m)) (list (quote der) 1)))) (list (quote replaceby) (list (
quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (quote f))
2 (list (quote !~) (quote m)))) (list (quote plus) (list (quote fer) (quote f) 3
(quote m)) (list (quote times) (list (quote bos) (quote f) 2 (quote m)) (list (
quote der) 1)))) (list (quote replaceby) (list (quote times) (list (quote der) 1
) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m))))
(list (quote plus) (list (quote fer) (quote f) 2 (list (quote plus) (quote m) 1)
) (list (quote times) (list (quote bos) (quote f) 3 (quote m)) (list (quote der)
1)))) (list (quote replaceby) (list (quote times) (list (quote bos) (list (quote
!~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote del) 1)) (list (quote
plus) (list (quote minus) (list (quote fer) (quote f) 0 (list (quote plus) (
quote m) 1))) (list (quote times) (list (quote del) 1) (list (quote bos) (quote
f) 1 (quote m))))) (list (quote replaceby) (list (quote times) (list (quote bos)
(list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (quote del) 1))
(list (quote plus) (list (quote minus) (list (quote fer) (quote f) 3 (quote m)))
(list (quote times) (list (quote del) 1) (list (quote bos) (quote f) 2 (quote m)
)))) (list (quote replaceby) (list (quote times) (list (quote bos) (list (quote
!~) (quote f)) 3 (list (quote !~) (quote m))) (list (quote del) 1)) (list (quote
plus) (list (quote minus) (list (quote fer) (quote f) 2 (list (quote plus) (
quote m) 1))) (list (quote times) (list (quote del) 1) (list (quote bos) (quote
f) 3 (quote m))))) (list (quote replaceby) (list (quote times) (list (quote der)
2) (list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))))
(list (quote plus) (list (quote minus) (list (quote fer) (quote f) 3 (quote m)))
(list (quote times) (list (quote bos) (quote f) 1 (quote m)) (list (quote der) 2
)))) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (
quote plus) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (list
(quote times) (list (quote bos) (quote f) 2 (quote m)) (list (quote der) 2)))) (
list (quote replaceby) (list (quote times) (list (quote der) 2) (list (quote bos
) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)))) (list (quote plus)
(list (quote minus) (list (quote fer) (quote f) 1 (list (quote plus) (quote m) 1
))) (list (quote times) (list (quote bos) (quote f) 3 (quote m)) (list (quote 
der) 2)))) (list (quote replaceby) (list (quote times) (list (quote bos) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote del) 2)) (list
(quote plus) (list (quote fer) (quote f) 3 (quote m)) (list (quote times) (list
(quote del) 2) (list (quote bos) (quote f) 1 (quote m))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 2 (
list (quote !~) (quote m))) (list (quote del) 2)) (list (quote plus) (list (
quote minus) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1))) (
list (quote times) (list (quote del) 2) (list (quote bos) (quote f) 2 (quote m))
))) (list (quote replaceby) (list (quote times) (list (quote bos) (list (quote 
!~) (quote f)) 3 (list (quote !~) (quote m))) (list (quote del) 2)) (list (quote
plus) (list (quote fer) (quote f) 1 (list (quote plus) (quote m) 1)) (list (
quote times) (list (quote del) 2) (list (quote bos) (quote f) 3 (quote m))))) (
list (quote replaceby) (list (quote times) (list (quote der) 1) (list (quote bos
) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (
quote l)))) (list (quote plus) (list (quote times) (quote l) (list (quote fer) (
quote f) 0 (list (quote plus) (quote m) 1)) (list (quote bos) (quote f) 1 (quote
m) (list (quote difference) (quote l) 1))) (list (quote times) (list (quote bos)
(quote f) 1 (quote m) (quote l)) (list (quote der) 1)))) (list (quote replaceby)
(list (quote times) (list (quote der) 1) (list (quote bos) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (
quote plus) (list (quote times) (quote l) (list (quote fer) (quote f) 3 (quote m
)) (list (quote bos) (quote f) 2 (quote m) (list (quote difference) (quote l) 1)
)) (list (quote times) (list (quote bos) (quote f) 2 (quote m) (quote l)) (list
(quote der) 1)))) (list (quote replaceby) (list (quote times) (list (quote der)
1) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (quote m)) (
list (quote !~) (quote l)))) (list (quote plus) (list (quote times) (quote l) (
list (quote fer) (quote f) 2 (list (quote plus) (quote m) 1)) (list (quote bos)
(quote f) 3 (quote m) (list (quote difference) (quote l) 1))) (list (quote times
) (list (quote bos) (quote f) 3 (quote m) (quote l)) (list (quote der) 1)))) (
list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (
quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (
quote del) 1)) (list (quote plus) (list (quote minus) (list (quote times) (quote
l) (list (quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (list (quote 
bos) (quote f) 1 (quote m) (list (quote difference) (quote l) 1)))) (list (quote
times) (list (quote del) 1) (list (quote bos) (quote f) 1 (quote m) (quote l))))
) (list (quote replaceby) (list (quote times) (list (quote bos) (list (quote !~)
(quote f)) 2 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (
quote del) 1)) (list (quote plus) (list (quote minus) (list (quote times) (quote
l) (list (quote fer) (quote f) 3 (quote m)) (list (quote bos) (quote f) 2 (quote
m) (list (quote difference) (quote l) 1)))) (list (quote times) (list (quote del
) 1) (list (quote bos) (quote f) 2 (quote m) (quote l))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) 3 (
list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (quote del) 1)) (
list (quote plus) (list (quote minus) (list (quote times) (quote l) (list (quote
fer) (quote f) 2 (list (quote plus) (quote m) 1)) (list (quote bos) (quote f) 3
(quote m) (list (quote difference) (quote l) 1)))) (list (quote times) (list (
quote del) 1) (list (quote bos) (quote f) 3 (quote m) (quote l))))) (list (quote
replaceby) (list (quote times) (list (quote der) 2) (list (quote bos) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list (quote !~) (quote l))))
(list (quote plus) (list (quote minus) (list (quote times) (quote l) (list (
quote fer) (quote f) 3 (quote m)) (list (quote bos) (quote f) 1 (quote m) (list
(quote difference) (quote l) 1)))) (list (quote times) (list (quote bos) (quote
f) 1 (quote m) (quote l)) (list (quote der) 2)))) (list (quote replaceby) (list
(quote times) (list (quote der) 2) (list (quote bos) (list (quote !~) (quote f))
2 (list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (quote plus) (
list (quote times) (quote l) (list (quote fer) (quote f) 0 (list (quote plus) (
quote m) 1)) (list (quote bos) (quote f) 2 (quote m) (list (quote difference) (
quote l) 1))) (list (quote times) (list (quote bos) (quote f) 2 (quote m) (quote
l)) (list (quote der) 2)))) (list (quote replaceby) (list (quote times) (list (
quote der) 2) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m)) (list (quote !~) (quote l)))) (list (quote plus) (list (quote minus) (
list (quote times) (quote l) (list (quote fer) (quote f) 1 (list (quote plus) (
quote m) 1)) (list (quote bos) (quote f) 3 (quote m) (list (quote difference) (
quote l) 1)))) (list (quote times) (list (quote bos) (quote f) 3 (quote m) (
quote l)) (list (quote der) 2)))) (list (quote replaceby) (list (quote times) (
list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m)) (list
(quote !~) (quote l))) (list (quote del) 2)) (list (quote plus) (list (quote 
times) (quote l) (list (quote fer) (quote f) 3 (quote m)) (list (quote bos) (
quote f) 1 (quote m) (list (quote difference) (quote l) 1))) (list (quote times)
(list (quote del) 2) (list (quote bos) (quote f) 1 (quote m) (quote l))))) (list
(quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote
f)) 2 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (quote del)
2)) (list (quote plus) (list (quote minus) (list (quote times) (quote l) (list (
quote fer) (quote f) 0 (list (quote plus) (quote m) 1)) (list (quote bos) (quote
f) 2 (quote m) (list (quote difference) (quote l) 1)))) (list (quote times) (
list (quote del) 2) (list (quote bos) (quote f) 2 (quote m) (quote l))))) (list
(quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote
f)) 3 (list (quote !~) (quote m)) (list (quote !~) (quote l))) (list (quote del)
2)) (list (quote plus) (list (quote times) (quote l) (list (quote fer) (quote f)
1 (list (quote plus) (quote m) 1)) (list (quote bos) (quote f) 3 (quote m) (list
(quote difference) (quote l) 1))) (list (quote times) (list (quote del) 2) (list
(quote bos) (quote f) 3 (quote m) (quote l))))))))
(setk (quote drr) (aeval (list (quote list) (list (quote replaceby) (list (quote
expt) (list (quote d) (minus 1)) (list (quote !~) (quote n))) (list (quote when)
(list (quote dr) (list (quote minus) (quote n))) (list (quote neq) (quote n) 1))
) (list (quote replaceby) (list (quote d) (minus 1)) (list (quote dr) (minus 1))
))))
(setk (quote nodrr) (aeval (list (quote list) (list (quote replaceby) (list (
quote dr) (list (quote minus) (list (quote !~) (quote n)))) (list (quote when) (
list (quote expt) (list (quote d) (minus 1)) (quote n)) (list (quote neq) (quote
n) 1))) (list (quote replaceby) (list (quote dr) (minus 1)) (list (quote d) (
minus 1))))))
(setk (quote cutoff) (aeval (list (quote list) (list (quote replaceby) (list (
quote dr) (list (quote !~) (quote n))) (list (quote when) 0 (list (quote lessp)
(quote n) (list (quote minus) (quote cut))))))))
(setk (quote inverse) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote bos) (quote f) (quote n) (quote m) 1)) (list (quote
replaceby) (list (quote fun) (list (quote !~) (quote f)) (list (quote !~) (quote
n))) (list (quote fun) (quote f) (quote n) 1)))))
(!~let (quote ((list (replaceby (times (bos (!~ f) (!~ n) (!~ m) (!~ k)) (bos (
!~ g) (!~ x) (!~ z) (!~ v))) (when (times (bos g x z v) (bos f n m k)) (or (and
(ordp f g) (neq f g)) (and (equal f g) (lessp n x)) (and (equal f g) (equal n x)
(lessp m z))))) (replaceby (times (bos (!~ f) (!~ n) (!~ m)) (bos (!~ g) (!~ x)
(!~ z))) (when (times (bos g x z) (bos f n m)) (or (and (ordp f g) (neq f g)) (
and (equal f g) (lessp n x)) (and (equal f g) (equal n x) (lessp m z))))) (
replaceby (times (bos (!~ f) (!~ n) (!~ m) (!~ k)) (bos (!~ g) (!~ x) (!~ z))) (
when (times (bos g x z) (bos f n m k)) (or (and (ordp f g) (neq f g)) (and (
equal f g) (lessp n x)) (and (equal f g) (equal n x) (lessp m z))))) (replaceby
(times (bos (!~ g) (!~ x) (!~ z)) (bos (!~ f) (!~ n) (!~ m) (!~ k))) (when (
times (bos f n m k) (bos g x z)) (or (and (ordp g f) (neq f g)) (and (equal f g)
(greaterp n x)) (and (equal f g) (equal n x) (greaterp m z))))) (replaceby (
times (bos (!~ f) (!~ n) (!~ m) (!~ k)) (bos (!~ f) (!~ n) (!~ m) (!~ l))) (bos
f n m (plus k l))) (replaceby (expt (bos (!~ f) (!~ n) (!~ m) (!~ k)) 2) (bos f
n m (times 2 k))) (replaceby (bos (!~ f) (!~ n) (!~ m) 0) 1) (replaceby (bos 0 (
!~ f) (!~ n) (!~ m)) 0) (replaceby (bos 0 (!~ f) (!~ n)) 0) (replaceby (times (
bos (!~ f) (!~ n) (!~ m) (!~ k)) (bos (!~ f) (!~ n) (!~ m))) (bos f n m (plus k
1))) (replaceby (times (bos (!~ f) (!~ n) (!~ m)) (bos (!~ f) (!~ n) (!~ m) (!~
k))) (bos f n m (plus k 1))) (replaceby (times (ber (!~ f) (!~ n) (!~ m)) (bos (
!~ g) (!~ k) (!~ x) (!~ l))) (times (bos g k x l) (ber f n m))) (replaceby (
times (fir (!~ f) (!~ n) (!~ m)) (bos (!~ g) (!~ k) (!~ x) (!~ l))) (times (bos
g k x l) (fir f n m))) (replaceby (times (ber (!~ f) (!~ n) (!~ m)) (bos (!~ g)
(!~ k) (!~ l))) (times (bos g k l) (ber f n m))) (replaceby (times (ber (!~ f) (
!~ n) (!~ m)) (fer (!~ g) (!~ k) (!~ l))) (times (fer g k l) (ber f n m))) (
replaceby (times (fir (!~ f) (!~ n) (!~ m)) (bos (!~ g) (!~ k) (!~ l))) (times (
bos g k l) (fir f n m))) (replaceby (times (fir (!~ f) (!~ n) (!~ m)) (fer (!~ g
) (!~ k) (!~ l))) (minus (times (fer g k l) (fir f n m)))) (replaceby (fer 0 (!~
n) (!~ m)) 0) (replaceby (times (bos (!~ f) (!~ n) (!~ m) (!~ y)) (fer (!~ g) (
!~ x) (!~ h))) (times (fer g x h) (bos f n m y))) (replaceby (times (bos (!~ f)
(!~ n) (!~ m)) (fer (!~ g) (!~ x) (!~ h))) (times (fer g x h) (bos f n m))) (
replaceby (expt (fer (!~ f) (!~ n) (!~ m)) 2) 0) (replaceby (times (fer (!~ f) (
!~ n) (!~ m)) (fer (!~ g) (!~ k) (!~ l))) (when (minus (times (fer g k l) (fer f
n m))) (or (and (ordp f g) (neq f g)) (and (equal f g) (lessp n k)) (and (equal
f g) (equal n k) (lessp m l))))) (replaceby (times (fun (!~ f) (!~ n) (!~ m)) (
fun (!~ g) (!~ k) (!~ l))) (when (times (fun g k l) (fun f n m)) (or (and (ordp
f g) (neq f g)) (and (equal f g) (lessp n k)) (and (equal f g) (equal n k) (
lessp m l))))) (replaceby (times (fun (!~ f) (!~ n) (!~ m)) (fun (!~ g) (!~ x)))
(when (times (fun g x) (fun f n m)) (or (and (ordp f g) (neq f g)) (and (equal f
g) (lessp n x))))) (replaceby (times (fun (!~ g) (!~ x)) (fun (!~ f) (!~ n) (!~
m))) (when (times (fun f n m) (fun g x)) (or (and (ordp g f) (neq f g)) (and (
equal f g) (greaterp n x))))) (replaceby (times (fun (!~ f) (!~ n)) (fun (!~ g)
(!~ m))) (when (times (fun g m) (fun f n)) (or (and (ordp f g) (neq f g)) (and (
equal f g) (lessp n m))))) (replaceby (times (fun (!~ f) (!~ n) (!~ m) (!~ k) (
!~ l)) (fun (!~ s) (!~ x))) (times (fun s x) (fun f n m k l))) (replaceby (times
(fun (!~ f) (!~ n) (!~ m) (!~ k) (!~ l)) (fun (!~ s) (!~ x) (!~ z))) (times (fun
s x z) (fun f n m k l))) (replaceby (times (fun (!~ f) (!~ n) (!~ m) (!~ k) (!~
l)) (gras (!~ s) (!~ x))) (times (gras s x) (fun f n m k l))) (replaceby (times
(fun (!~ f) (!~ n) (!~ m) (!~ k) (!~ l)) (tet (!~ s))) (times (tet s) (fun f n m
k l))) (replaceby (times (fun (!~ f) (!~ n) (!~ m) (!~ k) (!~ l)) (fun (!~ s) (
!~ x) (!~ z))) (times (fun s x z) (fun f n m k l))) (replaceby (times (fun (!~ f
) (!~ n) (!~ m)) (gras (!~ g) (!~ x))) (times (gras g x) (fun f n m))) (
replaceby (times (fun (!~ f) (!~ n)) (gras (!~ g) (!~ x))) (times (gras g x) (
fun f n))) (replaceby (times (gras (!~ f) (!~ n)) (gras (!~ g) (!~ m))) (when (
minus (times (gras g m) (gras f n))) (or (and (ordp f g) (neq f g)) (and (equal
f g) (lessp n m))))) (replaceby (times (ber (!~ f) (!~ n)) (fun (!~ g) (!~ m)))
(times (fun g m) (fun f n))) (replaceby (times (ber (!~ f) (!~ n)) (gras (!~ g)
(!~ m))) (times (gras g m) (fun f n))) (replaceby (times (fir (!~ f) (!~ n)) (
fun (!~ g) (!~ m))) (times (fun g m) (fir f n))) (replaceby (times (fir (!~ f) (
!~ n)) (gras (!~ g) (!~ m))) (minus (times (fir g m) (gras f n)))) (replaceby (
expt (gras (!~ f) (!~ n)) 2) 0) (replaceby (fun (!~ f) (!~ n) 0) 1) (replaceby (
fun 0 (!~ n) (!~ m)) 0) (replaceby (fun 0 (!~ n)) 0) (replaceby (gras 0 (!~ n))
0) (replaceby (times (fun (!~ f) (!~ n) (!~ m)) (fun (!~ f) (!~ n) (!~ k))) (fun
f n (plus m k))) (replaceby (expt (fun (!~ f) (!~ n) (!~ m)) 2) (fun f n (times
2 m))) (replaceby (times (fun (!~ f) (!~ n) (!~ m)) (tet (!~ k))) (times (tet k)
(fun f n m))) (replaceby (times (fun (!~ f) (!~ n)) (tet (!~ k))) (times (tet k)
(fun f n))) (replaceby (times (gras (!~ f) (!~ n)) (tet (!~ k))) (minus (times (
tet k) (gras f n)))) (replaceby (times (axx (!~ f)) (fun (!~ g) (!~ n))) (times
(fun g n) (axx f))) (replaceby (times (axx (!~ f)) (gras (!~ g) (!~ n))) (times
(gras g n) (axx f))) (replaceby (times (axx (!~ f)) (fun (!~ g) (!~ n) (!~ m)))
(times (fun g n m) (axx f))) (replaceby (times (axx (!~ f)) (fun (!~ g) (!~ n) (
!~ m) (!~ k) (!~ l))) (times (fun g n m (!~ k) (!~ l)) (axx f))) (replaceby (fun
(!~ f) (!~ n) (!~ g) (!~ m) (!~ k)) (when (prog (s forall!-result) (setq s 0) (
setq forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (aeval!*
(quote k)) s)) (return forall!-result))) (setq forall!-result (aeval!* (list (
quote plus) (aeval!* (list (quote times) (list (quote expt) (minus 1) s) (list (
quote newton) (quote k) s) (list (quote fun) (quote f) (quote n) (list (quote 
difference) (quote k) s)) (list (quote quotient) (list (quote fun) (quote g) (
quote m) s) (list (quote expt) 2 s)))) forall!-result))) (setq s ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) s)) (go lab1)) (
and (numberp k) (geq k 0)))) (replaceby (times (bos (!~ g) (!~ x) (!~ h)) (zan (
!~ f) (!~ n) (!~ m))) (times (zan f n m) (bos g x h))) (replaceby (times (bos (
!~ g) (!~ x) (!~ h) (!~ l)) (zan (!~ f) (!~ n) (!~ m))) (times (zan f n m) (bos
g x h l))) (replaceby (times (fer (!~ g) (!~ x) (!~ h)) (zan (!~ f) (!~ n) (!~ m
))) (times (zan f n m) (fer g x h))) (replaceby (times (bos (!~ g) (!~ x) (!~ h)
) (zen (!~ f) (!~ n) (!~ m))) (times (zen f n m) (bos g x h))) (replaceby (times
(bos (!~ g) (!~ x) (!~ h) (!~ l)) (zen (!~ f) (!~ n) (!~ m))) (times (zen f n m)
(bos g x h l))) (replaceby (times (fer (!~ g) (!~ x) (!~ h)) (zen (!~ f) (!~ n)
(!~ m))) (minus (times (zen f n m) (fer g x h)))) (replaceby (times (axp (!~ g))
(zan (!~ f) (!~ n) (!~ m))) (times (zan f n m) (axp g))) (replaceby (times (axp
(!~ g)) (zen (!~ f) (!~ n) (!~ m))) (times (zen f n m) (axp g))) (replaceby (
times (axp (!~ g)) (bos (!~ f) (!~ n) (!~ m))) (times (bos f n m) (axp g))) (
replaceby (times (axp (!~ g)) (bos (!~ f) (!~ n) (!~ m) (!~ l))) (times (bos f n
m l) (axp g))) (replaceby (times (axp (!~ g)) (fer (!~ f) (!~ n) (!~ m))) (times
(fer f n m) (axp g))) (replaceby (times (axp (!~ f)) (axp (!~ g))) (axp (plus f
g))) (replaceby (expt (axp (!~ f)) (!~ n)) (axp (times n f)))))))
(!~let (list (list (quote list) (list (quote replaceby) (list (quote times) (
list (quote dr) (list (quote !~) (quote n))) (list (quote dr) (list (quote !~) (
quote m)))) (list (quote dr) (list (quote plus) (quote n) (quote m)))) (list (
quote replaceby) (list (quote expt) (list (quote tet) (list (quote !~) (quote n)
)) 2) 0) (list (quote replaceby) (list (quote times) (list (quote tet) (list (
quote !~) (quote n))) (list (quote tet) (list (quote !~) (quote m)))) (list (
quote when) (list (quote minus) (list (quote times) (list (quote tet) (quote m))
(list (quote tet) (quote n)))) (list (quote lessp) (quote n) (quote m)))) (list
(quote replaceby) (list (quote expt) (list (quote !@g_g) (list (quote !~) (quote
f)) (list (quote !~) (quote m)) (list (quote !~) (quote n))) 2) (list (quote 
when) 0 (list (quote or) (list (quote equal) (quote m) 0) (list (quote equal) (
quote m) 3)))) (list (quote replaceby) (list (quote times) (list (quote dr) (
list (quote !~) (quote n))) (list (quote d) 1)) (list (quote dr) (list (quote 
plus) (quote n) 1))) (list (quote replaceby) (list (quote times) (list (quote d)
1) (list (quote dr) (list (quote !~) (quote n)))) (list (quote dr) (list (quote
plus) (quote n) 1))) (list (quote replaceby) (list (quote times) (list (quote dr
) (list (quote !~) (quote n))) (list (quote d) 2)) (list (quote dr) (list (quote
plus) (quote n) 1))) (list (quote replaceby) (list (quote times) (list (quote d)
2) (list (quote dr) (list (quote !~) (quote n)))) (list (quote dr) (list (quote
plus) (quote n) 1))) (list (quote replaceby) (list (quote times) (list (quote 
der) (list (quote !~) (quote m))) (list (quote dr) (list (quote !~) (quote n))))
(list (quote times) (list (quote dr) (quote n)) (list (quote der) (quote m)))) (
list (quote replaceby) (list (quote times) (list (quote dr) (list (quote !~) (
quote n))) (list (quote del) (list (quote !~) (quote m)))) (list (quote times) (
list (quote del) (quote m)) (list (quote dr) (quote n)))) (list (quote replaceby
) (list (quote expt) (list (quote dr) (list (quote !~) (quote n))) 2) (list (
quote dr) (list (quote times) 2 (quote n)))) (list (quote replaceby) (list (
quote axp) 0) 1) (list (quote replaceby) (list (quote axx) 0) 1) (list (quote 
replaceby) (list (quote dr) 0) 1) (list (quote replaceby) (list (quote der) 0) 1
) (list (quote replaceby) (list (quote times) (list (quote der) (list (quote !~)
(quote n))) (list (quote d) (list (quote !~) (quote m)))) (list (quote when) (
list (quote times) (list (quote d) (quote m)) (list (quote der) (quote n))) (
list (quote neq) (quote m) (quote t)))) (list (quote replaceby) (list (quote 
times) (list (quote d) 1) (list (quote del) (list (quote !~) (quote n)))) (list
(quote times) (list (quote del) (quote n)) (list (quote d) 1))) (list (quote 
replaceby) (list (quote times) (list (quote del) (list (quote !~) (quote n))) (
list (quote d) 2)) (list (quote times) (list (quote d) 2) (list (quote del) (
quote n)))) (list (quote replaceby) (list (quote times) (list (quote d) (minus 1
)) (list (quote del) (list (quote !~) (quote n)))) (list (quote times) (list (
quote del) (quote n)) (list (quote d) (minus 1)))) (list (quote replaceby) (list
(quote times) (list (quote del) (list (quote !~) (quote n))) (list (quote d) (
minus 2))) (list (quote times) (list (quote d) (minus 2)) (list (quote del) (
quote n)))) (list (quote replaceby) (list (quote times) (list (quote d) (minus 3
)) (list (quote del) (list (quote !~) (quote n)))) (list (quote times) (list (
quote del) (quote n)) (list (quote d) (minus 3)))) (list (quote replaceby) (list
(quote times) (list (quote del) (list (quote !~) (quote n))) (list (quote d) (
minus 4))) (list (quote times) (list (quote d) (minus 4)) (list (quote del) (
quote n)))) (list (quote replaceby) (list (quote times) (list (quote d) 1) (list
(quote d) (minus 1))) 1) (list (quote replaceby) (list (quote times) (list (
quote d) (minus 1)) (list (quote d) 1)) 1) (list (quote replaceby) (list (quote
times) (list (quote d) 1) (list (quote d) (minus 2))) 1) (list (quote replaceby)
(list (quote times) (list (quote d) (minus 2)) (list (quote d) 1)) 1) (list (
quote replaceby) (list (quote times) (list (quote d) 1) (list (quote d) (minus 3
))) 1) (list (quote replaceby) (list (quote times) (list (quote d) (minus 3)) (
list (quote d) 1)) 1) (list (quote replaceby) (list (quote times) (list (quote d
) 1) (list (quote d) (minus 4))) 1) (list (quote replaceby) (list (quote times)
(list (quote d) (minus 4)) (list (quote d) 1)) 1) (list (quote replaceby) (list
(quote times) (list (quote d) 3) (list (quote d) (minus 1))) 1) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote d) 3)) 1)
(list (quote replaceby) (list (quote times) (list (quote d) 3) (list (quote d) (
minus 2))) 1) (list (quote replaceby) (list (quote times) (list (quote d) (minus
2)) (list (quote d) 3)) 1) (list (quote replaceby) (list (quote times) (list (
quote d) 3) (list (quote d) (minus 4))) 1) (list (quote replaceby) (list (quote
times) (list (quote d) (minus 4)) (list (quote d) 3)) 1) (list (quote replaceby)
(list (quote times) (list (quote d) 2) (list (quote d) (minus 1))) 1) (list (
quote replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote d)
2)) 1) (list (quote replaceby) (list (quote times) (list (quote d) 2) (list (
quote d) (minus 2))) 1) (list (quote replaceby) (list (quote times) (list (quote
d) (minus 2)) (list (quote d) 2)) 1) (list (quote replaceby) (list (quote times)
(list (quote d) 2) (list (quote d) (minus 3))) 1) (list (quote replaceby) (list
(quote times) (list (quote d) (minus 3)) (list (quote d) 2)) 1) (list (quote 
replaceby) (list (quote times) (list (quote d) 2) (list (quote d) (minus 4))) 1)
(list (quote replaceby) (list (quote times) (list (quote d) (minus 4)) (list (
quote d) 2)) 1) (list (quote replaceby) (list (quote times) (list (quote d) 3) (
list (quote d) (minus 3))) 1) (list (quote replaceby) (list (quote times) (list
(quote d) 1) (list (quote d) 3)) (list (quote times) (list (quote d) 3) (list (
quote d) 1))) (list (quote replaceby) (list (quote times) (list (quote d) (minus
3)) (list (quote d) 3)) 1) (list (quote replaceby) (list (quote times) (list (
quote d) (quote t)) (list (quote d) 1)) (list (quote times) (list (quote d) 1) (
list (quote d) (quote t)))) (list (quote replaceby) (list (quote times) (list (
quote d) (quote t)) (list (quote d) 2)) (list (quote times) (list (quote d) 2) (
list (quote d) (quote t)))) (list (quote replaceby) (list (quote times) (list (
quote d) (quote t)) (list (quote der) (list (quote !~) (quote n)))) (list (quote
times) (list (quote der) (quote n)) (list (quote d) (quote t)))) (list (quote 
replaceby) (list (quote times) (list (quote d) (quote t)) (list (quote del) (
list (quote !~) (quote n)))) (list (quote times) (list (quote del) (quote n)) (
list (quote d) (quote t)))) (list (quote replaceby) (list (quote times) (list (
quote d) (quote t)) (list (quote d) (minus 1))) (list (quote times) (list (quote
d) (minus 1)) (list (quote d) (quote t)))) (list (quote replaceby) (list (quote
times) (list (quote d) (quote t)) (list (quote d) (minus 2))) (list (quote times
) (list (quote d) (minus 2)) (list (quote d) (quote t)))) (list (quote replaceby
) (list (quote expt) (quote !@x_y) 2) 1) (list (quote replaceby) (list (quote 
times) (list (quote d) (quote t)) (list (quote d) (minus 3))) (list (quote times
) (list (quote d) (minus 3)) (list (quote d) (quote t)))) (list (quote replaceby
) (list (quote times) (list (quote d) (quote t)) (list (quote d) (minus 4))) (
list (quote times) (list (quote d) (minus 4)) (list (quote d) (quote t)))) (list
(quote replaceby) (list (quote abs) (quote !#ll)) 1) (list (quote replaceby) (
list (quote delta) (list (quote !~) (quote f)) (list (quote !~) (quote g))) (
list (quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (
quote f))) (list (quote aeval) (quote (quote g)))) 1) (list (quote t) 0))) (list
(quote replaceby) (list (quote bf_part) (list (quote !~) (quote wx)) (list (
quote !~) (quote n))) (list (quote part) (list (quote fpart) (quote wx)) (list (
quote plus) (quote n) 1))) (list (quote replaceby) (list (quote b_part) (list (
quote !~) (quote wx)) (list (quote !~) (quote n))) (list (quote part) (list (
quote bpart) (quote wx)) (list (quote plus) (quote n) 1))) (list (quote 
replaceby) (list (quote pg) (list (quote !~) (quote n)) (list (quote !~) (quote
x))) (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (list (quote 
times) (list (quote expt) (list (quote d) 1) (quote n)) (quote x)))) (list (
quote replaceby) (list (quote chan) (list (quote !~) (quote x))) (list (quote 
sub) (list (quote equal) (list (quote d) 2) (list (quote d) 1)) (list (quote sub
) (list (quote equal) (list (quote d) 1) (list (quote d) 2)) (quote x)))) (list
(quote replaceby) (list (quote s_part) (list (quote !~) (quote x)) (list (quote
!~) (quote n))) (list (quote coeffn) (list (quote sub) (list (quote equal) (list
(quote der) 1) (quote !@k)) (list (quote equal) (list (quote der) 2) (list (
quote expt) (quote !@k) 2)) (list (quote equal) (list (quote der) 3) (list (
quote expt) (quote !@k) 3)) (list (quote equal) (list (quote del) 1) (quote !@k)
) (list (quote equal) (list (quote del) 2) (list (quote expt) (quote !@k) 2)) (
list (quote equal) (list (quote der) 3) (list (quote expt) (quote !@k) 3)) (
quote x)) (quote !@k) (quote n))) (list (quote replaceby) (list (quote newton) (
list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote quotient) (
list (quote factorial) (quote n)) (list (quote times) (list (quote factorial) (
quote m)) (list (quote factorial) (list (quote difference) (quote n) (quote m)))
))) (list (quote replaceby) (list (quote prykr) (list (quote !~) (quote f)) (
list (quote !~) (quote g))) (list (quote cond) (list (list (quote evalequal) (
list (quote aeval) (quote (quote g))) 1) (list (quote aeval) (list (quote list)
(quote (quote times)) (list (quote list) (quote (quote der)) 1) (quote (quote f)
)))) (list (list (quote evalequal) (list (quote aeval) (quote (quote g))) 2) (
list (quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote der)) 2) (quote (quote f))))))) (list (quote replaceby) (list (
quote prykl) (list (quote !~) (quote f)) (list (quote !~) (quote g))) (list (
quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote g)))
1) (list (quote aeval) (list (quote list) (quote (quote times)) (quote (quote f)
) (list (quote list) (quote (quote del)) 1)))) (list (list (quote evalequal) (
list (quote aeval) (quote (quote g))) 2) (list (quote aeval) (list (quote list)
(quote (quote times)) (quote (quote f)) (list (quote list) (quote (quote del)) 2
)))))))))
(!~let (quote ((list (replaceby (times (bos (!~ f) (!~ n) (!~ m)) (stp (!~ x)))
(times (stp x) (bos f n m))) (replaceby (times (bos (!~ f) (!~ n) (!~ m) (!~ l))
(stp (!~ x))) (times (stp x) (bos f n m l))) (replaceby (times (axp (!~ f)) (stp
(!~ x))) (times (stp x) (axp f))) (replaceby (times (d (!~ n)) (stp (!~ x))) (
minus (times (stp x) (d n)))) (replaceby (times (der (!~ k)) (stp 1)) (when (
times (stp 2) (der k)) (neq k 3))) (replaceby (times (der (!~ k)) (stp 2)) (when
(minus (times (stp 1) (der k))) (neq k 3))) (replaceby (times (del (!~ k)) (stp
1)) (when (minus (del k)) (neq k 3))) (replaceby (times (del (!~ k)) (stp 2)) (
when (minus (times (stp 1) (del k))) (neq k 3))) (replaceby (times (der 3) (stp
(!~ x))) (times (stp x) (der 3))) (replaceby (times (del 3) (stp (!~ x))) (times
(stp x) (der 3))) (replaceby (times (del (!~ x)) (stp 10)) (when (times (stp 20)
(del x)) (neq x 3))) (replaceby (times (del (!~ x)) (stp 20)) (when (minus (
times (stp 10) (del x))) (neq x 3))) (replaceby (times (fer (!~ f) (!~ n) (!~ m)
) (stp 1)) (times (stp 10) (fer f n m))) (replaceby (times (fer (!~ f) (!~ n) (
!~ m)) (stp 10)) (minus (times (stp 20) (fer f n m)))) (replaceby (times (fer (
!~ f) (!~ n) (!~ m)) (stp 20)) (times (stp 10) (fer f n m))) (replaceby (times (
fer (!~ f) (!~ n) (!~ m)) (stp 2)) (times (stp 10) (fer f n m)))))))
(setk (quote tryk) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote d) (list (quote !~) (quote f))) (list (quote fer) (
list (quote !~) (quote g)) (list (quote !~) (quote n)) (list (quote !~) (quote m
)))) (list (quote plus) (list (quote times) (list (quote delta) (quote f) (quote
g)) (list (quote zen) (quote g) (quote n) (quote m))) (list (quote times) (list
(quote fer) (quote g) (quote n) (quote m)) (list (quote d) (quote f))))) (list (
quote replaceby) (list (quote times) (list (quote d) (list (quote !~) (quote f))
) (list (quote bos) (list (quote !~) (quote g)) (list (quote !~) (quote n)) (
list (quote !~) (quote m)))) (list (quote plus) (list (quote times) (list (quote
delta) (quote f) (quote g)) (list (quote zan) (quote g) (quote n) (quote m))) (
list (quote times) (list (quote bos) (quote g) (quote n) (quote m)) (list (quote
d) (quote f))))) (list (quote replaceby) (list (quote times) (list (quote d) (
list (quote !~) (quote f))) (list (quote bos) (list (quote !~) (quote g)) (list
(quote !~) (quote n)) (list (quote !~) (quote m)) (list (quote !~) (quote l))))
(list (quote plus) (list (quote times) (quote l) (list (quote delta) (quote f) (
quote g)) (list (quote zan) (quote g) (quote n) (quote m)) (list (quote bos) (
quote g) (quote n) (quote m) (list (quote difference) (quote l) 1))) (list (
quote times) (list (quote bos) (quote g) (quote n) (quote m) (quote l)) (list (
quote d) (quote f))))) (list (quote replaceby) (list (quote times) (list (quote
d) (list (quote !~) (quote f))) (list (quote axp) (list (quote !~) (quote g))))
(list (quote plus) (list (quote times) (list (quote axp) (quote g)) (list (quote
difference) (list (quote times) (list (quote d) (quote f)) (quote g)) (list (
quote times) (quote g) (list (quote d) (quote f))))) (list (quote times) (list (
quote axp) (quote g)) (list (quote d) (quote f))))))))
(setk (quote tryk1) (aeval (list (quote list) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) 0 (list (quote !~) (quote m))) (list (
quote times) (list (quote expt) (minus 1) (quote m)) (list (quote expt) (list (
quote d) 1) (quote m)))) (list (quote replaceby) (list (quote zan) (list (quote
!~) (quote f)) 3 (list (quote !~) (quote m))) (list (quote cond) (list (list (
quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 2) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote expt)) (list (quote minus) 1) (quote (quote m))) (list (quote list) (
quote (quote der)) 1) (list (quote list) (quote (quote der)) 2) (list (quote 
list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote
m)))))) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 1) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (list (quote list
) (quote (quote plus)) (quote (quote m)) 1)) (list (quote list) (quote (quote 
der)) 2) (list (quote list) (quote (quote der)) 1) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote m)))))) (list
(list (quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 3) (
list (quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote expt)) (list (quote minus) 1) (quote (quote m))) (list (quote list)
(quote (quote der)) 3) (list (quote list) (quote (quote expt)) (list (quote list
) (quote (quote d)) 1) (quote (quote m)))))))) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (
quote times) (list (quote expt) (minus 1) (quote m)) (list (quote der) 1) (list
(quote expt) (list (quote d) 1) (quote m)))) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote times) (list (quote expt) (minus 1) (quote m)) (list (quote der) 2) (list
(quote expt) (list (quote d) 1) (quote m)))) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (
quote times) (list (quote expt) (minus 1) (list (quote plus) (quote m) 1)) (list
(quote der) 1) (list (quote expt) (list (quote d) 1) (quote m)))) (list (quote 
replaceby) (list (quote zen) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote m))) (list (quote times) (list (quote expt) (minus 1) (list (quote plus) (
quote m) 1)) (list (quote der) 2) (list (quote expt) (list (quote d) 1) (quote m
)))) (list (quote replaceby) (list (quote zen) (list (quote !~) (quote f)) 0 (
list (quote !~) (quote m))) (list (quote times) (list (quote expt) (minus 1) (
quote m)) (list (quote expt) (list (quote d) 1) (quote m)))) (list (quote 
replaceby) (list (quote zen) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m))) (list (quote cond) (list (list (quote evalequal) (list (quote aeval)
(quote (quote abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote m))) (list (quote list) (quote (quote der)) 1) (list (quote list) (
quote (quote der)) 2) (list (quote list) (quote (quote expt)) (list (quote list)
(quote (quote d)) 1) (quote (quote m)))))) (list (list (quote evalequal) (list (
quote aeval) (quote (quote abra_kadabra))) 1) (list (quote aeval) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote expt)) (list (quote
minus) 1) (list (quote list) (quote (quote plus)) (quote (quote m)) 1)) (list (
quote list) (quote (quote der)) 2) (list (quote list) (quote (quote der)) 1) (
list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (
quote (quote m)))))) (list (list (quote evalequal) (list (quote aeval) (quote (
quote abra_kadabra))) 3) (list (quote aeval) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (
quote m))) (list (quote list) (quote (quote der)) 3) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote m)))))))))))
(setk (quote tryk2) (aeval (list (quote list) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) 0 (list (quote !~) (quote m))) (list (
quote times) (list (quote bos) (quote f) 0 0) (list (quote expt) (minus 1) (
quote m)) (list (quote expt) (list (quote d) 1) (quote m)))) (list (quote 
replaceby) (list (quote zan) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m))) (list (quote times) (list (quote bos) (quote f) 0 0) (list (quote 
cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote m))
) (list (quote list) (quote (quote der)) 1) (list (quote list) (quote (quote der
)) 2) (list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d
)) 1) (quote (quote m)))))) (list (list (quote evalequal) (list (quote aeval) (
quote (quote abra_kadabra))) 1) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
list (quote list) (quote (quote plus)) (quote (quote m)) 1)) (list (quote list)
(quote (quote der)) 2) (list (quote list) (quote (quote der)) 1) (list (quote 
list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote
m)))))) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 3) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote m))
) (list (quote list) (quote (quote der)) 3) (list (quote list) (quote (quote 
expt)) (list (quote list) (quote (quote d)) 1) (quote (quote m))))))))) (list (
quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 1 (list (quote !~
) (quote m))) (list (quote times) (list (quote fer) (quote f) 0 0) (list (quote
expt) (minus 1) (quote m)) (list (quote der) 1) (list (quote expt) (list (quote
d) 1) (quote m)))) (list (quote replaceby) (list (quote zan) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m))) (list (quote times) (list (quote fer) (
quote f) 0 0) (list (quote expt) (minus 1) (quote m)) (list (quote der) 2) (list
(quote expt) (list (quote d) 1) (quote m)))) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (
quote times) (list (quote bos) (quote f) 0 0) (list (quote expt) (minus 1) (list
(quote plus) (quote m) 1)) (list (quote der) 1) (list (quote expt) (list (quote
d) 1) (quote m)))) (list (quote replaceby) (list (quote zen) (list (quote !~) (
quote f)) 2 (list (quote !~) (quote m))) (list (quote times) (list (quote bos) (
quote f) 0 0) (list (quote expt) (minus 1) (list (quote plus) (quote m) 1)) (
list (quote der) 2) (list (quote expt) (list (quote d) 1) (quote m)))) (list (
quote replaceby) (list (quote zen) (list (quote !~) (quote f)) 0 (list (quote !~
) (quote m))) (list (quote times) (list (quote fer) (quote f) 0 0) (list (quote
expt) (minus 1) (quote m)) (list (quote expt) (list (quote d) 1) (quote m)))) (
list (quote replaceby) (list (quote zen) (list (quote !~) (quote f)) 3 (list (
quote !~) (quote m))) (list (quote times) (list (quote fer) (quote f) 0 0) (list
(quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote m))
) (list (quote list) (quote (quote der)) 1) (list (quote list) (quote (quote der
)) 2) (list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d
)) 1) (quote (quote m)))))) (list (list (quote evalequal) (list (quote aeval) (
quote (quote abra_kadabra))) 1) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
list (quote list) (quote (quote plus)) (quote (quote m)) 1)) (list (quote list)
(quote (quote der)) 2) (list (quote list) (quote (quote der)) 1) (list (quote 
list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote
m)))))) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 3) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote m))
) (list (quote list) (quote (quote der)) 3) (list (quote list) (quote (quote 
expt)) (list (quote list) (quote (quote d)) 1) (quote (quote m))))))))))))
(setk (quote tryk3) (aeval (list (quote list) (list (quote replaceby) (list (
quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) 1) (list (quote replaceby) (list (quote bos) (list (quote !~) (
quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m))) 1) (list (
quote replaceby) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~)
(quote n)) (list (quote !~) (quote m)) (list (quote !~) (quote l))) 1) (list (
quote replaceby) (list (quote axp) (list (quote !~) (quote f))) 1))))
(setk (quote tryk4) (aeval (list (quote list) (list (quote replaceby) (list (
quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) 1) (list (quote replaceby) (list (quote bos) (list (quote !~) (
quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m))) 1) (list (
quote replaceby) (list (quote axp) (list (quote !~) (quote f))) 1) (list (quote
replaceby) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote
n)) (list (quote !~) (quote m)) (list (quote !~) (quote l))) 1) (list (quote 
replaceby) (list (quote der) (list (quote !~) (quote n))) 1) (list (quote 
replaceby) (list (quote d) (list (quote !~) (quote n))) 1) (list (quote 
replaceby) (list (quote del) (list (quote !~) (quote n))) 1))))
(setk (quote tryk5) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote m)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote evalequal) (list (quote 
aeval) (quote (quote m))) 0) (list (quote aeval) (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (quote (quote n))) (list (quote list) (quote
(quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n)
))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 2) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 2)) (quote (quote n)))) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet
)) 1) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 1) (quote (quote n))))))) (list (list (quote 
evalequal) (list (quote aeval) (quote (quote m))) 1) (list (quote aeval) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote difference)) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 0) (quote (quote n))) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote gras)
) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list)
(quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))))) (list (quote 
list) (quote (quote difference)) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
))))))) (list (list (quote evalequal) (list (quote aeval) (quote (quote m))) 2)
(list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1
) (quote (quote n))) (list (quote list) (quote (quote times)) (list (quote list)
(quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 2)) (quote (quote n)))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote list)
(quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1)))))) (list (list (quote evalequal) (list (quote 
aeval) (quote (quote m))) 3) (list (quote aeval) (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote tet)) 1) (list (quote list) (quote (quote gras)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) 2)) (list (quote list) (quote (quote plus)) (quote (quote n)
) 1))) (list (quote list) (quote (quote difference)) (list (quote list) (quote (
quote difference)) (list (quote list) (quote (quote fun)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n))) (list (quote list)
(quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote 
list) (quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (
quote plus)) (quote (quote n)) 2)))) (list (quote list) (quote (quote times)) (
list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote gras))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1))))))) (list (quote t) (list (quote aeval) (list (
quote rederr) (list (quote revalx) " wrong values of arguments")))))) (list (
quote replaceby) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~)
(quote m)) (list (quote !~) (quote n))) (list (quote cond) (list (list (quote 
evalequal) (list (quote aeval) (quote (quote m))) 0) (list (quote aeval) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1)) (quote (quote n))) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list
) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)
) 0) (quote (quote n)))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 2) (list (quote list) (quote (quote fun)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (
list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))))))) (list (list (
quote evalequal) (list (quote aeval) (quote (quote m))) 1) (list (quote aeval) (
list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 1)) (quote (quote n))) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote fun))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n))
))) (list (quote list) (quote (quote difference)) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0
) (list (quote list) (quote (quote plus)) (quote (quote n)) 1))) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (
quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) 2)) (list (quote list) (quote (quote plus)) (
quote (quote n)) 1))))))) (list (list (quote evalequal) (list (quote aeval) (
quote (quote m))) 2) (list (quote aeval) (list (quote list) (quote (quote plus))
(list (quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
2)) (quote (quote n))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (
quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1)))))) (list (list (quote evalequal) (
list (quote aeval) (quote (quote m))) 3) (list (quote aeval) (list (quote list)
(quote (quote plus)) (list (quote list) (quote (quote times)) (list (quote list)
(quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote list)
(quote (quote !~mkid)) (quote (quote f)) 1) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote difference)) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (
list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 2)))) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote fun)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1))))))) (list (quote t) (list (quote 
aeval) (list (quote rederr) (list (quote revalx) "wrong values of arguments"))))
)) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)) (list (
quote !~) (quote m)) (list (quote !~) (quote n)) (list (quote !~) (quote l))) (
list (quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (
quote m))) 0) (list (quote aeval) (list (quote list) (quote (quote plus)) (list
(quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 0) (quote (quote n)) (quote (quote l))) (list (quote list) (
quote (quote times)) (quote (quote l)) (list (quote list) (quote (quote fun)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n))
(list (quote list) (quote (quote difference)) (quote (quote l)) 1)) (list (quote
list) (quote (quote plus)) (list (quote list) (quote (quote times)) (list (quote
list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2
) (list (quote list) (quote (quote gras)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote g)) 2) (quote (quote n)))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote plus)) (list (quote list)
(quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
1) (quote (quote n)) 1) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote difference)) (quote (quote l)) 1) (list (quote list) (quote
(quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (
quote (quote n)) (list (quote minus) 1)) (list (quote list) (quote (quote gras))
(list (quote list) (quote (quote !~mkid)) (quote (quote g)) 1) (quote (quote n))
) (list (quote list) (quote (quote gras)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote g)) 2) (quote (quote n))))))))))) (list (list (quote 
evalequal) (list (quote aeval) (quote (quote m))) 1) (list (quote aeval) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (quote
(quote l))) (list (quote list) (quote (quote times)) (quote (quote l)) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 0) (quote (quote n)) (list (quote list) (quote (quote difference)) (
quote (quote l)) 1)) (list (quote list) (quote (quote plus)) (list (quote list)
(quote (quote difference)) (list (quote list) (quote (quote times)) (list (quote
list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote g)) 1) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (
quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote g)) 2) (
quote (quote n))))) (list (quote list) (quote (quote times)) (list (quote list)
(quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote 
list) (quote (quote difference)) (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1) 1) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote difference)) (quote (quote l)) 1) (list
(quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 0) (quote (quote n)) (list (quote minus) 1)) (list (quote list)
(quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote g))
1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)) (list (quote 
list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (
quote g)) 2) (quote (quote n))))))))))) (list (list (quote evalequal) (list (
quote aeval) (quote (quote m))) 2) (list (quote aeval) (list (quote list) (quote
(quote plus)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1) (quote (quote n)) (quote (quote l))) (list (
quote list) (quote (quote times)) (quote (quote l)) (list (quote list) (quote (
quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (
quote (quote n)) (list (quote list) (quote (quote difference)) (quote (quote l))
1)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (
quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote g)) 2) (
quote (quote n)))) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote tet)) 2) (list (quote list) (quote (quote gras)) (list (quote list)
(quote (quote !~mkid)) (quote (quote g)) 1) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (
quote list) (quote (quote plus)) (quote (quote n)) 1) 1) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote difference)) (quote (quote
l)) 1) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 1) (quote (quote n)) (list (quote minus) 1)) (list (
quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (
quote (quote g)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)
) (list (quote list) (quote (quote gras)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote g)) 2) (quote (quote n))))))))))) (list (list (quote 
evalequal) (list (quote aeval) (quote (quote m))) 3) (list (quote aeval) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)) (quote
(quote l))) (list (quote list) (quote (quote times)) (quote (quote l)) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 1) (quote (quote n)) (list (quote list) (quote (quote difference)) (
quote (quote l)) 1)) (list (quote list) (quote (quote plus)) (list (quote list)
(quote (quote difference)) (list (quote list) (quote (quote times)) (list (quote
list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote g)) 2) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (
quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote g)) 1) (
list (quote list) (quote (quote plus)) (quote (quote n)) 1)))) (list (quote list
) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote 
list) (quote (quote tet)) 1) (list (quote list) (quote (quote plus)) (list (
quote list) (quote (quote minus)) (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (
quote (quote plus)) (quote (quote n)) 1) 1)) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote difference)) (quote (quote l)) 1) (list
(quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 1) (quote (quote n)) (list (quote minus) 1)) (list (quote list)
(quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote g))
1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)) (list (quote 
list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (
quote g)) 2) (list (quote list) (quote (quote plus)) (quote (quote n)) 1))))))))
)) (list (quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx)
"wrong values of arguments")))))) (list (quote replaceby) (list (quote axp) (
list (quote !~) (quote f))) (list (quote times) (list (quote axx) (list (quote 
bf_part) (quote f) 0)) (list (quote plus) 1 (list (quote times) (list (quote tet
) 1) (list (quote bf_part) (quote f) 1)) (list (quote times) (list (quote tet) 2
) (list (quote bf_part) (quote f) 2)) (list (quote times) (list (quote tet) 2) (
list (quote tet) 1) (list (quote plus) (list (quote bf_part) (quote f) 3) (list
(quote times) 2 (list (quote bf_part) (quote f) 1) (list (quote bf_part) (quote
f) 2))))))))))
(setk (quote tryk6) (aeval (list (quote list) (list (quote replaceby) (list (
quote gras) (list (quote !~) (quote f)) (list (quote !~) (quote n))) 0))))
(setk (quote tryk7) (aeval (list (quote list) (list (quote replaceby) (list (
quote !@f_f) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (list (
quote bos) (quote f) 0 (quote n))) (list (quote replaceby) (list (quote !@f_f) (
list (quote !~) (quote f)) 1 (list (quote !~) (quote n))) (list (quote cond) (
list (list (quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 2
) (list (quote aeval) (list (quote list) (quote (quote bos)) (quote (quote f)) 1
(quote (quote n))))) (list (list (quote not) (list (quote freeof) (list (quote 
revalx) (quote (quote f_chiral))) (list (quote revalx) (quote (quote f))))) 0) (
list (quote t) (list (quote aeval) (list (quote list) (quote (quote bos)) (quote
(quote f)) 1 (quote (quote n))))))) (list (quote replaceby) (list (quote !@f_f)
(list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (quote cond) (
list (list (quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 2
) (list (quote aeval) (list (quote list) (quote (quote bos)) (quote (quote f)) 2
(quote (quote n))))) (list (list (quote not) (list (quote freeof) (list (quote 
revalx) (quote (quote f_antychiral))) (list (quote revalx) (quote (quote f)))))
0) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote bos)) (
quote (quote f)) 2 (quote (quote n))))))) (list (quote replaceby) (list (quote 
!@f_f) (list (quote !~) (quote f)) 3 (list (quote !~) (quote n))) (list (quote 
cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (quote bos)) (
quote (quote f)) 3 (quote (quote n))))) (list (list (quote not) (list (quote 
freeof) (list (quote revalx) (quote (quote b_chiral))) (list (quote revalx) (
quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote minus))
(list (quote list) (quote (quote bos)) (quote (quote f)) 0 (list (quote list) (
quote (quote plus)) (quote (quote n)) 1))))) (list (list (quote and) (list (
quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 1) (list (
quote not) (list (quote freeof) (list (quote revalx) (quote (quote b_antychiral)
)) (list (quote revalx) (quote (quote f)))))) 0) (list (list (quote and) (list (
quote evalequal) (list (quote aeval) (quote (quote abra_kadabra))) 3) (list (
quote not) (list (quote freeof) (list (quote revalx) (quote (quote b_antychiral)
)) (list (quote revalx) (quote (quote f)))))) (list (quote aeval) (list (quote 
list) (quote (quote bos)) (quote (quote f)) 0 (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1)))) (list (quote t) (list (quote aeval) (list (quote
list) (quote (quote bos)) (quote (quote f)) 3 (quote (quote n))))))) (list (
quote replaceby) (list (quote !@g_g) (list (quote !~) (quote f)) 0 (list (quote
!~) (quote n))) (list (quote fer) (quote f) 0 (quote n))) (list (quote replaceby
) (list (quote !@g_g) (list (quote !~) (quote f)) 1 (list (quote !~) (quote n)))
(list (quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (
quote abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (quote 
fer)) (quote (quote f)) 1 (quote (quote n))))) (list (list (quote not) (list (
quote freeof) (list (quote revalx) (quote (quote b_chiral))) (list (quote revalx
) (quote (quote f))))) 0) (list (quote t) (list (quote aeval) (list (quote list)
(quote (quote fer)) (quote (quote f)) 1 (quote (quote n))))))) (list (quote 
replaceby) (list (quote !@g_g) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote n))) (list (quote cond) (list (list (quote evalequal) (list (quote aeval)
(quote (quote abra_kadabra))) 2) (list (quote aeval) (list (quote list) (quote (
quote fer)) (quote (quote f)) 2 (quote (quote n))))) (list (list (quote not) (
list (quote freeof) (list (quote revalx) (quote (quote b_antychiral))) (list (
quote revalx) (quote (quote f))))) 0) (list (quote t) (list (quote aeval) (list
(quote list) (quote (quote fer)) (quote (quote f)) 2 (quote (quote n))))))) (
list (quote replaceby) (list (quote !@g_g) (list (quote !~) (quote f)) 3 (list (
quote !~) (quote n))) (list (quote cond) (list (list (quote evalequal) (list (
quote aeval) (quote (quote abra_kadabra))) 2) (list (quote aeval) (list (quote 
list) (quote (quote fer)) (quote (quote f)) 3 (quote (quote n))))) (list (list (
quote not) (list (quote freeof) (list (quote revalx) (quote (quote f_chiral))) (
list (quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list)
(quote (quote minus)) (list (quote list) (quote (quote fer)) (quote (quote f)) 0
(list (quote list) (quote (quote plus)) (quote (quote n)) 1))))) (list (list (
quote and) (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 1) (list (quote not) (list (quote freeof) (list (quote revalx) (
quote (quote f_antychiral))) (list (quote revalx) (quote (quote f)))))) 0) (list
(list (quote and) (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 3) (list (quote not) (list (quote freeof) (list (quote revalx) (
quote (quote f_antychiral))) (list (quote revalx) (quote (quote f)))))) (list (
quote aeval) (list (quote list) (quote (quote fer)) (quote (quote f)) 0 (list (
quote list) (quote (quote plus)) (quote (quote n)) 1)))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote fer)) (quote (quote f)) 3 (quote (
quote n))))))))))
(setk (quote tryk8) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote plus) (list (quote berz) (quote f) (quote n) (quote
m)) (list (quote times) (quote eps) (list (quote ber) (quote f) (quote n) (quote
m))))) (list (quote replaceby) (list (quote fer) (list (quote !~) (quote f)) (
list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote plus) (list
(quote firr) (quote f) (quote n) (quote m)) (list (quote times) (quote eps) (
list (quote fir) (quote f) (quote n) (quote m))))) (list (quote replaceby) (list
(quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m)) (list (quote !~) (quote l))) (list (quote plus) (list (quote berz
) (quote f) (quote n) (quote m) (quote l)) (list (quote times) (quote l) (quote
eps) (list (quote berz) (quote f) (quote n) (quote m) (list (quote difference) (
quote l) 1)) (list (quote ber) (quote f) (quote n) (quote m))))))))
(setk (quote tryk9) (aeval (list (quote list) (list (quote replaceby) (list (
quote berz) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote bos) (quote f) (quote n) (quote m))) (list (quote 
replaceby) (list (quote firr) (list (quote !~) (quote f)) (list (quote !~) (
quote n)) (list (quote !~) (quote m))) (list (quote fer) (quote f) (quote n) (
quote m))) (list (quote replaceby) (list (quote berz) (list (quote !~) (quote f)
) (list (quote !~) (quote n)) (list (quote !~) (quote m)) (list (quote !~) (
quote l))) (list (quote bos) (quote f) (quote n) (quote m) (quote l))))))
(setk (quote tryk10) (aeval (list (quote list) (list (quote replaceby) (list (
quote fir) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote pg) (quote m) (list (quote pr) (quote n) (list (
quote bos) (quote f))))) (list (quote replaceby) (list (quote ber) (list (quote
!~) (quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (
quote pg) (quote m) (list (quote pr) (quote n) (list (quote bos) (quote f)))))))
)
(setk (quote tryk11) (aeval (list (quote list) (list (quote replaceby) (list (
quote !#a) (list (quote !~) (quote n))) (list (quote !#aa) (quote n))) (list (
quote replaceby) (list (quote !#b) (list (quote !~) (quote n))) (list (quote 
!#bb) (quote n))) (list (quote replaceby) (list (quote !#c) (list (quote !~) (
quote n))) (list (quote !#cc) (quote n))))))
(setk (quote tryk12) (aeval (list (quote list) (list (quote replaceby) (list (
quote !#aa) (list (quote !~) (quote n))) (list (quote !#b) (quote n))) (list (
quote replaceby) (list (quote !#bb) (list (quote !~) (quote n))) (list (quote 
!#c) (quote n))) (list (quote replaceby) (list (quote !#cc) (list (quote !~) (
quote n))) (list (quote !#a) (quote n))))))
(setk (quote tryk13) (aeval (list (quote list) (list (quote replaceby) (list (
quote !#aa) (list (quote !~) (quote n))) (list (quote !#c) (quote n))) (list (
quote replaceby) (list (quote !#bb) (list (quote !~) (quote n))) (list (quote 
!#a) (quote n))) (list (quote replaceby) (list (quote !#cc) (list (quote !~) (
quote n))) (list (quote !#b) (quote n))))))
(setk (quote tryk14) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m)) (quote t) (quote t)) (list (quote pg) (quote m) (list (quote pr)
(quote n) (list (quote bos) (quote f) (quote t))))) (list (quote replaceby) (
list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (
quote !~) (quote m)) (quote t)) (list (quote pg) (quote m) (list (quote pr) (
quote n) (list (quote bos) (quote f) (quote t))))))))
(setk (quote tryk15) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m)) (list (quote !~) (quote l))) (list (quote cond) (list (list (
quote or) (list (quote evalequal) (list (quote aeval) (quote (quote n))) 0) (
list (quote evalequal) (list (quote aeval) (quote (quote n))) 3)) (list (quote 
aeval) (list (quote list) (quote (quote berz)) (quote (quote f)) (quote (quote n
)) (quote (quote m)) (quote (quote l))))) (list (list (quote evalequal) (list (
quote aeval) (quote (quote n))) 1) (list (quote aeval) (list (quote list) (quote
(quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote l))) (list (quote list) (quote (quote berz)) (quote (quote f)) 2 (
quote (quote m)) (quote (quote l)))))) (list (list (quote evalequal) (list (
quote aeval) (quote (quote n))) 2) (list (quote aeval) (list (quote list) (quote
(quote berz)) (quote (quote f)) 1 (quote (quote m)) (quote (quote l))))))) (list
(quote replaceby) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~)
(quote n)) (list (quote !~) (quote m))) (list (quote cond) (list (list (quote or
) (list (quote evalequal) (list (quote aeval) (quote (quote n))) 0) (list (quote
evalequal) (list (quote aeval) (quote (quote n))) 3)) (list (quote aeval) (list
(quote list) (quote (quote berz)) (quote (quote f)) (quote (quote n)) (quote (
quote m))))) (list (list (quote evalequal) (list (quote aeval) (quote (quote n))
) 1) (list (quote aeval) (list (quote list) (quote (quote minus)) (list (quote 
list) (quote (quote berz)) (quote (quote f)) 2 (quote (quote m)))))) (list (list
(quote evalequal) (list (quote aeval) (quote (quote n))) 2) (list (quote aeval)
(list (quote list) (quote (quote berz)) (quote (quote f)) 1 (quote (quote m)))))
)) (list (quote replaceby) (list (quote fer) (list (quote !~) (quote f)) (list (
quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote cond) (list (list
(quote or) (list (quote evalequal) (list (quote aeval) (quote (quote n))) 0) (
list (quote evalequal) (list (quote aeval) (quote (quote n))) 3)) (list (quote 
aeval) (list (quote list) (quote (quote firr)) (quote (quote f)) (quote (quote n
)) (quote (quote m))))) (list (list (quote evalequal) (list (quote aeval) (quote
(quote n))) 1) (list (quote aeval) (list (quote list) (quote (quote minus)) (
list (quote list) (quote (quote firr)) (quote (quote f)) 2 (quote (quote m))))))
(list (list (quote evalequal) (list (quote aeval) (quote (quote n))) 2) (list (
quote aeval) (list (quote list) (quote (quote firr)) (quote (quote f)) 1 (quote
(quote m))))))))))
(setk (quote tryk16) (aeval (list (quote list) (list (quote replaceby) (list (
quote bos) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (list (
quote cond) (list (list (quote not) (list (quote freeof) (list (quote revalx) (
quote (quote b_chiral))) (list (quote revalx) (quote (quote f))))) (list (quote
aeval) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote
fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (
quote n))) (list (quote list) (quote (quote difference)) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list
) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote
n)))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (
quote quotient)) (list (quote list) (quote (quote fun)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus
)) (quote (quote n)) 1)) 2)))))) (list (list (quote not) (list (quote freeof) (
list (quote revalx) (quote (quote b_antychiral))) (list (quote revalx) (quote (
quote f))))) (list (quote aeval) (list (quote list) (quote (quote plus)) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 0) (quote (quote n))) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n)))) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (
quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
)) 2))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote 
plus)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 0) (quote (quote n))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n)
))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 2) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 2)) (quote (quote n)))) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet
)) 1) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 1) (quote (quote n))))))))) (list (quote replaceby) (
list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote n))) (
list (quote cond) (list (list (quote not) (list (quote freeof) (list (quote 
revalx) (quote (quote f_chiral))) (list (quote revalx) (quote (quote f))))) 0) (
list (list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
f_antychiral))) (list (quote revalx) (quote (quote f))))) (list (quote aeval) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (quote (quote n))) (list (quote list) (quote
(quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1)))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (quote 
list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)) 2))))
) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote difference)) (list (quote list) (
quote (quote difference)) (list (quote list) (quote (quote fun)) (list (quote 
list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n))) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (
list (quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)
) (quote (quote n))))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 2) (list (quote list) (quote (quote quotient)) (list (
quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1))
(list (quote list) (quote (quote plus)) (quote (quote n)) 1)) 2))) (list (quote
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (
quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
)) 2))))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)
) 2 (list (quote !~) (quote n))) (list (quote cond) (list (list (quote not) (
list (quote freeof) (list (quote revalx) (quote (quote f_chiral))) (list (quote
revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote (
quote difference)) (list (quote list) (quote (quote difference)) (list (quote 
list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 0) (quote (quote n))) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote gras)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (
quote (quote n)) 1)))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (
quote list) (quote (quote quotient)) (list (quote list) (quote (quote fun)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list)
(quote (quote plus)) (quote (quote n)) 1)) 2))))) (list (list (quote not) (list
(quote freeof) (list (quote revalx) (quote (quote f_antychiral))) (list (quote 
revalx) (quote (quote f))))) 0) (list (quote t) (list (quote aeval) (list (quote
list) (quote (quote plus)) (list (quote list) (quote (quote fun)) (list (quote 
list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n))) (list (
quote list) (quote (quote difference)) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras)
) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list)
(quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n)))) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 1) (list (
quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1))
(list (quote list) (quote (quote plus)) (quote (quote n)) 1)))) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (
quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
)) 2))))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)
) 3 (list (quote !~) (quote n))) (list (quote cond) (list (list (quote evalequal
) (list (quote aeval) (quote (quote abra_kadabra))) 1) (list (quote cond) (list
(list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
b_chiral))) (list (quote revalx) (quote (quote f))))) (list (quote aeval) (list
(quote list) (quote (quote minus)) (list (quote list) (quote (quote bos)) (quote
(quote f)) 0 (list (quote list) (quote (quote plus)) (quote (quote n)) 1))))) (
list (list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
b_antychiral))) (list (quote revalx) (quote (quote f))))) 0) (list (quote t) (
list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote difference)) (list (quote list) (quote (quote difference)) (list (
quote list) (quote (quote difference)) (list (quote list) (quote (quote fun)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))
(list (quote list) (quote (quote quotient)) (list (quote list) (quote (quote fun
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1)) 2)) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)) (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1)))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (quote 
list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)) 2)))
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet))
2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote 
quotient)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus)) (
quote (quote n)) 2)) 4))))))) (list (list (quote evalequal) (list (quote aeval)
(quote (quote abra_kadabra))) 3) (list (quote cond) (list (list (quote not) (
list (quote freeof) (list (quote revalx) (quote (quote b_chiral))) (list (quote
revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote (
quote minus)) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (list (
quote list) (quote (quote plus)) (quote (quote n)) 1))))) (list (list (quote not
) (list (quote freeof) (list (quote revalx) (quote (quote b_antychiral))) (list
(quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (
quote (quote bos)) (quote (quote f)) 0 (list (quote list) (quote (quote plus)) (
quote (quote n)) 1)))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote difference)) (list (quote 
list) (quote (quote times)) 2 (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2
) (list (quote list) (quote (quote gras)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 2)) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)))) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 1
) (list (quote list) (quote (quote gras)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 1)) (list (quote list) (quote (quote plus)) (quote (quote n)) 1))) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2
) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote 
quotient)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus)) (
quote (quote n)) 2)) 2))))))))) (list (quote replaceby) (list (quote bos) (list
(quote !~) (quote f)) 0 (list (quote !~) (quote n)) (list (quote !~) (quote k)))
(list (quote cond) (list (list (quote not) (list (quote freeof) (list (quote 
revalx) (quote (quote b_chiral))) (list (quote revalx) (quote (quote f))))) (
list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0
) (quote (quote n)) (quote (quote k))) (list (quote list) (quote (quote times))
(quote (quote k)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0
) (quote (quote n)) (list (quote list) (quote (quote difference)) (quote (quote
k)) 1)) (list (quote list) (quote (quote difference)) (list (quote list) (quote
(quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 1
) (list (quote list) (quote (quote quotient)) (list (quote list) (quote (quote 
fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (
quote list) (quote (quote plus)) (quote (quote n)) 1) 1) 2))))))) (list (list (
quote not) (list (quote freeof) (list (quote revalx) (quote (quote b_antychiral)
)) (list (quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote 
list) (quote (quote plus)) (list (quote list) (quote (quote fun)) (list (quote 
list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (quote (
quote k))) (list (quote list) (quote (quote times)) (quote (quote k)) (list (
quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 1)) (list (quote list)
(quote (quote difference)) (list (quote list) (quote (quote gras)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote
!~mkid)) (quote (quote f)) 1)) (quote (quote n))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote quotient)) (list (quote list) (quote (quote fun)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1) 1) 2))))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote plus)) (list (quote list) (quote (quote fun)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n))
(quote (quote k))) (list (quote list) (quote (quote times)) (quote (quote k)) (
list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote gras))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n))) (list (quote list
) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)
) 0) (quote (quote n)) (list (quote list) (quote (quote difference)) (quote (
quote k)) 1))) (list (quote list) (quote (quote times)) (quote (quote k)) (list
(quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote gras)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))) (list (quote list
) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)
) 0) (quote (quote n)) (list (quote list) (quote (quote difference)) (quote (
quote k)) 1))) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote 
list) (quote (quote plus)) (list (quote list) (quote (quote times)) (quote (
quote k)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1) (quote (quote n)) 1) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0
) (quote (quote n)) (list (quote list) (quote (quote difference)) (quote (quote
k)) 1))) (list (quote list) (quote (quote times)) (quote (quote k)) (list (quote
list) (quote (quote difference)) (quote (quote k)) 1) (list (quote list) (quote
(quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list
(quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n))) (
list (quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)
) (quote (quote n))) (list (quote list) (quote (quote fun)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (list (quote list)
(quote (quote difference)) (quote (quote k)) 2)))))))))) (list (quote replaceby)
(list (quote bos) (list (quote !~) (quote f)) 1 (list (quote !~) (quote n)) (
list (quote !~) (quote k))) (list (quote cond) (list (list (quote not) (list (
quote freeof) (list (quote revalx) (quote (quote f_chiral))) (list (quote revalx
) (quote (quote f))))) 0) (list (list (quote not) (list (quote freeof) (list (
quote revalx) (quote (quote f_antychiral))) (list (quote revalx) (quote (quote f
))))) (list (quote aeval) (list (quote list) (quote (quote difference)) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 0) (quote (quote n)) (quote (quote k))) (list (quote list) (quote (
quote times)) (quote (quote k)) (list (quote list) (quote (quote fun)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 1)) (list (quote list)
(quote (quote tet)) 2) (list (quote list) (quote (quote plus)) (list (quote list
) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote
list) (quote (quote plus)) (quote (quote n)) 1)) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (
quote (quote quotient)) (list (quote list) (quote (quote fun)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1) 1) 2))))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (
quote n)) (quote (quote k))) (list (quote list) (quote (quote times)) (quote (
quote k)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (quote (quote n)) (list (quote list) (quote
(quote difference)) (quote (quote k)) 1)) (list (quote list) (quote (quote tet))
2) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote gras
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 2)) (quote (quote n))) (list (quote 
list) (quote (quote quotient)) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (
quote (quote n)) 1)) 2) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1) 1) 2)
)))))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (quote f)) 2
(list (quote !~) (quote n)) (list (quote !~) (quote k))) (list (quote cond) (
list (list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
f_chiral))) (list (quote revalx) (quote (quote f))))) (list (quote aeval) (list
(quote list) (quote (quote difference)) (list (quote list) (quote (quote fun)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n))
(quote (quote k))) (list (quote list) (quote (quote times)) (quote (quote k)) (
list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote fun))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n))
(list (quote list) (quote (quote difference)) (quote (quote k)) 1)) (list (quote
list) (quote (quote plus)) (list (quote list) (quote (quote gras)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote
!~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (quote (
quote n)) 1)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0
) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)) 2))))))) (list (
list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
f_antychiral))) (list (quote revalx) (quote (quote f))))) 0) (list (quote t) (
list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1
) (quote (quote n)) (quote (quote k))) (list (quote list) (quote (quote times))
(quote (quote k)) (list (quote list) (quote (quote tet)) 1) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1
) (quote (quote n)) (list (quote list) (quote (quote difference)) (quote (quote
k)) 1)) (list (quote list) (quote (quote difference)) (list (quote list) (quote
(quote difference)) (list (quote list) (quote (quote gras)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) 2)) (quote (quote n))) (list (quote list) (quote (quote gras
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote
plus)) (quote (quote n)) 1))) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote quotient)) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
) 1) 2))))))))) (list (quote replaceby) (list (quote bos) (list (quote !~) (
quote f)) 3 (list (quote !~) (quote n)) (list (quote !~) (quote k))) (list (
quote cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 1) (list (quote cond) (list (list (quote not) (list (quote 
freeof) (list (quote revalx) (quote (quote b_chiral))) (list (quote revalx) (
quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote k))
) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (list (quote list)
(quote (quote plus)) (quote (quote n)) 1) (quote (quote k)))))) (list (list (
quote not) (list (quote freeof) (list (quote revalx) (quote (quote b_antychiral)
)) (list (quote revalx) (quote (quote f))))) 0) (list (quote t) (list (quote 
aeval) (list (quote list) (quote (quote difference)) (list (quote list) (quote (
quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (
quote (quote n)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 0)
(list (quote list) (quote (quote plus)) (quote (quote n)) 1) (quote (quote k)))
(list (quote list) (quote (quote times)) (quote (quote k)) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1
) (quote (quote n)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1) (list (quote 
list) (quote (quote difference)) (quote (quote k)) 1)) (list (quote list) (quote
(quote plus)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote tet)) 2) (list (quote list) (quote (quote gras)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) 2)) (list (quote list) (quote (quote plus)) (quote (quote n)
) 1))) (list (quote list) (quote (quote difference)) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (quote 
list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1) 1) 2))
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet))
2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote 
quotient)) (list (quote list) (quote (quote fun)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus)) (
quote (quote n)) 2) 1) 4)))))))))) (list (list (quote evalequal) (list (quote 
aeval) (quote (quote abra_kadabra))) 3) (list (quote cond) (list (list (quote 
not) (list (quote freeof) (list (quote revalx) (quote (quote b_chiral))) (list (
quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote
(quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote k))) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (
list (quote list) (quote (quote plus)) (quote (quote n)) 1) (quote (quote k)))))
) (list (list (quote not) (list (quote freeof) (list (quote revalx) (quote (
quote b_antychiral))) (list (quote revalx) (quote (quote f))))) (list (quote 
aeval) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1) (quote (quote k))))) (list (
quote t) (list (quote aeval) (list (quote list) (quote (quote plus)) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote expt)) 2 (
quote (quote k))) (list (quote list) (quote (quote fun)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n)) (quote (quote k))))
(list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
times)) (quote (quote k)) (list (quote list) (quote (quote expt)) 2 (list (quote
list) (quote (quote difference)) (quote (quote k)) 1)) (list (quote list) (quote
(quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (
quote (quote n)) (list (quote list) (quote (quote difference)) (quote (quote k))
1)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
minus)) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote tet)) 2) (list (quote list) (quote (quote gras)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 2)) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
)))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 1) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (
quote quotient)) (list (quote list) (quote (quote fun)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus
)) (quote (quote n)) 2) 1) 2)))) (list (quote list) (quote (quote times)) (quote
(quote k)) (list (quote list) (quote (quote difference)) (quote (quote k)) 1) (
list (quote list) (quote (quote expt)) 2 (list (quote list) (quote (quote 
difference)) (quote (quote k)) 2)) (list (quote list) (quote (quote tet)) 2) (
list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (quote fun))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1) (quote (quote n))
(list (quote list) (quote (quote difference)) (quote (quote k)) 2)) (list (quote
list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (list
(quote list) (quote (quote plus)) (quote (quote n)) 1)) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)) (list (quote 
list) (quote (quote plus)) (quote (quote n)) 1))))))))))) (list (quote replaceby
) (list (quote fer) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (
list (quote cond) (list (list (quote not) (list (quote freeof) (list (quote 
revalx) (quote (quote f_chiral))) (list (quote revalx) (quote (quote f))))) (
list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n)
)) (list (quote list) (quote (quote difference)) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1
) (quote (quote n)))) (list (quote list) (quote (quote times)) (list (quote list
) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote
list) (quote (quote quotient)) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (
quote (quote n)) 1)) 2)))))) (list (list (quote not) (list (quote freeof) (list
(quote revalx) (quote (quote f_antychiral))) (list (quote revalx) (quote (quote
f))))) (list (quote aeval) (list (quote list) (quote (quote plus)) (list (quote
list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote
(quote n))) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) 0) (quote (quote n)))) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list
) (quote (quote tet)) 1) (list (quote list) (quote (quote quotient)) (list (
quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1))
(list (quote list) (quote (quote plus)) (quote (quote n)) 1)) 2))))) (list (
quote t) (list (quote aeval) (list (quote list) (quote (quote plus)) (list (
quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1))
(quote (quote n))) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote list)
(quote (quote !~mkid)) (quote (quote f)) 0) (quote (quote n)))) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (
quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote
(quote f)) 1) (quote (quote n)))) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (
list (quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 2)
) (quote (quote n))))))))) (list (quote replaceby) (list (quote fer) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote n))) (list (quote cond) (list (
list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
b_chiral))) (list (quote revalx) (quote (quote f))))) 0) (list (list (quote not)
(list (quote freeof) (list (quote revalx) (quote (quote b_antychiral))) (list (
quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote
(quote difference)) (list (quote list) (quote (quote difference)) (list (quote 
list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (
quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote
(quote n))) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote tet)) 2) (list (quote list) (quote (quote fun)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote plus)) (
quote (quote n)) 1)))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (
quote list) (quote (quote quotient)) (list (quote list) (quote (quote gras)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1)) 2))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote difference)) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote difference)) (list (quote list) (
quote (quote gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
(list (quote list) (quote (quote !~mkid)) (quote (quote f)) 1)) (quote (quote n)
)) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote tet
)) 2) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote 
!~mkid)) (quote (quote f)) 1) (quote (quote n))))) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list) (
quote (quote quotient)) (list (quote list) (quote (quote fun)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1)) 2))) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (
list (quote list) (quote (quote quotient)) (list (quote list) (quote (quote gras
)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list
) (quote (quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote
plus)) (quote (quote n)) 1)) 2))))))) (list (quote replaceby) (list (quote fer)
(list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (quote cond) (
list (list (quote not) (list (quote freeof) (list (quote revalx) (quote (quote 
b_chiral))) (list (quote revalx) (quote (quote f))))) (list (quote aeval) (list
(quote list) (quote (quote plus)) (list (quote list) (quote (quote difference))
(list (quote list) (quote (quote gras)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (quote (quote f))
2)) (quote (quote n))) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (
quote plus)) (quote (quote n)) 1)))) (list (quote list) (quote (quote times)) (
list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet))
1) (list (quote list) (quote (quote quotient)) (list (quote list) (quote (quote
gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 2)) (list (quote list) (quote (
quote plus)) (quote (quote n)) 1)) 2))))) (list (list (quote not) (list (quote 
freeof) (list (quote revalx) (quote (quote b_antychiral))) (list (quote revalx)
(quote (quote f))))) 0) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote gras)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) 2)) (quote (quote n))) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote tet)) 1) (list (quote list) (quote (quote fun)) (list (quote list) (quote
(quote !~mkid)) (quote (quote f)) 1) (quote (quote n)))) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote tet)) 1) (list (quote list
) (quote (quote quotient)) (list (quote list) (quote (quote fun)) (list (quote 
list) (quote (quote !~mkid)) (quote (quote f)) 0) (list (quote list) (quote (
quote plus)) (quote (quote n)) 1)) 2))) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet))
1) (list (quote list) (quote (quote quotient)) (list (quote list) (quote (quote
gras)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote
list) (quote (quote !~mkid)) (quote (quote f)) 2)) (list (quote list) (quote (
quote plus)) (quote (quote n)) 1)) 2))))))) (list (quote replaceby) (list (quote
fer) (list (quote !~) (quote f)) 3 (list (quote !~) (quote n))) (list (quote 
cond) (list (list (quote evalequal) (list (quote aeval) (quote (quote 
abra_kadabra))) 1) (list (quote cond) (list (list (quote not) (list (quote 
freeof) (list (quote revalx) (quote (quote f_chiral))) (list (quote revalx) (
quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote minus))
(list (quote list) (quote (quote fer)) (quote (quote f)) 0 (list (quote list) (
quote (quote plus)) (quote (quote n)) 1))))) (list (list (quote not) (list (
quote freeof) (list (quote revalx) (quote (quote f_antychiral))) (list (quote 
revalx) (quote (quote f))))) 0) (list (quote t) (list (quote aeval) (list (quote
list) (quote (quote difference)) (list (quote list) (quote (quote difference)) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
difference)) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 2)) (quote (quote n))) (list (quote list) (quote (quote 
quotient)) (list (quote list) (quote (quote gras)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)) (
quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
)) 2)) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
tet)) 2) (list (quote list) (quote (quote fun)) (list (quote list) (quote (quote
!~mkid)) (quote (quote f)) 1) (list (quote list) (quote (quote plus)) (quote (
quote n)) 1)))) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote 
list) (quote (quote quotient)) (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (
quote (quote n)) 2)) 4))) (list (quote list) (quote (quote times)) (list (quote
list) (quote (quote tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (
quote list) (quote (quote quotient)) (list (quote list) (quote (quote gras)) (
list (quote list) (quote (quote !~mkid)) (quote (quote f)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) 2)) (list (quote list) (quote (quote 
plus)) (quote (quote n)) 1)) 2))))))) (list (list (quote evalequal) (list (quote
aeval) (quote (quote abra_kadabar))) 3) (list (quote cond) (list (list (quote 
not) (list (quote freeof) (list (quote revalx) (quote (quote f_chiral))) (list (
quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote
(quote minus)) (list (quote list) (quote (quote fer)) (quote (quote f)) 0 (list
(quote list) (quote (quote plus)) (quote (quote n)) 1))))) (list (list (quote 
not) (list (quote freeof) (list (quote revalx) (quote (quote f_antychiral))) (
list (quote revalx) (quote (quote f))))) (list (quote aeval) (list (quote list)
(quote (quote fer)) (quote (quote f)) 0 (list (quote list) (quote (quote plus))
(quote (quote n)) 1)))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote difference)) (list (quote 
list) (quote (quote times)) 2 (list (quote list) (quote (quote gras)) (list (
quote list) (quote (quote mkif)) (quote (quote f)) (list (quote list) (quote (
quote !~mkid)) (quote (quote f)) 2)) (quote (quote n)))) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote tet)) 2) (list (quote list
) (quote (quote fun)) (list (quote list) (quote (quote !~mkid)) (quote (quote f)
) 1) (list (quote list) (quote (quote plus)) (quote (quote n)) 1)))) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote tet)) 1) (
list (quote list) (quote (quote fun)) (list (quote list) (quote (quote !~mkid))
(quote (quote f)) 0) (list (quote list) (quote (quote plus)) (quote (quote n)) 1
))) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote 
tet)) 2) (list (quote list) (quote (quote tet)) 1) (list (quote list) (quote (
quote quotient)) (list (quote list) (quote (quote gras)) (list (quote list) (
quote (quote !~mkid)) (quote (quote f)) (list (quote list) (quote (quote !~mkid)
) (quote (quote f)) 1)) (list (quote list) (quote (quote plus)) (quote (quote n)
) 2)) 2))))))))) (list (quote replaceby) (list (quote axp) (list (quote !~) (
quote f))) (list (quote times) (list (quote axx) (list (quote bf_part) (quote f)
0)) (list (quote plus) 1 (list (quote times) (list (quote tet) 1) (list (quote 
bf_part) (quote f) 1)) (list (quote times) (list (quote tet) 2) (list (quote 
bf_part) (quote f) 2)) (list (quote times) (list (quote tet) 2) (list (quote tet
) 1) (list (quote plus) (list (quote bf_part) (quote f) 3) (list (quote times) 2
(list (quote bf_part) (quote f) 1) (list (quote bf_part) (quote f) 2))))))))))
(!~let (quote ((list (replaceby (times (d 1) (fer (!~ f) (!~ n) (!~ m))) (plus (
fer f n (plus m 1)) (times (fer f n m) (d 1)))) (replaceby (times (d 1) (bos (!~
f) (!~ n) (!~ m))) (plus (bos f n (plus m 1)) (times (bos f n m) (d 1)))) (
replaceby (times (fer (!~ f) (!~ n) (!~ m)) (d 2)) (plus (minus (fer f n (plus m
1))) (times (d 2) (fer f n m)))) (replaceby (times (bos (!~ f) (!~ n) (!~ m)) (d
2)) (plus (minus (bos f n (plus m 1))) (times (d 2) (bos f n m)))) (replaceby (
times (d 1) (bos (!~ f) (!~ n) (!~ m) (!~ l))) (plus (times l (bos f n (plus m 1
) 1) (bos f n m (difference l 1))) (times (bos f n m l) (d 1)))) (replaceby (
times (bos (!~ f) (!~ n) (!~ m) (!~ l)) (d 2)) (plus (minus (times l (bos f n (
plus m 1) 1) (bos f n m (difference l 1)))) (times (d 2) (bos f n m l)))) (
replaceby (times (der (!~ k)) (fer (!~ f) 0 (!~ m))) (when (difference (bos f k
m) (times (fer f 0 m) (der k))) (and (numberp k) (lessp k 3)))) (replaceby (
times (der (!~ k)) (bos (!~ f) 0 (!~ m))) (when (plus (fer f k m) (times (bos f
0 m) (der k))) (and (numberp k) (lessp k 3)))) (replaceby (times (fer (!~ f) 0 (
!~ m)) (del (!~ k))) (when (difference (bos f k m) (times (del k) (fer f 0 m)))
(and (numberp k) (lessp k 3)))) (replaceby (times (bos (!~ f) 0 (!~ m)) (del (!~
k))) (when (plus (minus (fer f k m)) (times (del k) (bos f 0 m))) (and (numberp
k) (lessp k 3)))) (replaceby (times (der (!~ k)) (bos (!~ f) 0 (!~ m) (!~ l))) (
when (plus (times l (fer f k m) (bos f 0 m (difference l 1))) (times (bos f 0 m
l) (der k))) (and (numberp k) (lessp k 3)))) (replaceby (times (bos (!~ f) 0 (!~
m) (!~ l)) (del (!~ k))) (when (plus (minus (times l (fer f k m) (bos f 0 m (
difference l 1)))) (times (del k) (bos f 0 m l))) (and (numberp k) (lessp k 3)))
) (replaceby (times (d 1) (axp (!~ g))) (plus (times (pg 1 g) (axp g)) (times (
axp g) (d 1)))) (replaceby (times (der 1) (axp (!~ g))) (plus (times (pr 1 g) (
axp g)) (times (axp g) (der 1)))) (replaceby (times (der 2) (axp (!~ g))) (plus
(times (pr 2 g) (axp g)) (times (axp g) (der 2)))) (replaceby (times (axp (!~ g)
) (d 2)) (plus (minus (times (pg 1 g) (axp g))) (times (d 2) (axp g)))) (
replaceby (times (axp (!~ g)) (del 1)) (plus (minus (times (pr 1 g) (axp g))) (
times (del 1) (axp g)))) (replaceby (times (axp (!~ g)) (del 2)) (plus (minus (
times (pr 2 g) (axp g))) (times (del 2) (axp g)))) (replaceby (times (d 1) (fun
(!~ f) (!~ m))) (plus (fun f (plus m 1)) (times (fun f m) (d 1)))) (replaceby (
times (fun (!~ f) (!~ m)) (d 2)) (plus (minus (fun f (plus m 1))) (times (d 2) (
fun f m)))) (replaceby (times (d 1) (fun (!~ f) (!~ n) (!~ m))) (plus (times m (
fun f (plus n 1) 1) (fun f n (difference m 1))) (times (fun f n m) (d 1)))) (
replaceby (times (fun (!~ f) (!~ n) (!~ m)) (d 2)) (plus (minus (times m (fun f
(plus n 1) 1) (fun f n (difference m 1)))) (times (d 2) (fun f n m)))) (
replaceby (times (gras (!~ f) (!~ m)) (d 2)) (plus (minus (gras f (plus m 1))) (
times (d 2) (gras f m)))) (replaceby (times (d 1) (gras (!~ f) (!~ m))) (plus (
gras f (plus m 1)) (times (gras f m) (d 1)))) (replaceby (times (d 1) (axx (!~ f
))) (plus (times (pg 1 f) (axx f)) (times (axx f) (d 1)))) (replaceby (times (
axx (!~ f)) (d 2)) (plus (minus (times (pg 1 f) (axx f))) (times (d 2) (axx f)))
)))))
(!~let (list (list (quote list) (list (quote replaceby) (list (quote times) (
list (quote d) (minus 1)) (list (quote fer) (list (quote !~) (quote f)) (list (
quote !~) (quote n)) (list (quote !~) (quote m)))) (list (quote cond) (list (
list (quote evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (quote 
prog) (list (quote k) (quote forall!-result)) (list (quote setq) (quote k) 0) (
list (quote setq) (quote forall!-result) 0) (quote lab1) (list (quote cond) (
list (list (quote aminusp!:) (list (quote list) (quote (quote difference)) (list
(quote aeval!*) (list (quote list) (quote (quote difference)) (quote (quote ww))
1)) (quote k))) (list (quote return) (quote forall!-result)))) (list (quote setq
) (quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote
plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote minus) 1) (quote k)) (list (quote
list) (quote (quote fer)) (quote (quote f)) (quote (quote n)) (list (quote list)
(quote (quote plus)) (quote (quote m)) (quote k))) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) (list (quote minus) 1)) (list
(quote plus) (quote k) 1)))) (quote forall!-result)))) (list (quote setq) (quote
k) (list (list (quote lambda) (list (quote forall!-result)) (list (quote aeval!*
) (list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))
) (list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (
quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote fer) (list (quote !~) (quote f)) (
list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote d) (minus 2
))) (list (quote cond) (list (list (quote evalnumberp) (list (quote aeval) (
quote (quote ww)))) (list (quote prog) (list (quote k) (quote forall!-result)) (
list (quote setq) (quote k) 0) (list (quote setq) (quote forall!-result) 0) (
quote lab1) (list (quote cond) (list (list (quote aminusp!:) (list (quote list)
(quote (quote difference)) (list (quote aeval!*) (list (quote list) (quote (
quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote return) (
quote forall!-result)))) (list (quote setq) (quote forall!-result) (list (quote
aeval!*) (list (quote list) (quote (quote plus)) (list (quote aeval!*) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote expt)) (list
(quote list) (quote (quote d)) (list (quote minus) 2)) (list (quote plus) (quote
k) 1)) (list (quote list) (quote (quote fer)) (quote (quote f)) (quote (quote n)
) (list (quote list) (quote (quote plus)) (quote (quote m)) (quote k))))) (quote
forall!-result)))) (list (quote setq) (quote k) (list (list (quote lambda) (list
(quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote 
plus)) (quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1))))
(list (quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote bos) (
list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m
)))) (list (quote cond) (list (list (quote evalnumberp) (list (quote aeval) (
quote (quote ww)))) (list (quote prog) (list (quote k) (quote forall!-result)) (
list (quote setq) (quote k) 0) (list (quote setq) (quote forall!-result) 0) (
quote lab1) (list (quote cond) (list (list (quote aminusp!:) (list (quote list)
(quote (quote difference)) (list (quote aeval!*) (list (quote list) (quote (
quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote return) (
quote forall!-result)))) (list (quote setq) (quote forall!-result) (list (quote
aeval!*) (list (quote list) (quote (quote plus)) (list (quote aeval!*) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote expt)) (list
(quote minus) 1) (quote k)) (list (quote list) (quote (quote bos)) (quote (quote
f)) (quote (quote n)) (list (quote list) (quote (quote plus)) (quote (quote m))
(quote k))) (list (quote list) (quote (quote expt)) (list (quote list) (quote (
quote d)) (list (quote minus) 1)) (list (quote plus) (quote k) 1)))) (quote 
forall!-result)))) (list (quote setq) (quote k) (list (list (quote lambda) (list
(quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote 
plus)) (quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1))))
(list (quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) (
list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote d) (minus 2
))) (list (quote cond) (list (list (quote evalnumberp) (list (quote aeval) (
quote (quote ww)))) (list (quote prog) (list (quote k) (quote forall!-result)) (
list (quote setq) (quote k) 0) (list (quote setq) (quote forall!-result) 0) (
quote lab1) (list (quote cond) (list (list (quote aminusp!:) (list (quote list)
(quote (quote difference)) (list (quote aeval!*) (list (quote list) (quote (
quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote return) (
quote forall!-result)))) (list (quote setq) (quote forall!-result) (list (quote
aeval!*) (list (quote list) (quote (quote plus)) (list (quote aeval!*) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote expt)) (list
(quote list) (quote (quote d)) (list (quote minus) 2)) (list (quote plus) (quote
k) 1)) (list (quote list) (quote (quote bos)) (quote (quote f)) (quote (quote n)
) (list (quote list) (quote (quote plus)) (quote (quote m)) (quote k))))) (quote
forall!-result)))) (list (quote setq) (quote k) (list (list (quote lambda) (list
(quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote 
plus)) (quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1))))
(list (quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote bos) (
list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m
)) (list (quote !~) (quote l)))) (list (quote cond) (list (list (quote 
evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (
quote k) (quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote 
setq) (quote forall!-result) 0) (quote lab1) (list (quote cond) (list (list (
quote aminusp!:) (list (quote list) (quote (quote difference)) (list (quote 
aeval!*) (list (quote list) (quote (quote difference)) (quote (quote ww)) 1)) (
quote k))) (list (quote return) (quote forall!-result)))) (list (quote setq) (
quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote 
plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote minus) 1) (quote k)) (list (quote
list) (quote (quote pg)) (quote k) (list (quote list) (quote (quote bos)) (quote
(quote f)) (quote (quote n)) (quote (quote m)) (quote (quote l)))) (list (quote
list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (quote 
minus) 1)) (list (quote plus) (quote k) 1)))) (quote forall!-result)))) (list (
quote setq) (quote k) (list (list (quote lambda) (list (quote forall!-result)) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (quote 
forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (quote t
) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f)) (
list (quote !~) (quote n)) (list (quote !~) (quote m)) (list (quote !~) (quote l
))) (list (quote d) (minus 2))) (list (quote cond) (list (list (quote 
evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (
quote k) (quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote 
setq) (quote forall!-result) 0) (quote lab1) (list (quote cond) (list (list (
quote aminusp!:) (list (quote list) (quote (quote difference)) (list (quote 
aeval!*) (list (quote list) (quote (quote difference)) (quote (quote ww)) 1)) (
quote k))) (list (quote return) (quote forall!-result)))) (list (quote setq) (
quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote 
plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (
quote minus) 2)) (list (quote plus) (quote k) 1)) (list (quote list) (quote (
quote pg)) (quote k) (list (quote list) (quote (quote bos)) (quote (quote f)) (
quote (quote n)) (quote (quote m)) (quote (quote l)))))) (quote forall!-result))
)) (list (quote setq) (quote k) (list (list (quote lambda) (list (quote 
forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (
quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote axp) (
list (quote !~) (quote f)))) (list (quote cond) (list (list (quote evalnumberp)
(list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (
quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote minus) 1) (quote k)) (list (quote list) (quote (quote
pg)) (quote k) (list (quote list) (quote (quote axp)) (quote (quote f)))) (list
(quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (
quote minus) 1)) (list (quote plus) (quote k) 1)))) (quote forall!-result)))) (
list (quote setq) (quote k) (list (list (quote lambda) (list (quote 
forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (
quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote axp) (list (quote !~) (quote f))) (
list (quote d) (minus 2))) (list (quote cond) (list (list (quote evalnumberp) (
list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (
quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) (list (quote minus) 2)) (list
(quote plus) (quote k) 1)) (list (quote list) (quote (quote pg)) (quote k) (list
(quote list) (quote (quote axp)) (quote (quote f)))))) (quote forall!-result))))
(list (quote setq) (quote k) (list (list (quote lambda) (list (quote 
forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (
quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x))) (
list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (
quote !~) (quote m)))) (list (quote cond) (list (list (quote evalnumberp) (list
(quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote s) (quote 
forall!-result)) (list (quote setq) (quote s) 0) (list (quote setq) (quote 
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (quote (
quote ww))) (quote s))) (list (quote return) (quote forall!-result)))) (list (
quote setq) (quote forall!-result) (list (quote aeval!*) (list (quote list) (
quote (quote plus)) (list (quote aeval!*) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote s)) (
list (quote list) (quote (quote newton)) (list (quote list) (quote (quote plus))
(list (quote list) (quote (quote minus)) (quote (quote x))) (list (quote 
difference) (quote s) 1)) (list (quote list) (quote (quote difference)) (list (
quote list) (quote (quote minus)) (quote (quote x))) 1)) (list (quote list) (
quote (quote bos)) (quote (quote f)) (quote (quote n)) (list (quote list) (quote
(quote plus)) (quote (quote m)) (quote s))) (list (quote list) (quote (quote dr)
) (list (quote list) (quote (quote difference)) (quote (quote x)) (quote s)))))
(quote forall!-result)))) (list (quote setq) (quote s) (list (list (quote lambda
) (list (quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote
(quote plus)) (quote forall!-result) 1))) (quote s))) (list (quote go) (quote 
lab1)))) (list (quote t) (list (quote aeval) (list (quote rederr) (list (quote 
revalx) "introduce the precision e.g. give the value of ww > 0")))))) (list (
quote replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x)
)) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (
list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalnumberp)
(list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote s) (
quote forall!-result)) (list (quote setq) (quote s) 0) (list (quote setq) (quote
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (quote (
quote ww))) (quote s))) (list (quote return) (quote forall!-result)))) (list (
quote setq) (quote forall!-result) (list (quote aeval!*) (list (quote list) (
quote (quote plus)) (list (quote aeval!*) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote s)) (
list (quote list) (quote (quote newton)) (list (quote list) (quote (quote plus))
(list (quote list) (quote (quote minus)) (quote (quote x))) (list (quote 
difference) (quote s) 1)) (list (quote list) (quote (quote difference)) (list (
quote list) (quote (quote minus)) (quote (quote x))) 1)) (list (quote list) (
quote (quote fer)) (quote (quote f)) (quote (quote n)) (list (quote list) (quote
(quote plus)) (quote (quote m)) (quote s))) (list (quote list) (quote (quote dr)
) (list (quote list) (quote (quote difference)) (quote (quote x)) (quote s)))))
(quote forall!-result)))) (list (quote setq) (quote s) (list (list (quote lambda
) (list (quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote
(quote plus)) (quote forall!-result) 1))) (quote s))) (list (quote go) (quote 
lab1)))) (list (quote t) (list (quote aeval) (list (quote rederr) (list (quote 
revalx) "introduce the precision e.g. give the value of ww > 0")))))) (list (
quote replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x)
)) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (
list (quote !~) (quote m)) (list (quote !~) (quote l)))) (list (quote cond) (
list (list (quote evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (
quote prog) (list (quote s) (quote forall!-result)) (list (quote setq) (quote s)
0) (list (quote setq) (quote forall!-result) 0) (quote lab1) (list (quote cond)
(list (list (quote aminusp!:) (list (quote list) (quote (quote difference)) (
list (quote aeval!*) (quote (quote ww))) (quote s))) (list (quote return) (quote
forall!-result)))) (list (quote setq) (quote forall!-result) (list (quote 
aeval!*) (list (quote list) (quote (quote plus)) (list (quote aeval!*) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote expt)) (list
(quote minus) 1) (quote s)) (list (quote list) (quote (quote newton)) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote minus)) (quote
(quote x))) (list (quote difference) (quote s) 1)) (list (quote list) (quote (
quote difference)) (list (quote list) (quote (quote minus)) (quote (quote x))) 1
)) (list (quote list) (quote (quote pg)) (quote s) (list (quote list) (quote (
quote bos)) (quote (quote f)) (quote (quote n)) (quote (quote m)) (quote (quote
l)))) (list (quote list) (quote (quote dr)) (list (quote list) (quote (quote 
difference)) (quote (quote x)) (quote s))))) (quote forall!-result)))) (list (
quote setq) (quote s) (list (list (quote lambda) (list (quote forall!-result)) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (quote 
forall!-result) 1))) (quote s))) (list (quote go) (quote lab1)))) (list (quote t
) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x))) (
list (quote fun) (list (quote !~) (quote f)) (list (quote !~) (quote n)))) (list
(quote cond) (list (list (quote evalnumberp) (list (quote aeval) (quote (quote 
ww)))) (list (quote prog) (list (quote s) (quote forall!-result)) (list (quote 
setq) (quote s) 0) (list (quote setq) (quote forall!-result) 0) (quote lab1) (
list (quote cond) (list (list (quote aminusp!:) (list (quote list) (quote (quote
difference)) (list (quote aeval!*) (quote (quote ww))) (quote s))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote minus) 1) (quote s)) (list (quote list) (quote (quote
newton)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (
quote minus)) (quote (quote x))) (list (quote difference) (quote s) 1)) (list (
quote list) (quote (quote difference)) (list (quote list) (quote (quote minus))
(quote (quote x))) 1)) (list (quote list) (quote (quote fun)) (quote (quote f))
(list (quote list) (quote (quote plus)) (quote (quote n)) (quote s))) (list (
quote list) (quote (quote dr)) (list (quote list) (quote (quote difference)) (
quote (quote x)) (quote s))))) (quote forall!-result)))) (list (quote setq) (
quote s) (list (list (quote lambda) (list (quote forall!-result)) (list (quote 
aeval!*) (list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (
quote s))) (list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval)
(list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x))) (
list (quote gras) (list (quote !~) (quote f)) (list (quote !~) (quote n)))) (
list (quote cond) (list (list (quote evalnumberp) (list (quote aeval) (quote (
quote ww)))) (list (quote prog) (list (quote s) (quote forall!-result)) (list (
quote setq) (quote s) 0) (list (quote setq) (quote forall!-result) 0) (quote 
lab1) (list (quote cond) (list (list (quote aminusp!:) (list (quote list) (quote
(quote difference)) (list (quote aeval!*) (quote (quote ww))) (quote s))) (list
(quote return) (quote forall!-result)))) (list (quote setq) (quote 
forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
list (quote aeval!*) (list (quote list) (quote (quote times)) (list (quote list)
(quote (quote expt)) (list (quote minus) 1) (quote s)) (list (quote list) (quote
(quote newton)) (list (quote list) (quote (quote plus)) (list (quote list) (
quote (quote minus)) (quote (quote x))) (list (quote difference) (quote s) 1)) (
list (quote list) (quote (quote difference)) (list (quote list) (quote (quote 
minus)) (quote (quote x))) 1)) (list (quote list) (quote (quote gras)) (quote (
quote f)) (list (quote list) (quote (quote plus)) (quote (quote n)) (quote s)))
(list (quote list) (quote (quote dr)) (list (quote list) (quote (quote 
difference)) (quote (quote x)) (quote s))))) (quote forall!-result)))) (list (
quote setq) (quote s) (list (list (quote lambda) (list (quote forall!-result)) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (quote 
forall!-result) 1))) (quote s))) (list (quote go) (quote lab1)))) (list (quote t
) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote dr) (list (quote !~) (quote x))) (
list (quote fun) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (
quote !~) (quote l)))) (list (quote cond) (list (list (quote evalnumberp) (list
(quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote s) (quote 
forall!-result)) (list (quote setq) (quote s) 0) (list (quote setq) (quote 
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (quote (
quote ww))) (quote s))) (list (quote return) (quote forall!-result)))) (list (
quote setq) (quote forall!-result) (list (quote aeval!*) (list (quote list) (
quote (quote plus)) (list (quote aeval!*) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote s)) (
list (quote list) (quote (quote newton)) (list (quote list) (quote (quote plus))
(list (quote list) (quote (quote minus)) (quote (quote x))) (list (quote 
difference) (quote s) 1)) (list (quote list) (quote (quote difference)) (list (
quote list) (quote (quote minus)) (quote (quote x))) 1)) (list (quote list) (
quote (quote pg)) (quote s) (list (quote list) (quote (quote fun)) (quote (quote
f)) (quote (quote n)) (quote (quote l)))) (list (quote list) (quote (quote dr))
(list (quote list) (quote (quote difference)) (quote (quote x)) (quote s))))) (
quote forall!-result)))) (list (quote setq) (quote s) (list (list (quote lambda)
(list (quote forall!-result)) (list (quote aeval!*) (list (quote list) (quote (
quote plus)) (quote forall!-result) 1))) (quote s))) (list (quote go) (quote 
lab1)))) (list (quote t) (list (quote aeval) (list (quote rederr) (list (quote 
revalx) "introduce the precision e.g. give the value of ww > 0")))))) (list (
quote replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote fun
) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote !~) (
quote m)))) (list (quote cond) (list (list (quote evalnumberp) (list (quote 
aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (quote 
forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote 
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote minus) 1) (quote k)) (list (quote list) (quote (quote
pg)) (quote k) (list (quote list) (quote (quote fun)) (quote (quote f)) (quote (
quote n)) (quote (quote m)))) (list (quote list) (quote (quote expt)) (list (
quote list) (quote (quote d)) (list (quote minus) 1)) (list (quote plus) (quote
k) 1)))) (quote forall!-result)))) (list (quote setq) (quote k) (list (list (
quote lambda) (list (quote forall!-result)) (list (quote aeval!*) (list (quote 
list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))) (list (quote
go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (quote rederr) (
list (quote revalx) "introduce the precision e.g. give the value of ww > 0")))))
) (list (quote replaceby) (list (quote times) (list (quote fun) (list (quote !~)
(quote f)) (list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote
d) (minus 2))) (list (quote cond) (list (list (quote evalnumberp) (list (quote 
aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (quote 
forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote 
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) (list (quote minus) 2)) (list
(quote plus) (quote k) 1)) (list (quote list) (quote (quote pg)) (quote k) (list
(quote list) (quote (quote fun)) (quote (quote f)) (quote (quote n)) (quote (
quote m)))))) (quote forall!-result)))) (list (quote setq) (quote k) (list (list
(quote lambda) (list (quote forall!-result)) (list (quote aeval!*) (list (quote
list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))) (list (quote
go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (quote rederr) (
list (quote revalx) "introduce the precision e.g. give the value of ww > 0")))))
) (list (quote replaceby) (list (quote times) (list (quote d) (minus 1)) (list (
quote fun) (list (quote !~) (quote f)) (list (quote !~) (quote n)))) (list (
quote cond) (list (list (quote evalnumberp) (list (quote aeval) (quote (quote ww
)))) (list (quote prog) (list (quote k) (quote forall!-result)) (list (quote 
setq) (quote k) 0) (list (quote setq) (quote forall!-result) 0) (quote lab1) (
list (quote cond) (list (list (quote aminusp!:) (list (quote list) (quote (quote
difference)) (list (quote aeval!*) (list (quote list) (quote (quote difference))
(quote (quote ww)) 1)) (quote k))) (list (quote return) (quote forall!-result)))
) (list (quote setq) (quote forall!-result) (list (quote aeval!*) (list (quote 
list) (quote (quote plus)) (list (quote aeval!*) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote k)) (list (quote list) (quote (quote fun)) (quote (quote f)) (list (quote
list) (quote (quote plus)) (quote (quote n)) (quote k))) (list (quote list) (
quote (quote expt)) (list (quote list) (quote (quote d)) (list (quote minus) 1))
(list (quote plus) (quote k) 1)))) (quote forall!-result)))) (list (quote setq)
(quote k) (list (list (quote lambda) (list (quote forall!-result)) (list (quote
aeval!*) (list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (
quote k))) (list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval)
(list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote fun) (list (quote !~) (quote f)) (
list (quote !~) (quote n))) (list (quote d) (minus 2))) (list (quote cond) (list
(list (quote evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (quote
prog) (list (quote k) (quote forall!-result)) (list (quote setq) (quote k) 0) (
list (quote setq) (quote forall!-result) 0) (quote lab1) (list (quote cond) (
list (list (quote aminusp!:) (list (quote list) (quote (quote difference)) (list
(quote aeval!*) (list (quote list) (quote (quote difference)) (quote (quote ww))
1)) (quote k))) (list (quote return) (quote forall!-result)))) (list (quote setq
) (quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote
plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (
quote minus) 2)) (list (quote plus) (quote k) 1)) (list (quote list) (quote (
quote fun)) (quote (quote f)) (list (quote list) (quote (quote plus)) (quote (
quote n)) (quote k))))) (quote forall!-result)))) (list (quote setq) (quote k) (
list (list (quote lambda) (list (quote forall!-result)) (list (quote aeval!*) (
list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))) (
list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (quote
rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote gras) (
list (quote !~) (quote f)) (list (quote !~) (quote n)))) (list (quote cond) (
list (list (quote evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (
quote prog) (list (quote k) (quote forall!-result)) (list (quote setq) (quote k)
0) (list (quote setq) (quote forall!-result) 0) (quote lab1) (list (quote cond)
(list (list (quote aminusp!:) (list (quote list) (quote (quote difference)) (
list (quote aeval!*) (list (quote list) (quote (quote difference)) (quote (quote
ww)) 1)) (quote k))) (list (quote return) (quote forall!-result)))) (list (quote
setq) (quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (
quote plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (
list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote k)) (list (
quote list) (quote (quote gras)) (quote (quote f)) (list (quote list) (quote (
quote plus)) (quote (quote n)) (quote k))) (list (quote list) (quote (quote expt
)) (list (quote list) (quote (quote d)) (list (quote minus) 1)) (list (quote 
plus) (quote k) 1)))) (quote forall!-result)))) (list (quote setq) (quote k) (
list (list (quote lambda) (list (quote forall!-result)) (list (quote aeval!*) (
list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))) (
list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (quote
rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote gras) (list (quote !~) (quote f)) (
list (quote !~) (quote n))) (list (quote d) (minus 2))) (list (quote cond) (list
(list (quote evalnumberp) (list (quote aeval) (quote (quote ww)))) (list (quote
prog) (list (quote k) (quote forall!-result)) (list (quote setq) (quote k) 0) (
list (quote setq) (quote forall!-result) 0) (quote lab1) (list (quote cond) (
list (list (quote aminusp!:) (list (quote list) (quote (quote difference)) (list
(quote aeval!*) (list (quote list) (quote (quote difference)) (quote (quote ww))
1)) (quote k))) (list (quote return) (quote forall!-result)))) (list (quote setq
) (quote forall!-result) (list (quote aeval!*) (list (quote list) (quote (quote
plus)) (list (quote aeval!*) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (
quote minus) 2)) (list (quote plus) (quote k) 1)) (list (quote list) (quote (
quote gras)) (quote (quote f)) (list (quote list) (quote (quote plus)) (quote (
quote n)) (quote k))))) (quote forall!-result)))) (list (quote setq) (quote k) (
list (list (quote lambda) (list (quote forall!-result)) (list (quote aeval!*) (
list (quote list) (quote (quote plus)) (quote forall!-result) 1))) (quote k))) (
list (quote go) (quote lab1)))) (list (quote t) (list (quote aeval) (list (quote
rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote d) (minus 1)) (list (quote axx) (
list (quote !~) (quote f)))) (list (quote cond) (list (list (quote evalnumberp)
(list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (
quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote minus) 1) (quote k)) (list (quote list) (quote (quote
pg)) (quote k) (list (quote list) (quote (quote axx)) (quote (quote f)))) (list
(quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) (list (
quote minus) 1)) (list (quote plus) (quote k) 1)))) (quote forall!-result)))) (
list (quote setq) (quote k) (list (list (quote lambda) (list (quote 
forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (
quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))) (list (quote 
replaceby) (list (quote times) (list (quote axx) (list (quote !~) (quote f))) (
list (quote d) (minus 2))) (list (quote cond) (list (list (quote evalnumberp) (
list (quote aeval) (quote (quote ww)))) (list (quote prog) (list (quote k) (
quote forall!-result)) (list (quote setq) (quote k) 0) (list (quote setq) (quote
forall!-result) 0) (quote lab1) (list (quote cond) (list (list (quote aminusp!:)
(list (quote list) (quote (quote difference)) (list (quote aeval!*) (list (quote
list) (quote (quote difference)) (quote (quote ww)) 1)) (quote k))) (list (quote
return) (quote forall!-result)))) (list (quote setq) (quote forall!-result) (
list (quote aeval!*) (list (quote list) (quote (quote plus)) (list (quote 
aeval!*) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote list) (quote (quote d)) (list (quote minus) 2)) (list
(quote plus) (quote k) 1)) (list (quote list) (quote (quote pg)) (quote k) (list
(quote list) (quote (quote axx)) (quote (quote f)))))) (quote forall!-result))))
(list (quote setq) (quote k) (list (list (quote lambda) (list (quote 
forall!-result)) (list (quote aeval!*) (list (quote list) (quote (quote plus)) (
quote forall!-result) 1))) (quote k))) (list (quote go) (quote lab1)))) (list (
quote t) (list (quote aeval) (list (quote rederr) (list (quote revalx) 
"introduce the precision e.g. give the value of ww > 0")))))))))
(!~let (quote ((list (replaceby (times (d t) (axp (!~ f))) (times (axp f) (d t)
f)) (replaceby (times (d t) (bos (!~ f) (!~ n) (!~ m))) (plus (bos f n m t t) (
times (bos f n m) (d t)))) (replaceby (times (d t) (fer (!~ f) (!~ n) (!~ m))) (
plus (fer f n m t) (times (fer f n m) (d t)))) (replaceby (times (d t) (bos (!~
f) (!~ n) (!~ m) (!~ l))) (plus (times l (bos f n m (difference l 1)) (bos f n m
t t)) (times (bos f n m l) (d t))))))))
(progn (aeval (put (quote rzut) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote rzut) (quote defined!-in!-file)
(quote susy2!/susy2!.red))) (aeval (put (quote rzut) (quote defined!-on!-line) 
823)) (progn (put (quote rzut) (quote number!-of!-args) 2) (flag (quote (rzut))
(quote opfn)) (de rzut (rr n) (prog (ola ewa) (setq ola (aeval (list (quote chan
) rr))) (setq ewa (aeval (list (quote sub) (list (quote equal) (list (quote d) (
minus 1)) 0) (list (quote equal) (list (quote d) (minus 2)) 0) (list (quote 
equal) (list (quote d) (minus 3)) 0) (list (quote equal) (list (quote d) (minus
4)) 0) ola))) (cond ((evalequal (aeval n) 0) (return (aeval ewa)))) (cond ((
evalequal (aeval n) 1) (setq ewa (aeval (list (quote difference) ewa (list (
quote sub) (list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list
(quote der) 2) 0) (list (quote equal) (list (quote der) 3) 0) (list (quote equal
) (list (quote d) 1) 0) ewa)))))) (cond ((evalequal (aeval n) 2) (setq ewa (
aeval (list (quote difference) (list (quote difference) (list (quote difference)
(list (quote difference) ewa (list (quote sd_part) ewa 0 0)) (list (quote times)
(list (quote sd_part) ewa 1 0) (list (quote der) 1))) (list (quote times) (list
(quote sd_part) ewa 2 0) (list (quote der) 2))) (list (quote times) (list (quote
sd_part) ewa 0 1) (list (quote d) 1))))))) (return (aeval ewa))))))
(progn (aeval (put (quote sd_part) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote sd_part) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote sd_part) (
quote defined!-on!-line) 831)) (progn (put (quote sd_part) (quote 
number!-of!-args) 3) (flag (quote (sd_part)) (quote opfn)) (de sd_part (wr n m)
(prog (ewa ola) (setq ewa (aeval (list (quote sub) (list (quote equal) (list (
quote d) 1) (quote !@kk)) (list (quote equal) (list (quote d) 2) (quote !@kk)) (
list (quote equal) (list (quote d) (minus 2)) (quote !@ss)) (list (quote equal)
(list (quote d) (minus 1)) (quote !@ss)) (list (quote equal) (list (quote d) (
minus 3)) (list (quote times) (quote !@ss) (list (quote d) (minus 33)))) (list (
quote equal) (list (quote d) (minus 4)) (list (quote times) (quote !@ss) (list (
quote d) (minus 44)))) wr))) (setq ola (cond ((evalgreaterp (aeval m) 0) (aeval
(list (quote coeffn) ewa (quote !@kk) m))) ((evalequal (aeval m) 0) (aeval (list
(quote sub) (list (quote equal) (quote !@ss) 0) (list (quote equal) (quote !@kk)
0) ewa))) (t (aeval (list (quote coeffn) ewa (quote !@ss) (list (quote minus) m)
))))) (return (aeval (list (quote s_part) (list (quote sub) (list (quote equal)
(quote !@ss) 1) (list (quote equal) (quote !@kk) 1) (list (quote equal) (list (
quote d) (minus 33)) (list (quote d) (minus 3))) (list (quote equal) (list (
quote d) (minus 44)) (list (quote d) (minus 4))) ola) n)))))))
(progn (aeval (put (quote d_part) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote d_part) (quote defined!-in!-file
) (quote susy2!/susy2!.red))) (aeval (put (quote d_part) (quote 
defined!-on!-line) 838)) (progn (put (quote d_part) (quote number!-of!-args) 2)
(flag (quote (d_part)) (quote opfn)) (de d_part (ww n) (prog (ewa ola) (setq ewa
(aeval (list (quote sub) (list (quote equal) (list (quote d) 1) (quote !@kk)) (
list (quote equal) (list (quote d) 2) (quote !@kk)) (list (quote equal) (list (
quote d) (minus 1)) (quote !@ss)) (list (quote equal) (list (quote d) (minus 2))
(quote !@ss)) (list (quote equal) (list (quote d) (minus 3)) (list (quote times)
(quote !@ss) (list (quote d) (minus 33)))) (list (quote equal) (list (quote d) (
minus 4)) (list (quote times) (list (quote d) (minus 44)) (quote !@ss))) ww))) (
setq ola (cond ((evalgreaterp (aeval n) 0) (aeval (list (quote coeffn) ewa (
quote !@kk) n))) ((evalequal (aeval n) 0) (aeval (list (quote sub) (list (quote
equal) (quote !@kk) 0) (list (quote equal) (quote !@ss) 0) ewa))) (t (aeval (
list (quote coeffn) ewa (quote !@ss) (list (quote minus) n)))))) (return (aeval
(list (quote sub) (list (quote equal) (list (quote d) (minus 33)) (list (quote d
) (minus 3))) (list (quote equal) (list (quote d) (minus 44)) (list (quote d) (
minus 4))) ola)))))))
(progn (aeval (put (quote pr) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote pr) (quote defined!-in!-file) (
quote susy2!/susy2!.red))) (aeval (put (quote pr) (quote defined!-on!-line) 845)
) (progn (put (quote pr) (quote number!-of!-args) 2) (flag (quote (pr)) (quote 
opfn)) (de pr (n ww) (prog (ewa) (cond ((evalequal (aeval n) 0) (setq ewa (aeval
ww)))) (cond ((evalequal (aeval n) 1) (setq ewa (aeval (list (quote times) (list
(quote der) 1) ww))))) (cond ((evalequal (aeval n) 2) (setq ewa (aeval (list (
quote times) (list (quote der) 2) ww))))) (cond ((evalequal (aeval n) 3) (cond (
(evalequal (aeval (quote abra_kadabra)) 3) (setq ewa (aeval (list (quote times)
(list (quote der) 3) ww)))) (t (setq ewa (aeval (list (quote times) (list (quote
der) 1) (list (quote pr) 2 ww)))))))) (return (aeval (list (quote sub) (list (
quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0)
(list (quote equal) (list (quote der) 3) 0) ewa)))))))
(setk (quote !@rak) (aeval (list (quote list) (list (quote equal) (list (quote 
stp) 1) 1) (list (quote equal) (list (quote stp) 10) 1) (list (quote equal) (
list (quote stp) 20) 1) (list (quote equal) (list (quote stp) 2) (minus 1)))))
(progn (aeval (put (quote cp) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote cp) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote cp) (quote defined!-on!-line) 858)) (
progn (put (quote cp) (quote number!-of!-args) 1) (flag (quote (cp)) (quote opfn
)) (de cp (xwx) (prog (kap kap1 ess k l) (cond ((evalequal (aeval xwx) 0) (
return 0))) (setq kap (aeval (list (quote length) xwx))) (cond ((evalnumberp (
aeval kap)) (return (aeval (list (quote cp1) xwx))))) (setq kap1 (aeval (list (
quote first) kap))) (aeval (matrix (list (list (quote !@z_z) kap1 kap1)))) (
aeval (matrix (list (list (quote !@s_s) kap1 kap1)))) (prog (k) (setq k 1) lab (
cond ((aminusp!: (list (quote difference) (aeval!* kap1) k)) (return nil))) (
prog (l) (setq l 1) lab (cond ((aminusp!: (list (quote difference) (aeval!* kap1
) l)) (return nil))) (progn (setq ess (aeval!* (list (quote sub) (list (quote 
equal) (quote !@krr) 1) (list (quote times) (quote !@krr) (list xwx k l))))) (
setk (list (quote !@z_z) k l) (aeval!* (list (quote cp1) ess))) (aeval!* (
!~clear (list ess))) (aeval!* (quote nil))) (setq l ((lambda (forall!-result) (
aeval!* (list (quote plus) forall!-result 1))) l)) (go lab)) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (
aeval (!~clear (list (quote !@krr)))) (setk (quote !@s_s) (aeval (list (quote tp
) (quote !@z_z)))) (aeval (!~clear (list (quote !@z_z)))) (return (aeval (quote
!@s_s)))))))
(progn (aeval (put (quote cp1) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote cp1) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote cp1) (quote defined!-on!-line) 867)) (
progn (put (quote cp1) (quote number!-of!-args) 1) (flag (quote (cp1)) (quote 
opfn)) (de cp1 (yyz) (prog (ewa ola xx yyy) (cond ((evalequal (aeval yyz) 0) (
return 0))) (setq yyy (cond ((and (evalequal (aeval (list (quote length) yyz)) 1
) (evalequal (aeval (list (quote arglength) yyz)) (minus 1))) (aeval (list (
quote times) (quote !@) yyz))) (t (aeval yyz)))) (aeval (factor (list (quote d)
(quote der) (quote del)))) (setq ewa (aeval (list (quote lyst) yyy))) (setq ola
(prog (xx forall!-result forall!-endptr) (setq xx (getrlist (aeval ewa))) (cond
((null xx) (return (makelist nil)))) (setq forall!-result (setq forall!-endptr (
cons ((lambda (xx) (prog (mew wem em1 em2 em em3 licz mian) (setq licz (aeval (
list (quote num) xx))) (setq mian (aeval (list (quote den) xx))) (cond ((
evalnumberp (aeval licz)) (return (aeval xx)))) (setq mew (aeval (list (quote 
times) licz (list (quote stp) 1)))) (setq wem (aeval (list (quote sub) (quote 
!@rak) mew))) (setq em (cond ((evalequal (aeval (list (quote part) wem 0)) (
aeval (quote minus))) (minus 1)) (t 1))) (setq em1 (aeval (list (quote cp2) (
list (quote times) em wem)))) (setq em2 (aeval (list (quote setpart!*) (list (
quote reverse) em1) 0 (aeval (quote times))))) (return (aeval (list (quote times
) em2 (list (quote quotient) em mian)))))) (car xx)) nil))) looplabel (setq xx (
cdr xx)) (cond ((null xx) (return (cons (quote list) forall!-result)))) (rplacd
forall!-endptr (cons ((lambda (xx) (prog (mew wem em1 em2 em em3 licz mian) (
setq licz (aeval (list (quote num) xx))) (setq mian (aeval (list (quote den) xx)
)) (cond ((evalnumberp (aeval licz)) (return (aeval xx)))) (setq mew (aeval (
list (quote times) licz (list (quote stp) 1)))) (setq wem (aeval (list (quote 
sub) (quote !@rak) mew))) (setq em (cond ((evalequal (aeval (list (quote part) 
wem 0)) (aeval (quote minus))) (minus 1)) (t 1))) (setq em1 (aeval (list (quote
cp2) (list (quote times) em wem)))) (setq em2 (aeval (list (quote setpart!*) (
list (quote reverse) em1) 0 (aeval (quote times))))) (return (aeval (list (quote
times) em2 (list (quote quotient) em mian)))))) (car xx)) nil)) (setq 
forall!-endptr (cdr forall!-endptr)) (go looplabel))) (aeval (remfac (list (
quote d) (quote der) (quote del)))) (return (aeval (list (quote sub) (list (
quote equal) (quote !@) 1) (list (quote setpart!*) ola 0 (aeval (quote plus)))))
)))))
(progn (aeval (put (quote cp2) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote cp2) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote cp2) (quote defined!-on!-line) 880)) (
progn (put (quote cp2) (quote number!-of!-args) 1) (flag (quote (cp2)) (quote 
opfn)) (de cp2 (zz) (prog (ewa ola ela el1) (cond ((evalequal (aeval (list (
quote arglength) (list (quote times) (quote !@) zz))) 2) (return (aeval (list (
quote list) zz))))) (setq ewa (aeval (list (quote whereexp) (list (quote list) (
quote tryk4)) zz))) (setq ola (aeval (list (quote quotient) zz ewa))) (setq ela
(cond ((evalequal (aeval (list (quote arglength) (list (quote times) (quote !@)
ola))) 2) (aeval (list (quote list) ola))) (t (aeval (list (quote setpart!*) ola
0 (aeval (quote list))))))) (setq el1 (aeval (list (quote append) (list (quote 
list) ewa) ela))) (return (aeval el1))))))
(progn (aeval (put (quote odwa) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote odwa) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote odwa) (quote defined!-on!-line) 891)) (
progn (put (quote odwa) (quote number!-of!-args) 1) (flag (quote (odwa)) (quote
opfn)) (de odwa (wx) (prog (ewa ola) (aeval (!~let (quote (tryk15)))) (setq ewa
(aeval (list (quote sub) (list (quote equal) (list (quote der) 1) (list (quote 
minus) (list (quote der) 20))) (list (quote equal) (list (quote der) 2) (list (
quote der) 10)) (list (quote equal) (list (quote del) 1) (list (quote minus) (
list (quote del) 20))) (list (quote equal) (list (quote del) 2) (list (quote del
) 10)) wx))) (aeval (clearrules (list (quote tryk15)))) (aeval (!~let (quote (
tryk9)))) (setq ola (aeval ewa)) (aeval (clearrules (list (quote tryk9)))) (
return (aeval (list (quote sub) (list (quote equal) (list (quote der) 10) (list
(quote der) 1)) (list (quote equal) (list (quote der) 20) (list (quote der) 2))
(list (quote equal) (list (quote del) 10) (list (quote del) 1)) (list (quote 
equal) (list (quote del) 20) (list (quote del) 2)) ola)))))))
(progn (aeval (put (quote lyst) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote lyst) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote lyst) (quote defined!-on!-line) 900)) (
progn (put (quote lyst) (quote number!-of!-args) 1) (flag (quote (lyst)) (quote
opfn)) (de lyst (wx) (prog (ewa ola kap kap1 adam) (cond ((evalequal (aeval wx)
0) (return (aeval (list (quote list) 0))))) (aeval (factor (list (quote d) (
quote der) (quote del)))) (setq kap (aeval (list (quote length) wx))) (setq kap1
(aeval (list (quote arglength) wx))) (cond ((and (evalequal (aeval kap) 1) (
evalequal (aeval kap1) (minus 1))) (return (aeval (list (quote list) wx))))) (
cond ((evalgreaterp (aeval kap1) (aeval kap)) (return (aeval (list (quote list)
wx))))) (aeval (!~on (list (quote div)))) (setq ewa (aeval wx)) (cond ((
evalequal (aeval (list (quote part) ewa 0)) (aeval (quote plus))) (setq adam (
aeval (list (quote setpart!*) ewa 0 (aeval (quote list)))))) (t (setq adam (
aeval (list (quote list) ewa))))) (aeval (!~off (list (quote div)))) (aeval (
remfac (list (quote d) (quote der) (quote del)))) (return (aeval adam))))))
(progn (aeval (put (quote lyst1) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote lyst1) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote lyst1) (quote defined!-on!-line) 908)) (
progn (put (quote lyst1) (quote number!-of!-args) 1) (flag (quote (lyst1)) (
quote opfn)) (de lyst1 (wy) (prog (ewa ola) (setq ewa (aeval (list (quote lyst)
wy))) (setq ola (aeval (list (quote whereexp) (list (quote list) (quote tryk3))
ewa))) (return (aeval ola))))))
(progn (aeval (put (quote lyst2) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote lyst2) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote lyst2) (quote defined!-on!-line) 911)) (
progn (put (quote lyst2) (quote number!-of!-args) 1) (flag (quote (lyst2)) (
quote opfn)) (de lyst2 (wy) (prog (ewa ola) (setq ewa (aeval (list (quote lyst)
wy))) (setq ola (aeval (list (quote whereexp) (list (quote list) (quote tryk4))
ewa))) (return (aeval ola))))))
(progn (aeval (put (quote war) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote war) (quote defined!-in!-file) (
quote susy2!/susy2!.red))) (aeval (put (quote war) (quote defined!-on!-line) 917
)) (progn (put (quote war) (quote number!-of!-args) 2) (flag (quote (war)) (
quote opfn)) (de war (wa f) (prog (ewa ola adam mew) (aeval (!~let (quote (tryk)
))) (setq ewa (aeval (list (quote difference) (list (quote times) (list (quote d
) f) wa) (list (quote times) wa (list (quote d) f))))) (aeval (clearrules (list
(quote tryk)))) (setq ola (aeval (list (quote whereexp) (list (quote list) (
quote tryk1)) ewa))) (setq ewa (aeval (list (quote sub) (list (quote equal) (
list (quote d) 1) 0) (list (quote equal) (list (quote der) 1) 0) (list (quote 
equal) (list (quote der) 2) 0) (list (quote equal) (list (quote der) 3) 0) ola))
) (cond ((evalequal (aeval ewa) 0) (return 0))) (setq adam (aeval (list (quote 
lyst) ewa))) (setq mew (aeval (list (quote whereexp) (list (quote list) (quote 
tryk3)) adam))) (return (cond ((evalequal (aeval mew) 0) (aeval (list (quote 
list)))) (t (aeval mew))))))))
(progn (aeval (put (quote dyw) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote dyw) (quote defined!-in!-file) (
quote susy2!/susy2!.red))) (aeval (put (quote dyw) (quote defined!-on!-line) 924
)) (progn (put (quote dyw) (quote number!-of!-args) 2) (flag (quote (dyw)) (
quote opfn)) (de dyw (wa f) (prog (ewa ola) (setq ewa (aeval (list (quote 
whereexp) (list (quote list) (quote tryk)) (list (quote difference) (list (quote
times) (list (quote d) f) wa) (list (quote times) wa (list (quote d) f)))))) (
setq ola (aeval (list (quote whereexp) (list (quote list) (quote tryk2)) ewa)))
(setq ewa (aeval (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (
list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der)
2) 0) (list (quote equal) (list (quote der) 3) 0) ola))) (cond ((evalequal (
aeval ewa) 0) (return 0))) (return (aeval (list (quote lyst) ewa)))))))
(progn (aeval (put (quote gra) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote gra) (quote defined!-in!-file) (
quote susy2!/susy2!.red))) (aeval (put (quote gra) (quote defined!-on!-line) 932
)) (progn (put (quote gra) (quote number!-of!-args) 2) (flag (quote (gra)) (
quote opfn)) (de gra (wa f) (prog (ewa ola) (setq ewa (aeval (list (quote 
whereexp) (list (quote list) (quote tryk)) (list (quote difference) (list (quote
times) (list (quote d) f) wa) (list (quote times) wa (list (quote d) f)))))) (
setq ola (aeval (list (quote whereexp) (list (quote list) (quote tryk1)) ewa)))
(return (aeval (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (list
(quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0
) (list (quote equal) (list (quote der) 3) 0) ola)))))))
(progn (aeval (put (quote fpart) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote fpart) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote fpart) (quote defined!-on!-line) 939)) (
progn (put (quote fpart) (quote number!-of!-args) 1) (flag (quote (fpart)) (
quote opfn)) (de fpart (wx) (prog (ewa ola adam) (setq ewa (cond ((evalequal (
aeval (quote abra_kadabra)) 2) (aeval (list (quote whereexp) (list (quote list)
(quote tryk5)) wx))) (t (aeval (list (quote whereexp) (list (quote list) (quote
tryk16)) wx))))) (setq ola (aeval (list (quote sub) (list (quote equal) (list (
quote tet) 1) (quote !#qw)) (list (quote equal) (list (quote tet) 2) (quote !#qq
)) ewa))) (setq adam (aeval (list (quote list) (list (quote coeffn) (list (quote
coeffn) ola (quote !#qw) 0) (quote !#qq) 0) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 1) (quote !#qq) 0) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 0) (quote !#qq) 1) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 1) (quote !#qq) 1)))) (return (aeval adam))))))
(progn (aeval (put (quote bpart) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote bpart) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote bpart) (quote defined!-on!-line) 947)) (
progn (put (quote bpart) (quote number!-of!-args) 1) (flag (quote (bpart)) (
quote opfn)) (de bpart (wx) (prog (ewa ola adam) (setq ewa (cond ((evalequal (
aeval (quote abra_kadabra)) 2) (aeval (list (quote whereexp) (list (quote list)
(quote tryk5)) wx))) (t (aeval (list (quote whereexp) (list (quote list) (quote
tryk16)) wx))))) (aeval (!~let (quote (tryk6)))) (setq ola (aeval (list (quote 
sub) (list (quote equal) (list (quote tet) 1) (quote !#qw)) (list (quote equal)
(list (quote tet) 2) (quote !#qq)) ewa))) (aeval (clearrules (list (quote tryk6)
))) (setq adam (aeval (list (quote list) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 0) (quote !#qq) 0) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 1) (quote !#qq) 0) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 0) (quote !#qq) 1) (list (quote coeffn) (list (quote 
coeffn) ola (quote !#qw) 1) (quote !#qq) 1)))) (return (aeval adam))))))
(progn (aeval (put (quote koza) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote koza) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote koza) (quote 
defined!-on!-line) 958)) (progn (put (quote koza) (quote number!-of!-args) 3) (
flag (quote (koza)) (quote opfn)) (de koza (wx wi wn) (prog (ew1 ew2 am) (setk (
quote ew3) (aeval (list (quote part) wx 3))) (setq ew1 (aeval (list (quote part)
wx 1))) (setq am (cond ((or (and (eq (revalx (quote ew3)) (revalx (quote f))) (
evalequal (aeval wi) 0)) (and (eq (revalx (quote ew3)) (revalx (quote f))) (
evalequal (aeval wi) 3))) (aeval (list (quote times) (quote !@x_y) (list (quote
!@g_g) ew1 wi wn)))) ((or (and (eq (revalx (quote ew3)) (revalx (quote f))) (
evalequal (aeval wi) 1)) (and (eq (revalx (quote ew3)) (revalx (quote f))) (
evalequal (aeval wi) 2))) (aeval (list (quote times) (list (quote expt) (quote 
!@x_y) 2) (list (quote !@f_f) ew1 wi wn)))) ((or (and (eq (revalx (quote ew3)) (
revalx (quote b))) (evalequal (aeval wi) 0)) (and (eq (revalx (quote ew3)) (
revalx (quote b))) (evalequal (aeval wi) 3))) (aeval (list (quote times) (list (
quote expt) (quote !@x_y) 2) (list (quote !@f_f) ew1 wi wn)))) ((or (and (eq (
revalx (quote ew3)) (revalx (quote b))) (evalequal (aeval wi) 1)) (and (eq (
revalx (quote ew3)) (revalx (quote b))) (evalequal (aeval wi) 2))) (aeval (list
(quote times) (quote !@x_y) (list (quote !@g_g) ew1 wi wn)))))) (return (aeval 
am))))))
(progn (aeval (put (quote w_comb) (quote procedure_type) (quote (arrow (times 
general general general general) general)))) (aeval (put (quote w_comb) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote w_comb) (quote
defined!-on!-line) 970)) (progn (put (quote w_comb) (quote number!-of!-args) 4)
(flag (quote (w_comb)) (quote opfn)) (de w_comb (as m a bb) (prog (kap ewa ola 
wic wid wod wod1 wx k s !*precise) (setq kap (aeval (list (quote length) as))) (
cond ((evalequal (aeval m) 0) (return 0))) (cond ((evalequal (aeval m) (aeval (
quote (!:dn!: 5 . -1)))) (return (aeval (list (quote w_comb1) as a bb))))) (setk
(list (quote expt) (quote !#l) (list (quote plus) m 1)) (aeval 0)) (setk (list (
quote expt) (quote !#l) (list (quote plus) m (list (quote quotient) 1 2))) (
aeval 0)) (setq ewa (prog (s forall!-result) (setq s 0) (setq forall!-result 0)
lab1 (cond ((aminusp!: (list (quote difference) (aeval!* (list (quote floor) m))
s)) (return forall!-result))) (setq forall!-result (aeval!* (list (quote plus) (
prog (k forall!-result) (setq k 1) (setq forall!-result 0) lab1 (cond ((
aminusp!: (list (quote difference) (aeval!* kap) k)) (return forall!-result))) (
setq forall!-result (aeval!* (list (quote plus) (aeval!* (list (quote times) (
list (quote expt) (quote !#l) (list (quote plus) (list (quote part) as k 2) s))
(list (quote plus) (list (quote times) (list (quote koza) (list (quote part) as
k) 0 s) 2) (list (quote times) (quote !#l) (list (quote koza) (list (quote part)
as k) 3 s)) (list (quote times) (list (quote expt) (quote !#l) (list (quote 
quotient) 1 2)) (list (quote koza) (list (quote part) as k) 1 s)) (list (quote 
times) (list (quote expt) (quote !#l) (list (quote quotient) 1 2)) (list (quote
koza) (list (quote part) as k) 2 s))))) forall!-result))) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab1)) 
forall!-result))) (setq s ((lambda (forall!-result) (aeval!* (list (quote plus)
forall!-result 1))) s)) (go lab1))) (setq ola (aeval ewa)) (setq wic (aeval ewa)
) (prog (k) (setq k 0) lab (cond ((aminusp!: (list (quote difference) (aeval!* (
list (quote floor) m)) k)) (return nil))) (progn (setq ola (aeval!* (list (quote
times) ewa ola))) (setq ewa (prog (s forall!-result) (setq s 0) (setq 
forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (aeval!* (list
(quote plus) (list (quote difference) m k) 1)) s)) (return forall!-result))) (
setq forall!-result (aeval!* (list (quote plus) (prog (r forall!-result) (setq r
1) (setq forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (
aeval!* kap) r)) (return forall!-result))) (setq forall!-result (aeval!* (list (
quote plus) (aeval!* (list (quote times) (list (quote expt) (quote !#l) (list (
quote plus) (list (quote part) as r 2) s)) (list (quote plus) (list (quote times
) (list (quote koza) (list (quote part) as r) 0 s) 2) (list (quote times) (quote
!#l) (list (quote koza) (list (quote part) as r) 3 s)) (list (quote times) (list
(quote expt) (quote !#l) (list (quote quotient) 1 2)) (list (quote koza) (list (
quote part) as r) 1 s)) (list (quote times) (list (quote expt) (quote !#l) (list
(quote quotient) 1 2)) (list (quote koza) (list (quote part) as r) 2 s))))) 
forall!-result))) (setq r ((lambda (forall!-result) (aeval!* (list (quote plus)
forall!-result 1))) r)) (go lab1)) forall!-result))) (setq s ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) s)) (go lab1)))
(setq wic (aeval!* (list (quote plus) wic ola))) (aeval!* (quote nil))) (setq k
((lambda (forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (
go lab)) (setq wid (aeval (list (quote sub) (list (quote equal) (quote !#l) (
list (quote expt) (quote !#ll) 2)) wic))) (setq wod (aeval (list (quote coeffn)
wid (quote !#ll) (list (quote times) 2 m)))) (setq wod (cond ((eq (revalx bb) (
revalx (quote b))) (aeval (list (quote sub) (list (quote equal) (quote !@x_y) 0)
wod))) ((eq (revalx bb) (revalx (quote f))) (aeval (list (quote coeffn) wod (
quote !@x_y) 1))))) (setq wod1 (aeval (list (quote lyst) (list (quote whereexp)
(list (quote list) (quote tryk7)) wod)))) (aeval (!~clear (list (list (quote 
expt) (quote !#l) (list (quote plus) m 1)) (list (quote expt) (quote !#l) (list
(quote plus) m (list (quote quotient) 1 2)))))) (setq kap (aeval (list (quote 
length) wod1))) (setq ewa (aeval 0)) (prog (k) (setq k 1) lab (cond ((aminusp!:
(list (quote difference) (aeval!* kap) k)) (return nil))) (progn (setk (quote 
adam) (cond ((evalequal (aeval!* wod1) 0) 0) (t (aeval!* (list (quote part) wod1
k))))) (setq ola (cond ((evalequal (aeval!* (quote adam)) 0) 0) ((evalequal (
aeval!* (list (quote part) (quote adam) 0)) (aeval!* (quote minus))) (aeval!* (
list (quote minus) (quote adam)))) (t (aeval!* (quote adam))))) (setq wx (cond (
(evalequal (aeval!* ola) 0) 1) ((evalequal (aeval!* (list (quote part) ola 0)) (
aeval!* (quote times))) (cond ((fixp (revalx (list (quote part) ola 1))) (
aeval!* (list (quote part) ola 1))) (t 1))) (t 1))) (setq ewa (aeval!* (list (
quote plus) ewa (list (quote times) (list (quote !~mkid) a k) (list (quote 
quotient) ola wx))))) (aeval!* (quote nil))) (setq k ((lambda (forall!-result) (
aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (return (aeval ewa)
)))))
(progn (aeval (put (quote w_comb1) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote w_comb1) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote w_comb1) (
quote defined!-on!-line) 1002)) (progn (put (quote w_comb1) (quote 
number!-of!-args) 3) (flag (quote (w_comb1)) (quote opfn)) (de w_comb1 (as a bb)
(prog (ew kap1 ew1 kap) (setq kap (aeval (list (quote length) as))) (setq ew (
prog (n forall!-result forall!-endptr) (setq n 1) startover (cond ((aminusp!: (
list (quote difference) (aeval!* kap) n)) (return (makelist nil)))) (setq 
forall!-result (cond ((evalneq (aeval!* (list (quote part) as n 2)) (aeval!* (
list (quote quotient) 1 2))) (aeval!* (list (quote list)))) ((and (eq (revalx (
list (quote part) as n 3)) (revalx (quote f))) (eq (revalx bb) (revalx (quote f)
))) (aeval!* (list (quote list) (list (quote fer) (list (quote part) as n 1) 0 0
)))) ((and (eq (revalx (list (quote part) as n 3)) (revalx (quote f))) (eq (
revalx bb) (revalx (quote b)))) (aeval!* (list (quote list)))) ((and (eq (revalx
(list (quote part) as n 3)) (revalx (quote b))) (eq (revalx bb) (revalx (quote f
)))) (aeval!* (list (quote list)))) ((and (eq (revalx (list (quote part) as n 3)
) (revalx (quote b))) (eq (revalx bb) (revalx (quote b)))) (aeval!* (list (quote
list) (list (quote bos) (list (quote part) as n 1) 0 0)))))) (setq 
forall!-endptr (lastpair (cons (quote list) forall!-result))) (setq n ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) n)) (cond ((atom
forall!-endptr) (go startover))) looplabel (cond ((aminusp!: (list (quote 
difference) (aeval!* kap) n)) (return forall!-result))) (rplacd forall!-endptr (
getrlist (cond ((evalneq (aeval!* (list (quote part) as n 2)) (aeval!* (list (
quote quotient) 1 2))) (aeval!* (list (quote list)))) ((and (eq (revalx (list (
quote part) as n 3)) (revalx (quote f))) (eq (revalx bb) (revalx (quote f)))) (
aeval!* (list (quote list) (list (quote fer) (list (quote part) as n 1) 0 0))))
((and (eq (revalx (list (quote part) as n 3)) (revalx (quote f))) (eq (revalx bb
) (revalx (quote b)))) (aeval!* (list (quote list)))) ((and (eq (revalx (list (
quote part) as n 3)) (revalx (quote b))) (eq (revalx bb) (revalx (quote f)))) (
aeval!* (list (quote list)))) ((and (eq (revalx (list (quote part) as n 3)) (
revalx (quote b))) (eq (revalx bb) (revalx (quote b)))) (aeval!* (list (quote 
list) (list (quote bos) (list (quote part) as n 1) 0 0))))))) (setq 
forall!-endptr (lastpair forall!-endptr)) (setq n ((lambda (forall!-result) (
aeval!* (list (quote plus) forall!-result 1))) n)) (go looplabel))) (setq kap1 (
aeval (list (quote length) ew))) (setq ew1 (cond ((evalequal (aeval kap1) 0) 0)
(t (prog (n forall!-result) (setq n 1) (setq forall!-result 0) lab1 (cond ((
aminusp!: (list (quote difference) (aeval!* kap1) n)) (return forall!-result)))
(setq forall!-result (aeval!* (list (quote plus) (aeval!* (list (quote times) (
list (quote !~mkid) a n) (list (quote part) ew n))) forall!-result))) (setq n ((
lambda (forall!-result) (aeval!* (list (quote plus) forall!-result 1))) n)) (go
lab1))))) (return (aeval ew1))))))
(progn (aeval (put (quote fcomb) (quote procedure_type) (quote (arrow (times 
general general general general) general)))) (aeval (put (quote fcomb) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote fcomb) (quote
defined!-on!-line) 1016)) (progn (put (quote fcomb) (quote number!-of!-args) 4)
(flag (quote (fcomb)) (quote opfn)) (de fcomb (as n b bb) (prog (ewa ola ala k 
kap wx wy kap1 wod wod1 ema wz wz1) (aeval (operator (list b))) (setq ewa (aeval
(list (quote w_comb) as n (quote a) bb))) (setq kap (aeval (list (quote length)
as))) (setq ala (aeval (list (quote list)))) (setq wz (aeval ewa)) (setq wz1 (
aeval ewa)) (setq ema (aeval (list (quote list)))) (prog (k) (setq k 1) lab (
cond ((aminusp!: (list (quote difference) (aeval!* kap) k)) (return nil))) (
progn (setq wz (aeval!* (list (quote sub) (list (quote equal) (list (quote part)
as k 1) 0) wz))) (setq wx (aeval!* (list (quote difference) wz1 wz))) (setq wz1
(aeval!* wz)) (setq ema (aeval!* (list (quote append) ema (list (quote list) (
list (quote list) wx))))) (aeval!* (quote nil))) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (
prog (k) (setq k 1) lab (cond ((aminusp!: (list (quote difference) (aeval!* kap)
k)) (return nil))) (progn (setq wx (aeval!* (list (quote dyw) (list (quote part)
ema k 1) (list (quote part) as k 1)))) (setq wy (cond ((evalequal (aeval!* wx) 0
) (aeval!* (list (quote list)))) (t (aeval!* wx)))) (setq ala (aeval!* (list (
quote append) ala wy))) (aeval!* (quote nil))) (setq k ((lambda (forall!-result)
(aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (setq kap1 (aeval
(list (quote length) ala))) (setq ewa (aeval 0)) (prog (k) (setq k 1) lab (cond
((aminusp!: (list (quote difference) (aeval!* kap1) k)) (return nil))) (progn (
setq wod (aeval!* (list (quote part) ala k))) (setq wod1 (aeval!* (list (quote 
whereexp) (list (quote list) (quote tryk3)) wod))) (setq ewa (aeval!* (list (
quote plus) ewa (list (quote times) (list b k) (list (quote quotient) wod wod1))
))) (aeval!* (quote nil))) (setq k ((lambda (forall!-result) (aeval!* (list (
quote plus) forall!-result 1))) k)) (go lab)) (return (aeval ewa))))))
(progn (aeval (put (quote pse_ele) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote pse_ele) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote pse_ele) (
quote defined!-on!-line) 1028)) (progn (put (quote pse_ele) (quote 
number!-of!-args) 3) (flag (quote (pse_ele)) (quote opfn)) (de pse_ele (n ww ss)
(prog (ewa ola kap k maj maj1 ela) (setq ewa (aeval 0)) (aeval (operator (list 
ss))) (prog (k) (setq k 1) lab (cond ((aminusp!: (list (quote difference) (
aeval!* n) k)) (return nil))) (progn (setq ewa (aeval!* (list (quote plus) ewa (
list (quote times) (list (quote plus) (list (quote w_comb) ww k (list (quote 
!~mkid) (list (quote !~mkid) (quote a) k) (quote a)) (quote b)) (list (quote 
times) (list (quote w_comb) ww (list (quote difference) k (list (quote quotient)
1 2)) (list (quote !~mkid) (list (quote !~mkid) (quote a) k) (quote b)) (quote f
)) (list (quote der) 1)) (list (quote times) (list (quote w_comb) ww (list (
quote difference) k (list (quote quotient) 1 2)) (list (quote !~mkid) (list (
quote !~mkid) (quote a) k) (quote c)) (quote f)) (list (quote der) 2)) (list (
quote times) (list (quote w_comb) ww (list (quote difference) k 1) (list (quote
!~mkid) (list (quote !~mkid) (quote a) k) (quote d)) (quote b)) (cond ((
evalequal (aeval!* (quote abra_kadabra)) 3) (aeval!* (list (quote der) 3))) (t (
aeval!* (list (quote times) (list (quote der) 1) (list (quote der) 2))))))) (
list (quote expt) (list (quote d) 1) (list (quote difference) n k)))))) (aeval!*
(quote nil))) (setq k ((lambda (forall!-result) (aeval!* (list (quote plus) 
forall!-result 1))) k)) (go lab)) (aeval (remfac (list (quote fer) (quote bos)))
) (setq kap (aeval (list (quote length) ewa))) (setq ola (aeval 0)) (prog (k) (
setq k 1) lab (cond ((aminusp!: (list (quote difference) (aeval!* kap) k)) (
return nil))) (progn (setq maj (cond ((evalequal (aeval!* ewa) 0) 0) ((evalequal
(aeval!* kap) 1) (aeval!* ewa)) (t (aeval!* (list (quote part) ewa k))))) (setq
maj1 (cond ((evalequal (aeval!* maj) 0) 1) (t (aeval!* (list (quote whereexp) (
list (quote list) (quote tryk4)) maj))))) (setq ola (aeval!* (list (quote plus)
ola (list (quote times) (list ss (list (quote plus) k 1)) (list (quote quotient)
maj maj1))))) (aeval!* (quote nil))) (setq k ((lambda (forall!-result) (aeval!*
(list (quote plus) forall!-result 1))) k)) (go lab)) (setq ela (aeval (list (
quote plus) (list (quote times) (list ss 0) (list (quote expt) (list (quote d) 1
) n)) (list (quote times) (list ss 1) (cond ((evalequal (aeval (quote 
abra_kadabra)) 3) (aeval (list (quote der) 3))) (t (aeval (list (quote times) (
list (quote der) 1) (list (quote der) 2))))) (list (quote expt) (list (quote d)
1) (list (quote difference) n 1))) ola))) (aeval (factor (list (quote fer) (
quote bos)))) (cond ((evalequal (aeval (quote abra_kadabra)) 3) (setq ela (aeval
(list (quote whereexp) (list (quote list) (list (quote list) (list (quote 
replaceby) (list (quote times) (list (quote der) 1) (list (quote der) 2)) (list
(quote der) 3)))) ela))))) (return (aeval ela))))))
(progn (aeval (put (quote n_gat) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote n_gat) (quote defined!-in!-file)
(quote susy2!/susy2!.red))) (aeval (put (quote n_gat) (quote defined!-on!-line)
1051)) (progn (put (quote n_gat) (quote number!-of!-args) 2) (flag (quote (n_gat
)) (quote opfn)) (de n_gat (pp wim) (prog (kap niech zyje) (setq kap (aeval (
list (quote length) wim))) (setq niech (aeval (list (quote gato) pp))) (aeval (
!~let (list wim))) (setq zyje (aeval (list (quote whereexp) (list (quote list) (
quote tryk10)) niech))) (aeval (clearrules (list wim))) (return (aeval zyje)))))
)
(progn (aeval (put (quote gato) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote gato) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote gato) (quote defined!-on!-line) 1057)) (
progn (put (quote gato) (quote number!-of!-args) 1) (flag (quote (gato)) (quote
opfn)) (de gato (p) (prog (as ess mess) (cond ((evalnumberp (aeval (list (quote
length) p))) (return (aeval (list (quote gat1) p))))) (setq as (aeval (list (
quote first) (list (quote length) p)))) (aeval (matrix (list (list (quote !#zz)
as as)))) (prog (k) (setq k 1) lab (cond ((aminusp!: (list (quote difference) (
aeval!* as) k)) (return nil))) (prog (l) (setq l 1) lab (cond ((aminusp!: (list
(quote difference) (aeval!* as) l)) (return nil))) (progn (setq ess (aeval!* (
list (quote whereexp) (list (quote list) (quote tryk8)) (list (quote times) (
quote !#zab) (list p k l))))) (setq mess (aeval!* (list (quote whereexp) (list (
quote list) (quote tryk9)) (list (quote quotient) ess (quote !#zab))))) (setk (
list (quote !#zz) k l) (aeval!* (list (quote sub) (list (quote equal) (quote eps
) 0) (list (quote df) mess (quote eps))))) (aeval!* (quote nil))) (setq l ((
lambda (forall!-result) (aeval!* (list (quote plus) forall!-result 1))) l)) (go
lab)) (setq k ((lambda (forall!-result) (aeval!* (list (quote plus) 
forall!-result 1))) k)) (go lab)) (return (aeval (quote !#zz)))))))
(progn (aeval (put (quote gat1) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote gat1) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote gat1) (quote defined!-on!-line) 1065)) (
progn (put (quote gat1) (quote number!-of!-args) 1) (flag (quote (gat1)) (quote
opfn)) (de gat1 (p) (prog (ess zz mess) (setq ess (aeval (list (quote whereexp)
(list (quote list) (quote tryk8)) p))) (setq mess (aeval (list (quote whereexp)
(list (quote list) (quote tryk9)) ess))) (setq zz (aeval (list (quote sub) (list
(quote equal) (quote eps) 0) (list (quote df) mess (quote eps))))) (return (
aeval zz))))))
(progn (aeval (put (quote fjacob) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote fjacob) (quote defined!-in!-file
) (quote susy2!/susy2!.red))) (aeval (put (quote fjacob) (quote 
defined!-on!-line) 1073)) (progn (put (quote fjacob) (quote number!-of!-args) 2)
(flag (quote (fjacob)) (quote opfn)) (de fjacob (p w) (prog (as as1 es1 wod0 
wod1 wod2 wod3 wodx) (cond ((evalnumberp (aeval (list (quote length) p))) (
return (aeval (list (quote jacob1) p w))))) (setq as (aeval (list (quote first)
(list (quote length) p)))) (aeval (matrix (list (list (quote !#ala) as as) (list
(quote !#ela) as as)))) (setk (quote !#ala) (aeval (list (quote gato) p))) (
aeval (operator (list (quote !#a) (quote !#b) (quote !#c)))) (setq as1 (prog (k
forall!-result forall!-endptr) (setq k 1) (cond ((aminusp!: (list (quote 
difference) (aeval!* as) k)) (return (makelist nil)))) (setq forall!-result (
setq forall!-endptr (cons (prog (l forall!-result) (setq l 1) (setq 
forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (aeval!* as) l
)) (return forall!-result))) (setq forall!-result (aeval!* (list (quote plus) (
aeval!* (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (list (quote
equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0) (list
(quote times) (list p k l) (list (quote bos) (list (quote !#b) l) 0 0)))) 
forall!-result))) (setq l ((lambda (forall!-result) (aeval!* (list (quote plus)
forall!-result 1))) l)) (go lab1)) nil))) looplabel (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (cond ((
aminusp!: (list (quote difference) (aeval!* as) k)) (return (cons (quote list) 
forall!-result)))) (rplacd forall!-endptr (cons (prog (l forall!-result) (setq l
1) (setq forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (
aeval!* as) l)) (return forall!-result))) (setq forall!-result (aeval!* (list (
quote plus) (aeval!* (list (quote sub) (list (quote equal) (list (quote d) 1) 0)
(list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der
) 2) 0) (list (quote times) (list p k l) (list (quote bos) (list (quote !#b) l)
0 0)))) forall!-result))) (setq l ((lambda (forall!-result) (aeval!* (list (
quote plus) forall!-result 1))) l)) (go lab1)) nil)) (setq forall!-endptr (cdr 
forall!-endptr)) (go looplabel))) (prog (k) (setq k 1) lab (cond ((aminusp!: (
list (quote difference) (aeval!* as) k)) (return nil))) (progn (setk (list (
quote bos) (list (quote part) w k)) (aeval!* (list (quote part) as1 k))) (
aeval!* (quote nil))) (setq k ((lambda (forall!-result) (aeval!* (list (quote 
plus) forall!-result 1))) k)) (go lab)) (setk (quote !#ela) (aeval (list (quote
whereexp) (list (quote list) (quote tryk10)) (quote !#ala)))) (setk (quote wod)
(prog (k forall!-result) (setq k 1) (setq forall!-result 0) lab1 (cond ((
aminusp!: (list (quote difference) (aeval!* as) k)) (return forall!-result))) (
setq forall!-result (aeval!* (list (quote plus) (prog (l forall!-result) (setq l
1) (setq forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (
aeval!* as) l)) (return forall!-result))) (setq forall!-result (aeval!* (list (
quote plus) (aeval!* (list (quote times) (list (quote bos) (list (quote !#c) k)
0 0) (list (quote !#ela) k l) (list (quote bos) (list (quote !#a) l) 0 0))) 
forall!-result))) (setq l ((lambda (forall!-result) (aeval!* (list (quote plus)
forall!-result 1))) l)) (go lab1)) forall!-result))) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab1)))
(setq wod1 (aeval (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (
list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der)
2) 0) (quote wod)))) (setq wodx (aeval (list (quote whereexp) (list (quote list)
(quote tryk11)) wod1))) (setq wod2 (aeval (list (quote whereexp) (list (quote 
list) (quote tryk12)) wodx))) (setq wod3 (aeval (list (quote whereexp) (list (
quote list) (quote tryk13)) wodx))) (return (aeval (list (quote plus) wod1 wod2
wod3)))))))
(progn (aeval (put (quote jacob) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote jacob) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote jacob) (quote
defined!-on!-line) 1090)) (progn (put (quote jacob) (quote number!-of!-args) 3)
(flag (quote (jacob)) (quote opfn)) (de jacob (p w m) (prog (woda) (setq woda (
prog (wx forall!-result) (setq wx 1) (setq forall!-result 0) lab1 (cond ((minusp
(difference 3 wx)) (return forall!-result))) (setq forall!-result (aeval!* (list
(quote plus) (prog (trys as1 as wod) (aeval!* (operator (list (quote !#a) (quote
!#b) (quote !#c) (quote !@a) (quote !@b) (quote !@c)))) (setq as (aeval!* (list
(quote first) (list (quote length) p)))) (setq trys (prog (k forall!-result 
forall!-endptr) (setq k 1) startover (cond ((aminusp!: (list (quote difference)
(aeval!* as) k)) (return (makelist nil)))) (setq forall!-result (aeval!* (list (
quote list) (list (quote equal) (list (quote !@a) k) (cond ((evalequal k (
aeval!* (list (quote first) m))) (aeval!* (list (quote !#a) k))) (t 0))) (list (
quote equal) (list (quote !@b) k) (cond ((evalequal k (aeval!* (list (quote 
second) m))) (aeval!* (list (quote !#b) k))) (t 0))) (list (quote equal) (list (
quote !@c) k) (cond ((evalequal k (aeval!* (list (quote third) m))) (aeval!* (
list (quote !#c) k))) (t 0)))))) (setq forall!-endptr (lastpair (cons (quote 
list) forall!-result))) (setq k ((lambda (forall!-result) (aeval!* (list (quote
plus) forall!-result 1))) k)) (cond ((atom forall!-endptr) (go startover))) 
looplabel (cond ((aminusp!: (list (quote difference) (aeval!* as) k)) (return 
forall!-result))) (rplacd forall!-endptr (getrlist (aeval!* (list (quote list) (
list (quote equal) (list (quote !@a) k) (cond ((evalequal k (aeval!* (list (
quote first) m))) (aeval!* (list (quote !#a) k))) (t 0))) (list (quote equal) (
list (quote !@b) k) (cond ((evalequal k (aeval!* (list (quote second) m))) (
aeval!* (list (quote !#b) k))) (t 0))) (list (quote equal) (list (quote !@c) k)
(cond ((evalequal k (aeval!* (list (quote third) m))) (aeval!* (list (quote !#c)
k))) (t 0))))))) (setq forall!-endptr (lastpair forall!-endptr)) (setq k ((
lambda (forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go
looplabel))) (aeval!* (!~let (list trys))) (aeval!* (matrix (list (list (quote 
!@ala) as as) (list (quote !@ela) as as)))) (setk (quote !@ala) (aeval!* (list (
quote gato) p))) (setq as1 (prog (k forall!-result forall!-endptr) (setq k 1) (
cond ((aminusp!: (list (quote difference) (aeval!* as) k)) (return (makelist nil
)))) (setq forall!-result (setq forall!-endptr (cons (prog (l forall!-result) (
setq l 1) (setq forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference
) (aeval!* as) l)) (return forall!-result))) (setq forall!-result (aeval!* (list
(quote plus) (aeval!* (list (quote sub) (list (quote equal) (list (quote d) 1) 0
) (list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote 
der) 2) 0) (list (quote times) (list p k l) (list (quote bos) (cond ((equal wx 1
) (aeval!* (list (quote !@b) l))) ((equal wx 2) (aeval!* (list (quote !@c) l)))
((equal wx 3) (aeval!* (list (quote !@a) l)))) 0 0)))) forall!-result))) (setq l
((lambda (forall!-result) (aeval!* (list (quote plus) forall!-result 1))) l)) (
go lab1)) nil))) looplabel (setq k ((lambda (forall!-result) (aeval!* (list (
quote plus) forall!-result 1))) k)) (cond ((aminusp!: (list (quote difference) (
aeval!* as) k)) (return (cons (quote list) forall!-result)))) (rplacd 
forall!-endptr (cons (prog (l forall!-result) (setq l 1) (setq forall!-result 0)
lab1 (cond ((aminusp!: (list (quote difference) (aeval!* as) l)) (return 
forall!-result))) (setq forall!-result (aeval!* (list (quote plus) (aeval!* (
list (quote sub) (list (quote equal) (list (quote d) 1) 0) (list (quote equal) (
list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0) (list (quote
times) (list p k l) (list (quote bos) (cond ((equal wx 1) (aeval!* (list (quote
!@b) l))) ((equal wx 2) (aeval!* (list (quote !@c) l))) ((equal wx 3) (aeval!* (
list (quote !@a) l)))) 0 0)))) forall!-result))) (setq l ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) l)) (go lab1)) 
nil)) (setq forall!-endptr (cdr forall!-endptr)) (go looplabel))) (prog (k) (
setq k 1) lab (cond ((aminusp!: (list (quote difference) (aeval!* as) k)) (
return nil))) (progn (setk (list (quote bos) (list (quote part) w k)) (aeval!* (
list (quote part) as1 k))) (aeval!* (quote nil))) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (
setk (quote !@ela) (aeval!* (list (quote whereexp) (list (quote list) (quote 
tryk10)) (quote !@ala)))) (setq wod (prog (k forall!-result) (setq k 1) (setq 
forall!-result 0) lab1 (cond ((aminusp!: (list (quote difference) (aeval!* as) k
)) (return forall!-result))) (setq forall!-result (aeval!* (list (quote plus) (
prog (l forall!-result) (setq l 1) (setq forall!-result 0) lab1 (cond ((
aminusp!: (list (quote difference) (aeval!* as) l)) (return forall!-result))) (
setq forall!-result (aeval!* (list (quote plus) (aeval!* (list (quote times) (
list (quote bos) (cond ((equal wx 1) (aeval!* (list (quote !@c) k))) ((equal wx
2) (aeval!* (list (quote !@a) k))) ((equal wx 3) (aeval!* (list (quote !@b) k)))
) 0 0) (list (quote !@ela) k l) (list (quote bos) (cond ((equal wx 1) (aeval!* (
list (quote !@a) l))) ((equal wx 2) (aeval!* (list (quote !@b) l))) ((equal wx 3
) (aeval!* (list (quote !@c) l)))) 0 0))) forall!-result))) (setq l ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) l)) (go lab1)) 
forall!-result))) (setq k ((lambda (forall!-result) (aeval!* (list (quote plus)
forall!-result 1))) k)) (go lab1))) (prog (k) (setq k 1) lab (cond ((aminusp!: (
list (quote difference) (aeval!* as) k)) (return nil))) (aeval!* (!~clear (list
(list (quote !@a) k) (list (quote !@b) k) (list (quote !@c) k) (list (quote bos)
(list (quote part) w k))))) (setq k ((lambda (forall!-result) (aeval!* (list (
quote plus) forall!-result 1))) k)) (go lab)) (return (aeval!* (list (quote sub)
(list (quote equal) (list (quote d) 1) 0) (list (quote equal) (list (quote der)
1) 0) (list (quote equal) (list (quote der) 2) 0) wod)))) forall!-result))) (
setq wx (plus2 wx 1)) (go lab1))) (return (aeval woda))))))
(progn (aeval (put (quote jacob1) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote jacob1) (quote defined!-in!-file
) (quote susy2!/susy2!.red))) (aeval (put (quote jacob1) (quote 
defined!-on!-line) 1118)) (progn (put (quote jacob1) (quote number!-of!-args) 2)
(flag (quote (jacob1)) (quote opfn)) (de jacob1 (p w) (prog (ala ela wod wod1 
wod2 wodx ewa) (setq ala (aeval (list (quote gat1) p))) (setk (list (quote bos)
w) (aeval (list (quote sub) (list (quote equal) (list (quote d) 1) 0) (list (
quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0)
(list (quote times) p (list (quote bos) (quote !#b) 0 0))))) (aeval (!~let (
quote (tryk10)))) (setq ela (aeval ala)) (aeval (clearrules (list (quote tryk10)
))) (setq wod (aeval (list (quote times) (list (quote bos) (quote !#c) 0 0) ela
(list (quote bos) (quote !#a) 0 0)))) (setq wod1 (aeval (list (quote sub) (list
(quote equal) (list (quote d) 1) 0) (list (quote equal) (list (quote der) 1) 0)
(list (quote equal) (list (quote der) 2) 0) wod))) (setq wodx (aeval (list (
quote sub) (list (quote equal) (quote !#a) (quote !#aa)) (list (quote equal) (
quote !#b) (quote !#bb)) (list (quote equal) (quote !#c) (quote !#cc)) wod1))) (
setq wod2 (aeval (list (quote sub) (list (quote equal) (quote !#aa) (quote !#b))
(list (quote equal) (quote !#bb) (quote !#c)) (list (quote equal) (quote !#cc) (
quote !#a)) wodx))) (setk (quote wod3) (aeval (list (quote sub) (list (quote 
equal) (quote !#aa) (quote !#c)) (list (quote equal) (quote !#bb) (quote !#a)) (
list (quote equal) (quote !#cc) (quote !#b)) wodx))) (aeval (!~clear (list (list
(quote bos) w)))) (return (aeval (list (quote plus) wod1 wod2 (quote wod3)))))))
)
(progn (aeval (put (quote macierz) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote macierz) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote macierz) (
quote defined!-on!-line) 1135)) (progn (put (quote macierz) (quote 
number!-of!-args) 3) (flag (quote (macierz)) (quote opfn)) (de macierz (wx xx yy
) (prog (ewa ola ew1 ew2) (aeval (matrix (list (list (quote !@z_z_x) 4 4)))) (
setq ewa (cond ((eq (revalx xx) (revalx (quote f))) (aeval (list (quote sub) (
list (quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote der)
2) 0) (list (quote equal) (list (quote der) 3) 0) (list (quote equal) (list (
quote d) 1) 0) (list (quote times) wx (list (quote fer) (quote !#z_z) 0 0))))) (
(eq (revalx xx) (revalx (quote b))) (aeval (list (quote sub) (list (quote equal)
(list (quote der) 1) 0) (list (quote equal) (list (quote der) 2) 0) (list (quote
equal) (list (quote der) 3) 0) (list (quote equal) (list (quote d) 1) 0) (list (
quote times) wx (list (quote bos) (quote !#z_z) 0 0))))) (t (aeval (rederr (
revalx "wrong value of second  argument which should be b or f")))))) (setq ola
(cond ((eq (revalx yy) (revalx (quote b))) (aeval (list (quote bpart) ewa))) ((
eq (revalx yy) (revalx (quote f))) (aeval (list (quote fpart) ewa))) (t (aeval (
rederr (revalx "wrong value of third  argument which should be b or f")))))) (
setq ew1 (aeval (list (quote whereexp) (list (quote list) (list (quote list) (
list (quote replaceby) (list (quote fun) (quote !#z_z0) (list (quote !~) (quote
n))) (list (quote ber) 1 (quote n))) (list (quote replaceby) (list (quote fun) (
quote !#z_z1) (list (quote !~) (quote n))) (list (quote ber) 2 (quote n))) (list
(quote replaceby) (list (quote gras) (quote !#z_z!#z_z1) (list (quote !~) (quote
n))) (list (quote fir) 1 (quote n))) (list (quote replaceby) (list (quote gras)
(quote !#z_z!#z_z2) (list (quote !~) (quote n))) (list (quote fir) 2 (quote n)))
)) ola))) (setq ew2 (aeval (list (quote whereexp) (list (quote list) (list (
quote list) (list (quote replaceby) (list (quote ber) 1 (list (quote !~) (quote
n))) (list (quote times) (quote !#s_s) (list (quote expt) (list (quote d) 1) (
quote n)))) (list (quote replaceby) (list (quote ber) 2 (list (quote !~) (quote
n))) (list (quote times) (list (quote expt) (quote !#s_s) 4) (list (quote expt)
(list (quote d) 1) (quote n)))) (list (quote replaceby) (list (quote fir) 1 (
list (quote !~) (quote n))) (list (quote times) (list (quote expt) (quote !#s_s)
2) (list (quote expt) (list (quote d) 1) (quote n)))) (list (quote replaceby) (
list (quote fir) 2 (list (quote !~) (quote n))) (list (quote times) (list (quote
expt) (quote !#s_s) 3) (list (quote expt) (list (quote d) 1) (quote n)))))) ew1)
)) (prog (k) (setq k 1) lab (cond ((minusp (difference 4 k)) (return nil))) (
prog (l) (setq l 1) lab (cond ((minusp (difference 4 l)) (return nil))) (setk (
list (quote !@z_z_x) k l) (aeval!* (list (quote chan) (list (quote coeffn) (list
(quote part) ew2 k) (quote !#s_s) l)))) (setq l (plus2 l 1)) (go lab)) (setq k (
plus2 k 1)) (go lab)) (return (aeval (quote !@z_z_x)))))))
(progn (aeval (put (quote dot_ham) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote dot_ham) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote dot_ham) (
quote defined!-on!-line) 1155)) (progn (put (quote dot_ham) (quote 
number!-of!-args) 2) (flag (quote (dot_ham)) (quote opfn)) (de dot_ham (ww mm) (
prog (ewa ola ala as) (setq as (aeval (list (quote length) ww))) (setq ewa (
aeval (list (quote difference) (list (quote times) (list (quote d) (quote t)) mm
) (list (quote times) mm (list (quote d) (quote t)))))) (prog (k) (setq k 1) lab
(cond ((aminusp!: (list (quote difference) (aeval!* as) k)) (return nil))) (setk
(list (quote bos) (list (quote part) (list (quote part) ww k) 1) (quote t)) (
aeval!* (list (quote part) (list (quote part) ww k) 2))) (setq k ((lambda (
forall!-result) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (
setq ola (aeval (list (quote whereexp) (list (quote list) (quote tryk14)) ewa)))
(prog (k) (setq k 1) lab (cond ((aminusp!: (list (quote difference) (aeval!* as)
k)) (return nil))) (aeval!* (!~clear (list (list (quote bos) (list (quote part)
(list (quote part) ww k) 1) (quote t))))) (setq k ((lambda (forall!-result) (
aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (return (aeval ola)
)))))
(!~let (list (list (quote list) (list (quote replaceby) (list (quote waga) (list
(quote !~) (quote k)) (list (quote !~) (quote s)) (list (quote !~) (quote m))) (
list (quote plus) (list (quote times) 2 (quote m)) (list (quote delta) (quote k)
(quote s)) (list (quote times) 2 (list (quote delta) 3 (quote s))) (list (quote
times) (list (quote delta) (list (quote difference) 3 (quote k)) (quote s)) (
list (quote cond) (list (list (quote evalgreaterp) (list (quote aeval) (quote (
quote m))) 0) 1) (list (quote t) 0))))) (list (quote replaceby) (list (quote s_s
) (list (quote !~) (quote f)) (list (quote !~) (quote n))) 1) (list (quote 
replaceby) (list (quote s_s) 1 (list (quote !~) (quote f)) (list (quote !~) (
quote n))) 1) (list (quote replaceby) (list (quote times) (list (quote der) 1) (
list (quote del) (minus 1))) 1) (list (quote replaceby) (list (quote times) (
list (quote der) 2) (list (quote del) (minus 2))) 1) (list (quote replaceby) (
list (quote times) (list (quote der) 3) (list (quote del) (minus 3))) 1) (list (
quote replaceby) (list (quote del) 0) (list (quote d) (minus 3))) (list (quote 
replaceby) (list (quote times) (list (quote der) 1) (list (quote del) (minus 3))
) 1) (list (quote replaceby) (list (quote times) (list (quote der) 2) (list (
quote del) (minus 3))) (list (quote del) (minus 3))) (list (quote replaceby) (
list (quote times) (list (quote der) 1) (list (quote der) 2) (list (quote del) (
minus 3))) 1))))
(setk (quote dryk) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote d) (list (quote !~) (quote f)) (list (quote !~) (quote
n))) (list (quote fer) (list (quote !~) (quote g)) (list (quote !~) (quote k)) (
list (quote !~) (quote m)))) (list (quote times) (list (quote fer) (quote g) (
quote k) (quote m)) (list (quote d) (quote f) (list (quote plus) (quote n) (list
(quote delta) (quote f) (quote g)))))) (list (quote replaceby) (list (quote 
times) (list (quote d) (list (quote !~) (quote f)) (list (quote !~) (quote n)))
(list (quote bos) (list (quote !~) (quote g)) (list (quote !~) (quote k)) (list
(quote !~) (quote m)))) (list (quote times) (list (quote bos) (quote g) (quote k
) (quote m)) (list (quote d) (quote f) (list (quote plus) (quote n) (list (quote
delta) (quote f) (quote g)))))) (list (quote replaceby) (list (quote times) (
list (quote d) (list (quote !~) (quote f)) (list (quote !~) (quote n))) (list (
quote zan) (list (quote !~) (quote g)) (list (quote !~) (quote k)) (list (quote
!~) (quote m)))) (list (quote times) (list (quote zan) (quote g) (quote k) (
quote m)) (list (quote d) (quote f) (list (quote plus) (quote n) 1)))) (list (
quote replaceby) (list (quote times) (list (quote d) (list (quote !~) (quote f))
(list (quote !~) (quote n))) (list (quote zen) (list (quote !~) (quote g)) (list
(quote !~) (quote k)) (list (quote !~) (quote m)))) (list (quote times) (list (
quote zen) (quote g) (quote k) (quote m)) (list (quote d) (quote f) (list (quote
plus) (quote n) 1)))))))
(setk (quote wariat_0) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote times) (list (quote expt) (minus 1) (quote n)) (
list (quote fer) (quote f) (quote k) 0) (list (quote expt) (list (quote d) 1) (
quote n)))) (list (quote replaceby) (list (quote zan) (list (quote !~) (quote f)
) (list (quote !~) (quote k)) (list (quote !~) (quote n))) (list (quote times) (
list (quote expt) (minus 1) (quote n)) (list (quote bos) (quote f) (quote k) 0)
(list (quote expt) (list (quote d) 1) (quote n)))))))
(setk (quote wariat_1) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
list (quote list) (quote (quote plus)) (quote (quote n)) 1)) (list (quote list)
(quote (quote bos)) (quote (quote f)) (list (quote list) (quote (quote 
difference)) (quote (quote k)) 1) 0) (list (quote list) (quote (quote der)) 1) (
list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (
quote (quote n)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote expt)) (list (quote minus)
1) (quote (quote n))) (list (quote list) (quote (quote fer)) (quote (quote f)) (
quote (quote k)) 0) (list (quote list) (quote (quote expt)) (list (quote list) (
quote (quote d)) 1) (quote (quote n)))))))) (list (quote replaceby) (list (quote
zan) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (
quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal) (
list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote 
aeval) (quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote n))) (list (quote list) (quote (quote fer)) (quote (quote f)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 1) 0) (list (quote 
list) (quote (quote der)) 1) (list (quote list) (quote (quote expt)) (list (
quote list) (quote (quote d)) 1) (quote (quote n)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote expt)) (list (quote minus) 1) (quote (quote n))) (list (quote list) (
quote (quote bos)) (quote (quote f)) (quote (quote k)) 0) (list (quote list) (
quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote n)))))
))))))
(setk (quote wariat_2) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
difference)) (quote (quote k)) 1) (quote (quote n)))) (list (quote list) (quote
(quote bos)) (quote (quote f)) (list (quote list) (quote (quote difference)) (
quote (quote k)) 2) 0) (list (quote list) (quote (quote der)) 2) (list (quote 
list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote
n)))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (
quote n))) (list (quote list) (quote (quote fer)) (quote (quote f)) (quote (
quote k)) 0) (list (quote list) (quote (quote expt)) (list (quote list) (quote (
quote d)) 1) (quote (quote n)))))))) (list (quote replaceby) (list (quote zan) (
list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (quote n
))) (list (quote cond) (list (list (quote or) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote aeval) (
quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (list (quote 
list) (quote (quote plus)) (quote (quote k)) (quote (quote n)))) (list (quote 
list) (quote (quote fer)) (quote (quote f)) (list (quote list) (quote (quote 
difference)) (quote (quote k)) 2) 0) (list (quote list) (quote (quote der)) 2) (
list (quote list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (
quote (quote n)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote expt)) (list (quote minus)
1) (quote (quote n))) (list (quote list) (quote (quote bos)) (quote (quote f)) (
quote (quote k)) 0) (list (quote list) (quote (quote expt)) (list (quote list) (
quote (quote d)) 1) (quote (quote n)))))))))))
(setk (quote wariat_3) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (list (
quote cond) (list (list (quote evalgreaterp) (list (quote aeval) (quote (quote n
))) 1) (list (quote aeval) (list (quote list) (quote (quote times)) (list (quote
list) (quote (quote expt)) (list (quote minus) 1) (list (quote list) (quote (
quote difference)) (quote (quote n)) 1)) (list (quote list) (quote (quote plus))
(list (quote list) (quote (quote minus)) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote fer)) (quote (quote f)) 0 0) (list (quote 
list) (quote (quote expt)) (list (quote list) (quote (quote d)) 1) (quote (quote
n))))) (list (quote list) (quote (quote times)) (quote (quote n)) (list (quote 
list) (quote (quote d)) 1) (list (quote list) (quote (quote fer)) (quote (quote
f)) 0 0) (list (quote list) (quote (quote expt)) (list (quote list) (quote (
quote d)) 1) (list (quote list) (quote (quote difference)) (quote (quote n)) 1))
))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote fer))
(quote (quote f)) 0 (quote (quote n))))))) (list (quote replaceby) (list (quote
zen) (list (quote !~) (quote f)) 1 (list (quote !~) (quote n))) (list (quote 
times) (list (quote expt) (minus 1) (quote n)) (list (quote plus) (list (quote 
times) (list (quote fer) (quote f) 1 0) (list (quote expt) (list (quote d) 1) (
quote n))) (list (quote times) (quote n) (list (quote d) 1) (list (quote bos) (
quote f) 0 0) (list (quote der) 1) (list (quote expt) (list (quote d) 1) (list (
quote difference) (quote n) 1)))))) (list (quote replaceby) (list (quote zen) (
list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (quote times) (
list (quote expt) (minus 1) (quote n)) (list (quote plus) (list (quote times) (
list (quote fer) (quote f) 2 0) (list (quote expt) (list (quote d) 1) (quote n))
) (list (quote times) (quote n) (list (quote d) 1) (list (quote bos) (quote f) 0
0) (list (quote der) 2) (list (quote expt) (list (quote d) 1) (list (quote 
difference) (quote n) 1)))))) (list (quote replaceby) (list (quote zen) (list (
quote !~) (quote f)) 3 (list (quote !~) (quote n))) (list (quote plus) (list (
quote minus) (list (quote times) (list (quote zen) (quote f) 0 (quote n)) (list
(quote der) 1) (list (quote der) 2))) (list (quote difference) (list (quote 
times) (list (quote zan) (quote f) 1 (quote n)) (list (quote der) 2)) (list (
quote times) (list (quote zan) (quote f) 2 (quote n)) (list (quote der) 1))))) (
list (quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 0 (list (
quote !~) (quote n))) (list (quote cond) (list (list (quote evalgreaterp) (list
(quote aeval) (quote (quote n))) 1) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote expt)) (list (quote minus)
1) (list (quote list) (quote (quote difference)) (quote (quote n)) 1)) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote minus)) (list
(quote list) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote
(quote f)) 0 0) (list (quote list) (quote (quote expt)) (list (quote list) (
quote (quote d)) 1) (quote (quote n))))) (list (quote list) (quote (quote times)
) (quote (quote n)) (list (quote list) (quote (quote d)) 1) (list (quote list) (
quote (quote bos)) (quote (quote f)) 0 0) (list (quote list) (quote (quote expt)
) (list (quote list) (quote (quote d)) 1) (list (quote list) (quote (quote 
difference)) (quote (quote n)) 1))))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote bos)) (quote (quote f)) 0 (quote (quote n)))))))
(list (quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 1 (list (
quote !~) (quote n))) (list (quote times) (list (quote expt) (minus 1) (quote n)
) (list (quote difference) (list (quote times) (list (quote bos) (quote f) 1 0)
(list (quote expt) (list (quote d) 1) (quote n))) (list (quote times) (quote n)
(list (quote d) 1) (list (quote fer) (quote f) 0 0) (list (quote der) 1) (list (
quote expt) (list (quote d) 1) (list (quote difference) (quote n) 1)))))) (list
(quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 2 (list (quote 
!~) (quote n))) (list (quote times) (list (quote expt) (minus 1) (quote n)) (
list (quote difference) (list (quote times) (list (quote bos) (quote f) 2 0) (
list (quote expt) (list (quote d) 1) (quote n))) (list (quote times) (quote n) (
list (quote d) 1) (list (quote fer) (quote f) 0 0) (list (quote der) 2) (list (
quote expt) (list (quote d) 1) (list (quote difference) (quote n) 1)))))) (list
(quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 3 (list (quote 
!~) (quote n))) (list (quote plus) (list (quote difference) (list (quote minus)
(list (quote times) (list (quote zan) (quote f) 0 (quote n)) (list (quote der) 1
) (list (quote der) 2))) (list (quote times) (list (quote zen) (quote f) 1 (
quote n)) (list (quote der) 2))) (list (quote times) (list (quote zen) (quote f)
2 (quote n)) (list (quote der) 1)))))))
(setk (quote szukaj0) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote n)) (list (quote !~) (
quote g))) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote
k)) (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalleq)
(list (quote aeval) (quote (quote n))) (list (quote aeval) (list (quote list) (
quote (quote times)) 2 (quote (quote m))))) (list (quote aeval) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote (quote
f)) (quote (quote k)) (quote (quote m))) (list (quote list) (quote (quote byk))
(list (quote list) (quote (quote times)) 2 (quote (quote m))) (quote (quote f)))
))) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote fer)) (quote (quote f)) (quote (quote k)) (
quote (quote m))) (list (quote list) (quote (quote byk)) (quote (quote n)) (
quote (quote g)))))))) (list (quote replaceby) (list (quote times) (list (quote
byk) (list (quote !~) (quote n)) (list (quote !~) (quote g))) (list (quote bos)
(list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (quote
m)))) (list (quote cond) (list (list (quote evalleq) (list (quote aeval) (quote
(quote n))) (list (quote aeval) (list (quote list) (quote (quote times)) 2 (
quote (quote m))))) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote bos)) (quote (quote f)) (quote (quote k)) (
quote (quote m))) (list (quote list) (quote (quote byk)) (list (quote list) (
quote (quote times)) 2 (quote (quote m))) (quote (quote f)))))) (list (quote t)
(list (quote aeval) (list (quote list) (quote (quote times)) (list (quote list)
(quote (quote bos)) (quote (quote f)) (quote (quote k)) (quote (quote m))) (list
(quote list) (quote (quote byk)) (quote (quote n)) (quote (quote g)))))))))))
(setk (quote szukaj1) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~) (
quote g))) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote
n)) (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalleq)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote waga)) 1 (quote (quote n)) (quote (quote m))))) (list (quote aeval)
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote fer))
(quote (quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote
(quote byk)) (list (quote list) (quote (quote waga)) 1 (quote (quote n)) (quote
(quote m))) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote
(quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote (quote
byk)) (quote (quote k)) (quote (quote g)))))))) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~) (
quote g))) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote
n)) (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalleq)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote waga)) 1 (quote (quote n)) (quote (quote m))))) (list (quote aeval)
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote bos))
(quote (quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote
(quote byk)) (list (quote list) (quote (quote waga)) 1 (quote (quote n)) (quote
(quote m))) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote
(quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote (quote
byk)) (quote (quote k)) (quote (quote g)))))))))))
(setk (quote szukaj2) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~) (
quote g))) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote
n)) (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalleq)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote waga)) 2 (quote (quote n)) (quote (quote m))))) (list (quote aeval)
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote fer))
(quote (quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote
(quote byk)) (list (quote list) (quote (quote waga)) 2 (quote (quote n)) (quote
(quote m))) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote
(quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote (quote
byk)) (quote (quote k)) (quote (quote g)))))))) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~) (
quote g))) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote
n)) (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote evalleq)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote waga)) 2 (quote (quote n)) (quote (quote m))))) (list (quote aeval)
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote bos))
(quote (quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote
(quote byk)) (list (quote list) (quote (quote waga)) 2 (quote (quote n)) (quote
(quote m))) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote
(quote f)) (quote (quote n)) (quote (quote m))) (list (quote list) (quote (quote
byk)) (quote (quote k)) (quote (quote g)))))))))))
(setk (quote szukaj3) (aeval (list (quote list) (list (quote replaceby) (list (
quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~) (
quote g))) (list (quote fer) (list (quote !~) (quote f)) 0 (list (quote !~) (
quote m)))) (list (quote cond) (list (list (quote evallessp) (list (quote aeval)
(quote (quote m))) 2) (list (quote aeval) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote fer)) (quote (quote f)) 0 (quote (quote m)))
(list (quote list) (quote (quote byk)) (quote (quote k)) (quote (quote g)))))) (
list (quote t) (list (quote progn) (list (quote cond) (list (list (quote evalleq
) (list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list)
(quote (quote times)) 2 (quote (quote m))))) (list (quote aeval) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote (quote
f)) 0 (quote (quote m))) (list (quote list) (quote (quote byk)) (list (quote 
list) (quote (quote times)) 2 (quote (quote m))) (quote (quote f)))))) (list (
quote t) (list (quote aeval) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote fer)) (quote (quote f)) 0 (quote (quote m))) (list (
quote list) (quote (quote byk)) (quote (quote k)) (quote (quote g))))))))))) (
list (quote replaceby) (list (quote times) (list (quote byk) (list (quote !~) (
quote k)) (list (quote !~) (quote g))) (list (quote fer) (list (quote !~) (quote
f)) 1 (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote 
evallessp) (list (quote aeval) (quote (quote m))) 1) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote
(quote f)) 1 (quote (quote m))) (list (quote list) (quote (quote byk)) (quote (
quote k)) (quote (quote g)))))) (list (quote t) (list (quote progn) (list (quote
cond) (list (list (quote evalleq) (list (quote aeval) (quote (quote k))) (list (
quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (quote (
quote times)) 2 (quote (quote m))) 1))) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote fer)) (quote (quote f)) 1
(quote (quote m))) (list (quote list) (quote (quote byk)) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))
) 1) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (quote list
) (quote (quote times)) (list (quote list) (quote (quote fer)) (quote (quote f))
1 (quote (quote m))) (list (quote list) (quote (quote byk)) (quote (quote k)) (
quote (quote g))))))))))) (list (quote replaceby) (list (quote times) (list (
quote byk) (list (quote !~) (quote k)) (list (quote !~) (quote g))) (list (quote
fer) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (quote 
cond) (list (list (quote evallessp) (list (quote aeval) (quote (quote m))) 1) (
list (quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote fer)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (
quote (quote byk)) (quote (quote k)) (quote (quote g)))))) (list (quote t) (list
(quote progn) (list (quote cond) (list (list (quote evalleq) (list (quote aeval)
(quote (quote k))) (list (quote aeval) (list (quote list) (quote (quote plus)) (
list (quote list) (quote (quote times)) 2 (quote (quote m))) 1))) (list (quote 
aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
fer)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (quote (quote 
byk)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
times)) 2 (quote (quote m))) 1) (quote (quote f)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote fer)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (quote (
quote byk)) (quote (quote k)) (quote (quote g))))))))))) (list (quote replaceby)
(list (quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote 
!~) (quote g))) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~)
(quote m)))) (list (quote cond) (list (list (quote evalleq) (list (quote aeval)
(quote (quote k))) (list (quote aeval) (list (quote list) (quote (quote plus)) (
list (quote list) (quote (quote times)) 2 (quote (quote m))) 2))) (list (quote 
aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
fer)) (quote (quote f)) 3 (quote (quote m))) (list (quote list) (quote (quote 
byk)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
times)) 2 (quote (quote m))) 2) (quote (quote f)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote fer)) (quote (quote f)) 3 (quote (quote m))) (list (quote list) (quote (
quote byk)) (quote (quote k)) (quote (quote g)))))))) (list (quote replaceby) (
list (quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote !~
) (quote g))) (list (quote bos) (list (quote !~) (quote f)) 0 (list (quote !~) (
quote m)))) (list (quote cond) (list (list (quote evallessp) (list (quote aeval)
(quote (quote m))) 2) (list (quote aeval) (list (quote list) (quote (quote times
)) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (quote (quote m)))
(list (quote list) (quote (quote byk)) (quote (quote k)) (quote (quote g)))))) (
list (quote t) (list (quote progn) (list (quote cond) (list (list (quote evalleq
) (list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list)
(quote (quote times)) 2 (quote (quote m))))) (list (quote aeval) (list (quote 
list) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote (quote
f)) 0 (quote (quote m))) (list (quote list) (quote (quote byk)) (list (quote 
list) (quote (quote times)) 2 (quote (quote m))) (quote (quote f)))))) (list (
quote t) (list (quote aeval) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote bos)) (quote (quote f)) 0 (quote (quote m))) (list (
quote list) (quote (quote byk)) (quote (quote k)) (quote (quote g))))))))))) (
list (quote replaceby) (list (quote times) (list (quote byk) (list (quote !~) (
quote k)) (list (quote !~) (quote g))) (list (quote bos) (list (quote !~) (quote
f)) 1 (list (quote !~) (quote m)))) (list (quote cond) (list (list (quote 
evallessp) (list (quote aeval) (quote (quote m))) 1) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote
(quote f)) 1 (quote (quote m))) (list (quote list) (quote (quote byk)) (quote (
quote k)) (quote (quote g)))))) (list (quote t) (list (quote progn) (list (quote
cond) (list (list (quote evalleq) (list (quote aeval) (quote (quote k))) (list (
quote aeval) (list (quote list) (quote (quote plus)) (list (quote list) (quote (
quote times)) 2 (quote (quote m))) 1))) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote bos)) (quote (quote f)) 1
(quote (quote m))) (list (quote list) (quote (quote byk)) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))
) 1) (quote (quote f)))))) (list (quote t) (list (quote aeval) (list (quote list
) (quote (quote times)) (list (quote list) (quote (quote bos)) (quote (quote f))
1 (quote (quote m))) (list (quote list) (quote (quote byk)) (quote (quote k)) (
quote (quote g))))))))))) (list (quote replaceby) (list (quote times) (list (
quote byk) (list (quote !~) (quote k)) (list (quote !~) (quote g))) (list (quote
bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m)))) (list (quote 
cond) (list (list (quote evallessp) (list (quote aeval) (quote (quote m))) 1) (
list (quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (
quote (quote bos)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (
quote (quote byk)) (quote (quote k)) (quote (quote g)))))) (list (quote t) (list
(quote progn) (list (quote cond) (list (list (quote evalleq) (list (quote aeval)
(quote (quote k))) (list (quote aeval) (list (quote list) (quote (quote plus)) (
list (quote list) (quote (quote times)) 2 (quote (quote m))) 1))) (list (quote 
aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
bos)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (quote (quote 
byk)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
times)) 2 (quote (quote m))) 1) (quote (quote f)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote bos)) (quote (quote f)) 2 (quote (quote m))) (list (quote list) (quote (
quote byk)) (quote (quote k)) (quote (quote g))))))))))) (list (quote replaceby)
(list (quote times) (list (quote byk) (list (quote !~) (quote k)) (list (quote 
!~) (quote g))) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~)
(quote m)))) (list (quote cond) (list (list (quote evalleq) (list (quote aeval)
(quote (quote k))) (list (quote aeval) (list (quote list) (quote (quote plus)) (
list (quote list) (quote (quote times)) 2 (quote (quote m))) 2))) (list (quote 
aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
bos)) (quote (quote f)) 3 (quote (quote m))) (list (quote list) (quote (quote 
byk)) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote 
times)) 2 (quote (quote m))) 2) (quote (quote f)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote bos)) (quote (quote f)) 3 (quote (quote m))) (list (quote list) (quote (
quote byk)) (quote (quote k)) (quote (quote g)))))))))))
(setk (quote poszukaj0) (aeval (list (quote list) (list (quote replaceby) (list
(quote times) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (
quote s)) (list (quote !~) (quote m))) (list (quote r_r) (list (quote !~) (quote
k)) (list (quote !~) (quote g)))) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote times)) 2 (quote (quote m))))) (list (quote 
evalequal) (list (quote aeval) (quote (quote g))) (list (quote aeval) (quote (
quote f))))) (list (quote aeval) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote r_r)) (list (quote list) (quote (quote times)) 2 (
quote (quote m))) (quote (quote f))) (list (quote list) (quote (quote zen)) (
quote (quote f)) (quote (quote s)) (quote (quote m)))))) (list (quote t) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote r_r)) (quote (quote k)) (quote (quote g))) (list (quote list) (quote (
quote fer)) (quote (quote f)) (quote (quote s)) (quote (quote m)))))))) (list (
quote replaceby) (list (quote times) (list (quote bos) (list (quote !~) (quote f
)) (list (quote !~) (quote s)) (list (quote !~) (quote m))) (list (quote r_r) (
list (quote !~) (quote k)) (list (quote !~) (quote g)))) (list (quote cond) (
list (list (quote and) (list (quote evalequal) (list (quote aeval) (quote (quote
k))) (list (quote aeval) (list (quote list) (quote (quote times)) 2 (quote (
quote m))))) (list (quote evalequal) (list (quote aeval) (quote (quote g))) (
list (quote aeval) (quote (quote f))))) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (list (quote list) (
quote (quote times)) 2 (quote (quote m))) (quote (quote f))) (list (quote list)
(quote (quote zan)) (quote (quote f)) (quote (quote s)) (quote (quote m)))))) (
list (quote t) (list (quote aeval) (list (quote list) (quote (quote times)) (
list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote g))) (list
(quote list) (quote (quote bos)) (quote (quote f)) (quote (quote s)) (quote (
quote m)))))))))))
(setk (quote poszukaj1) (aeval (list (quote list) (list (quote replaceby) (list
(quote times) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (
quote s)) (list (quote !~) (quote m))) (list (quote r_r) (list (quote !~) (quote
k)) (list (quote !~) (quote g)))) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote waga)) 1 (quote (quote s)) (quote (quote m)))
)) (list (quote evalequal) (list (quote aeval) (quote (quote g))) (list (quote 
aeval) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote
times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote f
))) (list (quote list) (quote (quote zen)) (quote (quote f)) (quote (quote s)) (
quote (quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (
quote (quote g))) (list (quote list) (quote (quote fer)) (quote (quote f)) (
quote (quote s)) (quote (quote m)))))))) (list (quote replaceby) (list (quote 
times) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote s))
(list (quote !~) (quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list
(quote !~) (quote g)))) (list (quote cond) (list (list (quote and) (list (quote
evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval) (list (
quote list) (quote (quote waga)) 1 (quote (quote s)) (quote (quote m))))) (list
(quote evalequal) (list (quote aeval) (quote (quote g))) (list (quote aeval) (
quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote f))) (
list (quote list) (quote (quote zan)) (quote (quote f)) (quote (quote s)) (quote
(quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (
quote g))) (list (quote list) (quote (quote bos)) (quote (quote f)) (quote (
quote s)) (quote (quote m)))))))))))
(setk (quote poszukaj2) (aeval (list (quote list) (list (quote replaceby) (list
(quote times) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (
quote s)) (list (quote !~) (quote m))) (list (quote r_r) (list (quote !~) (quote
k)) (list (quote !~) (quote g)))) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote waga)) 2 (quote (quote s)) (quote (quote m)))
)) (list (quote evalequal) (list (quote aeval) (quote (quote g))) (list (quote 
aeval) (quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote
times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote f
))) (list (quote list) (quote (quote zen)) (quote (quote f)) (quote (quote s)) (
quote (quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (
quote (quote g))) (list (quote list) (quote (quote fer)) (quote (quote f)) (
quote (quote s)) (quote (quote m)))))))) (list (quote replaceby) (list (quote 
times) (list (quote bos) (list (quote !~) (quote f)) (list (quote !~) (quote s))
(list (quote !~) (quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list
(quote !~) (quote g)))) (list (quote cond) (list (list (quote and) (list (quote
evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval) (list (
quote list) (quote (quote waga)) 2 (quote (quote s)) (quote (quote m))))) (list
(quote evalequal) (list (quote aeval) (quote (quote g))) (list (quote aeval) (
quote (quote f))))) (list (quote aeval) (list (quote list) (quote (quote times))
(list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote f))) (
list (quote list) (quote (quote zan)) (quote (quote f)) (quote (quote s)) (quote
(quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (
quote g))) (list (quote list) (quote (quote bos)) (quote (quote f)) (quote (
quote s)) (quote (quote m)))))))))))
(setk (quote poszukaj3) (aeval (list (quote list) (list (quote replaceby) (list
(quote times) (list (quote fer) (list (quote !~) (quote f)) 0 (list (quote !~) (
quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote
g)))) (list (quote cond) (list (list (quote evallessp) (list (quote aeval) (
quote (quote m))) 2) (list (quote aeval) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote g))) (
list (quote list) (quote (quote fer)) (quote (quote f)) 0 (quote (quote m))))))
(list (quote t) (list (quote progn) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote times)) 2 (quote (quote m))))) (list (quote 
evalequal) (list (quote aeval) (quote (quote f))) (list (quote aeval) (quote (
quote g))))) (list (quote aeval) (list (quote list) (quote (quote times)) (list
(quote list) (quote (quote r_r)) 1 (list (quote list) (quote (quote times)) 2 (
quote (quote m))) (quote (quote f))) (list (quote list) (quote (quote zen)) (
quote (quote f)) 0 (quote (quote m)))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) (
quote (quote k)) (quote (quote g))) (list (quote list) (quote (quote fer)) (
quote (quote f)) 0 (quote (quote m))))))))))) (list (quote replaceby) (list (
quote times) (list (quote fer) (list (quote !~) (quote f)) 1 (list (quote !~) (
quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote
g)))) (list (quote cond) (list (list (quote evallessp) (list (quote aeval) (
quote (quote m))) 1) (list (quote aeval) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote g))) (
list (quote list) (quote (quote fer)) (quote (quote f)) 1 (quote (quote m))))))
(list (quote t) (list (quote progn) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote times
)) 2 (quote (quote m))) 1))) (list (quote evalequal) (list (quote aeval) (quote
(quote f))) (list (quote aeval) (quote (quote g))))) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) 1 (list
(quote list) (quote (quote plus)) (list (quote list) (quote (quote times)) 2 (
quote (quote m))) 1) (quote (quote f))) (list (quote list) (quote (quote zen)) (
quote (quote f)) 1 (quote (quote m)))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) (
quote (quote k)) (quote (quote g))) (list (quote list) (quote (quote fer)) (
quote (quote f)) 1 (quote (quote m))))))))))) (list (quote replaceby) (list (
quote times) (list (quote fer) (list (quote !~) (quote f)) 2 (list (quote !~) (
quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote
g)))) (list (quote cond) (list (list (quote evallessp) (list (quote aeval) (
quote (quote m))) 1) (list (quote aeval) (list (quote list) (quote (quote times)
) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (quote g))) (
list (quote list) (quote (quote fer)) (quote (quote f)) 2 (quote (quote m))))))
(list (quote t) (list (quote progn) (list (quote cond) (list (list (quote and) (
list (quote evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval
) (list (quote list) (quote (quote plus)) (list (quote list) (quote (quote times
)) 2 (quote (quote m))) 1))) (list (quote boolvalue!*) (list (quote revalx) (
list (quote list) (quote (quote f)) (list (quote list) (quote (quote e)) (list (
quote list) (quote (quote qual)) (quote (quote g)))))))) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) 1
(list (quote list) (quote (quote plus)) (list (quote list) (quote (quote times))
2 (quote (quote m))) 1) (quote (quote f))) (list (quote list) (quote (quote zen)
) (quote (quote f)) 2 (quote (quote m)))))) (list (quote t) (list (quote aeval)
(list (quote list) (quote (quote times)) (list (quote list) (quote (quote r_r))
(quote (quote k)) (quote (quote g))) (list (quote list) (quote (quote fer)) (
quote (quote f)) 2 (quote (quote m))))))))))) (list (quote replaceby) (list (
quote times) (list (quote fer) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote
g)))) (list (quote cond) (list (list (quote and) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))) 2)))
(list (quote evalequal) (list (quote aeval) (quote (quote f))) (list (quote 
aeval) (quote (quote g))))) (list (quote aeval) (list (quote list) (quote (quote
times)) (list (quote list) (quote (quote r_r)) 1 (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))) 2) (
quote (quote f))) (list (quote list) (quote (quote zen)) (quote (quote f)) 3 (
quote (quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (
quote (quote g))) (list (quote list) (quote (quote fer)) (quote (quote f)) 3 (
quote (quote m)))))))) (list (quote replaceby) (list (quote times) (list (quote
bos) (list (quote !~) (quote f)) 0 (list (quote !~) (quote m))) (list (quote r_r
) (list (quote !~) (quote k)) (list (quote !~) (quote g)))) (list (quote cond) (
list (list (quote evallessp) (list (quote aeval) (quote (quote m))) 2) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote r_r)) (quote (quote k)) (quote (quote g))) (list (quote list) (quote (
quote bos)) (quote (quote f)) 0 (quote (quote m)))))) (list (quote t) (list (
quote progn) (list (quote cond) (list (list (quote and) (list (quote evalequal)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote times)) 2 (quote (quote m))))) (list (quote evalequal) (list (quote
aeval) (quote (quote f))) (list (quote aeval) (quote (quote g))))) (list (quote
aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote (quote
r_r)) 1 (list (quote list) (quote (quote times)) 2 (quote (quote m))) (quote (
quote f))) (list (quote list) (quote (quote zan)) (quote (quote f)) 0 (quote (
quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (quote (
quote g))) (list (quote list) (quote (quote bos)) (quote (quote f)) 0 (quote (
quote m))))))))))) (list (quote replaceby) (list (quote times) (list (quote bos)
(list (quote !~) (quote f)) 1 (list (quote !~) (quote m))) (list (quote r_r) (
list (quote !~) (quote k)) (list (quote !~) (quote g)))) (list (quote cond) (
list (list (quote evallessp) (list (quote aeval) (quote (quote m))) 1) (list (
quote aeval) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote r_r)) (quote (quote k)) (quote (quote g))) (list (quote list) (quote (
quote bos)) (quote (quote f)) 1 (quote (quote m)))))) (list (quote t) (list (
quote progn) (list (quote cond) (list (list (quote and) (list (quote evalequal)
(list (quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))
) 1))) (list (quote evalequal) (list (quote aeval) (quote (quote f))) (list (
quote aeval) (quote (quote g))))) (list (quote aeval) (list (quote list) (quote
(quote times)) (list (quote list) (quote (quote r_r)) 1 (list (quote list) (
quote (quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))
) 1) (quote (quote f))) (list (quote list) (quote (quote zan)) (quote (quote f))
1 (quote (quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (
quote (quote g))) (list (quote list) (quote (quote bos)) (quote (quote f)) 1 (
quote (quote m))))))))))) (list (quote replaceby) (list (quote times) (list (
quote bos) (list (quote !~) (quote f)) 2 (list (quote !~) (quote m))) (list (
quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote g)))) (list (
quote cond) (list (list (quote evallessp) (list (quote aeval) (quote (quote m)))
1) (list (quote aeval) (list (quote list) (quote (quote times)) (list (quote 
list) (quote (quote r_r)) (quote (quote k)) (quote (quote g))) (list (quote list
) (quote (quote bos)) (quote (quote f)) 2 (quote (quote m)))))) (list (quote t)
(list (quote progn) (list (quote cond) (list (list (quote and) (list (quote 
evalequal) (list (quote aeval) (quote (quote k))) (list (quote aeval) (list (
quote list) (quote (quote plus)) (list (quote list) (quote (quote times)) 2 (
quote (quote m))) 1))) (list (quote boolvalue!*) (list (quote revalx) (list (
quote list) (quote (quote f)) (list (quote list) (quote (quote e)) (list (quote
list) (quote (quote qual)) (quote (quote g)))))))) (list (quote aeval) (list (
quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) 1 (list
(quote list) (quote (quote plus)) (list (quote list) (quote (quote times)) 2 (
quote (quote m))) 1) (quote (quote f))) (list (quote list) (quote (quote zan)) (
quote (quote f)) 2 (quote (quote m)))))) (list (quote t) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote r_r)) (
quote (quote k)) (quote (quote g))) (list (quote list) (quote (quote bos)) (
quote (quote f)) 2 (quote (quote m))))))))))) (list (quote replaceby) (list (
quote times) (list (quote bos) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote m))) (list (quote r_r) (list (quote !~) (quote k)) (list (quote !~) (quote
g)))) (list (quote cond) (list (list (quote and) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) (list (quote aeval) (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))) 2)))
(list (quote evalequal) (list (quote aeval) (quote (quote f))) (list (quote 
aeval) (quote (quote g))))) (list (quote aeval) (list (quote list) (quote (quote
times)) (list (quote list) (quote (quote r_r)) 1 (list (quote list) (quote (
quote plus)) (list (quote list) (quote (quote times)) 2 (quote (quote m))) 2) (
quote (quote f))) (list (quote list) (quote (quote zan)) (quote (quote f)) 3 (
quote (quote m)))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote times)) (list (quote list) (quote (quote r_r)) (quote (quote k)) (
quote (quote g))) (list (quote list) (quote (quote bos)) (quote (quote f)) 3 (
quote (quote m)))))))))))
(setk (quote calkuj0) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote fer) (quote f) (quote n) (list (quote difference) (
quote m) 1))) (list (quote replaceby) (list (quote zan) (list (quote !~) (quote
f)) (list (quote !~) (quote n)) (list (quote !~) (quote m))) (list (quote bos) (
quote f) (quote n) (list (quote difference) (quote m) 1))))))
(setk (quote pocalkuj0) (aeval (list (quote list) (list (quote replaceby) (list
(quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote n)) (list (quote
!~) (quote m))) (list (quote minus) (list (quote times) (list (quote fer) (quote
f) (quote n) (list (quote difference) (quote m) 1)) (list (quote d) 1)))) (list
(quote replaceby) (list (quote zan) (list (quote !~) (quote f)) (list (quote !~)
(quote n)) (list (quote !~) (quote m))) (list (quote minus) (list (quote times)
(list (quote bos) (quote f) (quote n) (list (quote difference) (quote m) 1)) (
list (quote d) 1)))))))
(setk (quote calkuj1) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (
quote bos)) (quote (quote f)) (list (quote list) (quote (quote difference)) (
quote (quote k)) 1) (quote (quote n))))) (list (list (quote or) (list (quote and
) (list (quote evalequal) (list (quote aeval) (quote (quote k))) 0) (list (quote
evalgreaterp) (list (quote aeval) (quote (quote n))) 0)) (list (quote and) (list
(quote evalequal) (list (quote aeval) (quote (quote k))) 2) (list (quote 
evalgreaterp) (list (quote aeval) (quote (quote n))) 0))) (list (quote aeval) (
list (quote list) (quote (quote bos)) (quote (quote f)) (list (quote list) (
quote (quote plus)) (quote (quote k)) 1) (list (quote list) (quote (quote 
difference)) (quote (quote n)) 1)))))) (list (quote replaceby) (list (quote zan)
(list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (quote
n))) (list (quote cond) (list (list (quote or) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote aeval) (
quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (quote fer))
(quote (quote f)) (list (quote list) (quote (quote difference)) (quote (quote k)
) 1) (quote (quote n))))) (list (list (quote or) (list (quote and) (list (quote
evalequal) (list (quote aeval) (quote (quote k))) 0) (list (quote evalgreaterp)
(list (quote aeval) (quote (quote n))) 0)) (list (quote and) (list (quote 
evalequal) (list (quote aeval) (quote (quote k))) 2) (list (quote evalgreaterp)
(list (quote aeval) (quote (quote n))) 0))) (list (quote aeval) (list (quote 
list) (quote (quote fer)) (quote (quote f)) (list (quote list) (quote (quote 
plus)) (quote (quote k)) 1) (list (quote list) (quote (quote difference)) (quote
(quote n)) 1)))))))))
(setk (quote pocalkuj1) (aeval (list (quote list) (list (quote replaceby) (list
(quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (
quote minus)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote bos)) (quote (quote f)) (list (quote list) (quote (quote difference)) (
quote (quote k)) 1) (quote (quote n))) (list (quote list) (quote (quote der)) 1)
)))) (list (list (quote or) (list (quote and) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) 0) (list (quote evalgreaterp) (list (quote aeval
) (quote (quote n))) 0)) (list (quote and) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 2) (list (quote evalgreaterp) (list (quote aeval) (
quote (quote n))) 0))) (list (quote aeval) (list (quote list) (quote (quote 
minus)) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote bos)) (quote (quote f)) (list (quote list) (quote (quote plus)) (quote (
quote k)) 1) (list (quote list) (quote (quote difference)) (quote (quote n)) 1))
(list (quote list) (quote (quote der)) 1))))))) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 1)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote fer)) (quote (quote f)) (list (
quote list) (quote (quote difference)) (quote (quote k)) 1) (quote (quote n))) (
list (quote list) (quote (quote der)) 1)))) (list (list (quote or) (list (quote
and) (list (quote evalequal) (list (quote aeval) (quote (quote k))) 0) (list (
quote evalgreaterp) (list (quote aeval) (quote (quote n))) 0)) (list (quote and)
(list (quote evalequal) (list (quote aeval) (quote (quote k))) 2) (list (quote 
evalgreaterp) (list (quote aeval) (quote (quote n))) 0))) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote fer)) (
quote (quote f)) (list (quote list) (quote (quote plus)) (quote (quote k)) 1) (
list (quote list) (quote (quote difference)) (quote (quote n)) 1)) (list (quote
list) (quote (quote der)) 1)))))))))
(setk (quote calkuj2) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote k))) (list (quote list) (quote (quote bos)) (quote (quote f)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 2) (quote (quote n))))
)) (list (list (quote or) (list (quote and) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 0) (list (quote evalgreaterp) (list (quote aeval) (
quote (quote n))) 0)) (list (quote and) (list (quote evalequal) (list (quote 
aeval) (quote (quote k))) 1) (list (quote evalgreaterp) (list (quote aeval) (
quote (quote n))) 0))) (list (quote aeval) (list (quote list) (quote (quote 
times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (quote (
quote k))) (list (quote list) (quote (quote bos)) (quote (quote f)) (list (quote
list) (quote (quote plus)) (quote (quote k)) 2) (list (quote list) (quote (quote
difference)) (quote (quote n)) 1))))))) (list (quote replaceby) (list (quote zan
) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (
quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal) (
list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote 
aeval) (quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote k))) (list (quote list) (quote (quote fer)) (quote (quote f)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 2) (quote (quote n))))
)) (list (list (quote or) (list (quote and) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 0) (list (quote evalgreaterp) (list (quote aeval) (
quote (quote n))) 0)) (list (quote evalequal) (list (quote aeval) (quote (quote
k))) 1)) (list (quote aeval) (list (quote list) (quote (quote times)) (list (
quote list) (quote (quote expt)) (list (quote minus) 1) (quote (quote k))) (list
(quote list) (quote (quote fer)) (quote (quote f)) (list (quote list) (quote (
quote plus)) (quote (quote k)) 2) (list (quote list) (quote (quote difference))
(quote (quote n)) 1))))))))))
(setk (quote pocalkuj2) (aeval (list (quote list) (list (quote replaceby) (list
(quote zen) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (
quote minus)) (list (quote list) (quote (quote times)) (list (quote list) (quote
(quote expt)) (list (quote minus) 1) (quote (quote k))) (list (quote list) (
quote (quote bos)) (quote (quote f)) (list (quote list) (quote (quote difference
)) (quote (quote k)) 2) (quote (quote n))) (list (quote list) (quote (quote der)
) 2))))) (list (list (quote or) (list (quote and) (list (quote evalequal) (list
(quote aeval) (quote (quote k))) 0) (list (quote evalgreaterp) (list (quote 
aeval) (quote (quote n))) 0)) (list (quote and) (list (quote evalequal) (list (
quote aeval) (quote (quote k))) 1) (list (quote evalgreaterp) (list (quote aeval
) (quote (quote n))) 0))) (list (quote aeval) (list (quote list) (quote (quote 
minus)) (list (quote list) (quote (quote times)) (list (quote list) (quote (
quote expt)) (list (quote minus) 1) (quote (quote k))) (list (quote list) (quote
(quote bos)) (quote (quote f)) (list (quote list) (quote (quote plus)) (quote (
quote k)) 2) (list (quote list) (quote (quote difference)) (quote (quote n)) 1))
(list (quote list) (quote (quote der)) 2))))))) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote
!~) (quote n))) (list (quote cond) (list (list (quote or) (list (quote evalequal
) (list (quote aeval) (quote (quote k))) 3) (list (quote evalequal) (list (quote
aeval) (quote (quote k))) 2)) (list (quote aeval) (list (quote list) (quote (
quote times)) (list (quote list) (quote (quote expt)) (list (quote minus) 1) (
quote (quote k))) (list (quote list) (quote (quote fer)) (quote (quote f)) (list
(quote list) (quote (quote difference)) (quote (quote k)) 2) (quote (quote n)))
(list (quote list) (quote (quote der)) 2)))) (list (list (quote or) (list (quote
and) (list (quote evalequal) (list (quote aeval) (quote (quote k))) 0) (list (
quote evalgreaterp) (list (quote aeval) (quote (quote n))) 0)) (list (quote and)
(list (quote evalequal) (list (quote aeval) (quote (quote k))) 1) (list (quote 
evalgreaterp) (list (quote aeval) (quote (quote n))) 0))) (list (quote aeval) (
list (quote list) (quote (quote times)) (list (quote list) (quote (quote expt))
(list (quote minus) 1) (quote (quote k))) (list (quote list) (quote (quote fer))
(quote (quote f)) (list (quote list) (quote (quote plus)) (quote (quote k)) 2) (
list (quote list) (quote (quote difference)) (quote (quote n)) 1)) (list (quote
list) (quote (quote der)) 2)))))))))
(setk (quote calkuj3) (aeval (list (quote list) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (list (
quote cond) (list (list (quote evallessp) (list (quote aeval) (quote (quote n)))
2) (list (quote aeval) (list (quote list) (quote (quote fer)) (quote (quote f))
0 (quote (quote n))))) (list (quote t) (list (quote aeval) (list (quote list) (
quote (quote minus)) (list (quote list) (quote (quote fer)) (quote (quote f)) 3
(list (quote list) (quote (quote difference)) (quote (quote n)) 2))))))) (list (
quote replaceby) (list (quote zen) (list (quote !~) (quote f)) 1 (list (quote !~
) (quote n))) (list (quote cond) (list (list (quote evallessp) (list (quote 
aeval) (quote (quote n))) 1) (list (quote aeval) (list (quote list) (quote (
quote fer)) (quote (quote f)) 1 0))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote fer)) (quote (quote f)) 2 (list (quote list) (quote (
quote difference)) (quote (quote n)) 1)))))) (list (quote replaceby) (list (
quote zen) (list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (
quote cond) (list (list (quote evallessp) (list (quote aeval) (quote (quote n)))
1) (list (quote aeval) (list (quote list) (quote (quote fer)) (quote (quote f))
2 0))) (list (quote t) (list (quote aeval) (list (quote list) (quote (quote 
minus)) (list (quote list) (quote (quote fer)) (quote (quote f)) 1 (list (quote
list) (quote (quote difference)) (quote (quote n)) 1))))))) (list (quote 
replaceby) (list (quote zen) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote n))) (list (quote fer) (quote f) 0 (quote n))) (list (quote replaceby) (
list (quote zan) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (
list (quote cond) (list (list (quote evallessp) (list (quote aeval) (quote (
quote n))) 2) (list (quote aeval) (list (quote list) (quote (quote fer)) (quote
(quote f)) 0 (quote (quote n))))) (list (quote t) (list (quote aeval) (list (
quote list) (quote (quote minus)) (list (quote list) (quote (quote bos)) (quote
(quote f)) 3 (list (quote list) (quote (quote difference)) (quote (quote n)) 2))
))))) (list (quote replaceby) (list (quote zan) (list (quote !~) (quote f)) 1 (
list (quote !~) (quote n))) (list (quote cond) (list (list (quote evallessp) (
list (quote aeval) (quote (quote n))) 1) (list (quote aeval) (list (quote list)
(quote (quote fer)) (quote (quote f)) 1 0))) (list (quote t) (list (quote aeval)
(list (quote list) (quote (quote bos)) (quote (quote f)) 2 (list (quote list) (
quote (quote difference)) (quote (quote n)) 1)))))) (list (quote replaceby) (
list (quote zan) (list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (
list (quote cond) (list (list (quote evallessp) (list (quote aeval) (quote (
quote n))) 1) (list (quote aeval) (list (quote list) (quote (quote fer)) (quote
(quote f)) 2 0))) (list (quote t) (list (quote aeval) (list (quote list) (quote
(quote minus)) (list (quote list) (quote (quote bos)) (quote (quote f)) 1 (list
(quote list) (quote (quote difference)) (quote (quote n)) 1))))))) (list (quote
replaceby) (list (quote zan) (list (quote !~) (quote f)) 3 (list (quote !~) (
quote n))) (list (quote bos) (quote f) 0 (quote n))))))
(setk (quote pocalkuj3) (aeval (list (quote list) (list (quote replaceby) (list
(quote zen) (list (quote !~) (quote f)) 0 (list (quote !~) (quote n))) (list (
quote plus) (list (quote difference) (list (quote minus) (list (quote times) (
list (quote bos) (quote f) 2 (list (quote difference) (quote n) 1)) (list (quote
der) 2))) (list (quote times) (list (quote bos) (quote f) 1 (list (quote 
difference) (quote n) 1)) (list (quote der) 1))) (list (quote times) (list (
quote fer) (quote f) 3 (list (quote difference) (quote n) 2)) (list (quote der)
1) (list (quote der) 2)))) (list (quote replaceby) (list (quote zen) (list (
quote !~) (quote f)) 1 (list (quote !~) (quote n))) (list (quote difference) (
list (quote difference) (list (quote times) (list (quote bos) (quote f) 3 (list
(quote difference) (quote n) 1)) (list (quote der) 2)) (list (quote times) (list
(quote bos) (quote f) 0 (quote n)) (list (quote der) 1))) (list (quote times) (
list (quote fer) (quote f) 2 (list (quote difference) (quote n) 1)) (list (quote
der) 1) (list (quote der) 2)))) (list (quote replaceby) (list (quote zen) (list
(quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (quote plus) (list (
quote difference) (list (quote minus) (list (quote times) (list (quote bos) (
quote f) 0 (quote n)) (list (quote der) 2))) (list (quote times) (list (quote 
bos) (quote f) 3 (list (quote difference) (quote n) 1)) (list (quote der) 1))) (
list (quote times) (list (quote fer) (quote f) 1 (list (quote difference) (quote
n) 1)) (list (quote der) 1) (list (quote der) 2)))) (list (quote replaceby) (
list (quote zen) (list (quote !~) (quote f)) 3 (list (quote !~) (quote n))) (
list (quote plus) (list (quote minus) (list (quote times) (list (quote fer) (
quote f) 0 (quote n)) (list (quote der) 1) (list (quote der) 2))) (list (quote 
difference) (list (quote times) (list (quote bos) (quote f) 1 (quote n)) (list (
quote der) 2)) (list (quote times) (list (quote bos) (quote f) 2 (quote n)) (
list (quote der) 1))))) (list (quote replaceby) (list (quote zan) (list (quote 
!~) (quote f)) 0 (list (quote !~) (quote n))) (list (quote plus) (list (quote 
times) (list (quote bos) (quote f) 3 (list (quote difference) (quote n) 2)) (
list (quote der) 1) (list (quote der) 2)) (list (quote times) (list (quote fer)
(quote f) 2 (list (quote difference) (quote n) 1)) (list (quote der) 2)) (list (
quote times) (list (quote fer) (quote f) 1 (list (quote difference) (quote n) 1)
) (list (quote der) 1)))) (list (quote replaceby) (list (quote zan) (list (quote
!~) (quote f)) 1 (list (quote !~) (quote n))) (list (quote plus) (list (quote 
minus) (list (quote times) (list (quote fer) (quote f) 3 (list (quote difference
) (quote n) 1)) (list (quote der) 2))) (list (quote difference) (list (quote 
times) (list (quote fer) (quote f) 0 (quote n)) (list (quote der) 1)) (list (
quote times) (list (quote bos) (quote f) 2 (list (quote difference) (quote n) 1)
) (list (quote der) 1) (list (quote der) 2))))) (list (quote replaceby) (list (
quote zan) (list (quote !~) (quote f)) 2 (list (quote !~) (quote n))) (list (
quote plus) (list (quote times) (list (quote fer) (quote f) 3 (list (quote 
difference) (quote n) 1)) (list (quote der) 1)) (list (quote times) (list (quote
fer) (quote f) 0 (quote n)) (list (quote der) 2)) (list (quote times) (list (
quote bos) (quote f) 1 (list (quote difference) (quote n) 1)) (list (quote der)
1) (list (quote der) 2)))) (list (quote replaceby) (list (quote zan) (list (
quote !~) (quote f)) 3 (list (quote !~) (quote n))) (list (quote plus) (list (
quote difference) (list (quote minus) (list (quote times) (list (quote bos) (
quote f) 0 (quote n)) (list (quote der) 1) (list (quote der) 2))) (list (quote 
times) (list (quote fer) (quote f) 1 (quote n)) (list (quote der) 2))) (list (
quote times) (list (quote fer) (quote f) 2 (quote n)) (list (quote der) 1)))))))
(progn (aeval (put (quote maxi) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote maxi) (quote defined!-in!-file)
(quote susy2!/susy2!.red))) (aeval (put (quote maxi) (quote defined!-on!-line) 
1401)) (progn (put (quote maxi) (quote number!-of!-args) 2) (flag (quote (maxi))
(quote opfn)) (de maxi (wrt wx) (prog (kr kr1 ew1 ew2 ew3 ew4 ew5) (cond ((
evalequal (aeval wx) 0) (return (aeval (list (quote list) 0 0))))) (setq kr (
aeval (list (quote num) wx))) (setq kr1 (aeval (list (quote den) wx))) (setq ew1
(aeval (list (quote whereexp) (list (quote list) (setk (quote help!*) (aeval (
list (quote !~mkid) (quote szukaj) wrt)))) (list (quote times) (list (quote byk)
0 0) kr)))) (setq ew2 (aeval (list (quote whereexp) (list (quote list) (list (
quote list) (list (quote replaceby) (list (quote byk) (list (quote !~) (quote n)
) (list (quote !~) (quote f))) (list (quote times) (list (quote expt) (quote 
l_a_!@m) (quote n)) (list (quote p_p) (quote n) (quote f)))))) ew1))) (setq ew2
(aeval (list (quote sub) (list (quote equal) (quote p_p) (quote r_r)) (list (
quote lcof) ew2 (quote l_a_!@m))))) (setq ew2 (aeval (list (quote whereexp) (
list (quote list) (setk (quote help!*) (aeval (list (quote !~mkid) (quote 
poszukaj) wrt)))) ew2))) (setq ew3 (aeval (list (quote sub) (list (quote equal)
(quote r_r) (quote s_s)) ew2))) (setq ew1 (cond ((evalequal (aeval (list (quote
part) ew3 0)) (aeval (quote minus))) (minus 1)) (t 1))) (setq ew4 (aeval (list (
quote sub) (list (quote equal) (quote x_x) 0) (cond ((evallessp (aeval (list (
quote length) (list (quote times) ew1 ew3))) (aeval (list (quote arglength) (
list (quote times) ew1 ew3)))) (aeval (list (quote times) ew1 ew3))) (t (aeval (
list (quote part) (list (quote plus) (list (quote times) ew1 ew3) (quote x_x)) 1
))))))) (setq ew5 (aeval (list (quote difference) kr (list (quote sub) (list (
quote equal) (quote zen) (quote fer)) (list (quote equal) (quote zan) (quote bos
)) (list (quote times) ew1 ew4))))) (return (aeval (list (quote list) (list (
quote times) ew1 (list (quote quotient) ew4 kr1)) (list (quote quotient) ew5 kr1
))))))))
(progn (aeval (put (quote n_dyw) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote n_dyw) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote n_dyw) (quote
defined!-on!-line) 1418)) (progn (put (quote n_dyw) (quote number!-of!-args) 3)
(flag (quote (n_dyw)) (quote opfn)) (de n_dyw (wrt wx wz) (prog (eks0 eks eks1 
eks2 osa1 osa2 osa3 osa4) (setk (quote kap) (aeval (list (quote length) wz))) (
setq eks (aeval (list (quote num) wx))) (setq eks0 (aeval (list (quote den) wx))
) (setq eks1 (cond ((evalequal (aeval (list (quote part) eks 0)) (aeval (quote 
minus))) (minus 1)) (t 1))) (setq eks2 (aeval (list (quote times) eks1 eks))) (
setq osa4 (aeval 0)) (prog (k) (setq k 1) lab (cond ((aminusp!: (list (quote 
difference) (aeval!* (quote kap)) k)) (return nil))) (progn (setq osa1 (aeval!*
(list (quote difference) eks2 (list (quote sub) (list (quote equal) (list (quote
part) wz k) 0) eks2)))) (setq eks2 (aeval!* (list (quote difference) eks2 osa1))
) (setq osa2 (aeval!* (list (quote sub) (list (quote equal) (list (quote d) (
list (quote part) wz k)) 0) (list (quote whereexp) (list (quote list) (quote 
tryk)) (list (quote times) (list (quote d) (list (quote part) wz k)) osa1))))) (
setq osa3 (aeval!* (list (quote whereexp) (list (quote list) (quote dryk)) (list
(quote times) (list (quote d) (list (quote part) wz k) 0) osa2)))) (setq osa3 (
aeval!* (list (quote whereexp) (list (quote list) (list (quote list) (list (
quote replaceby) (list (quote d) (list (quote !~) (quote f)) (list (quote !~) (
quote n))) (list (quote when) (list (quote quotient) 1 (quote n)) (list (quote 
greaterp) (quote n) 0))))) osa3))) (setq osa3 (aeval!* (list (quote sub) (list (
quote equal) (list (quote der) 1) 0) (list (quote equal) (list (quote d) 1) 0) (
list (quote equal) (list (quote der) 3) 0) (list (quote equal) (list (quote der)
2) 0) (list (quote whereexp) (list (quote list) (setk (quote help!*) (aeval!* (
list (quote !~mkid) (quote wariat_) wrt)))) osa3)))) (setq osa4 (aeval!* (list (
quote plus) osa4 osa3))) (aeval!* (quote nil))) (setq k ((lambda (forall!-result
) (aeval!* (list (quote plus) forall!-result 1))) k)) (go lab)) (return (aeval (
list (quote list) (list (quote difference) wx (list (quote times) eks1 (list (
quote quotient) osa4 eks0))) (list (quote times) eks1 (list (quote quotient) 
osa4 eks0)))))))))
(progn (aeval (put (quote s_int) (quote procedure_type) (quote (arrow (times 
general general general) general)))) (aeval (put (quote s_int) (quote 
defined!-in!-file) (quote susy2!/susy2!.red))) (aeval (put (quote s_int) (quote
defined!-on!-line) 1442)) (progn (put (quote s_int) (quote number!-of!-args) 3)
(flag (quote (s_int)) (quote opfn)) (de s_int (wrt wx wz) (prog (kak kak1 kak2 
pak pak1 pak2 kap pak3 pak4) (cond ((evalequal (aeval wx) 0) (return 0))) (cond
((or (and (evalequal (aeval (quote abra_kadabra)) 1) (evalgreaterp (aeval wrt) 0
)) (and (evalequal (aeval (quote abra_kadabra)) 3) (evalgreaterp (aeval wrt) 0))
) (aeval (rederr (revalx 
" **** I T is Impossible to define in a proper
manner this integral => use trad representation for computation only"))))) (setq
kak (aeval (list (quote n_dyw) wrt wx wz))) (setq kak1 (aeval (list (quote first
) kak))) (setq kak2 (aeval (list (quote second) kak))) (setq pak (aeval (list (
quote hom) kak1))) (setq pak1 (aeval (list (quote first) (list (quote first) pak
)))) (setq pak2 (aeval (list (quote second) pak))) (setq kap (aeval (list (quote
length) pak2))) (setq pak3 (cond ((evalequal (aeval pak2) 0) 0) (t (prog (k 
forall!-result) (setq k 1) (setq forall!-result 0) lab1 (cond ((aminusp!: (list
(quote difference) (aeval!* kap) k)) (return forall!-result))) (setq 
forall!-result (aeval!* (list (quote plus) (aeval!* (list (quote cal) wrt (list
(quote part) pak2 k))) forall!-result))) (setq k ((lambda (forall!-result) (
aeval!* (list (quote plus) forall!-result 1))) k)) (go lab1))))) (setq pak4 (
aeval (list (quote plus) (list (quote times) pak1 pak3) (list (quote times) (
list (quote del) (list (quote minus) wrt)) kak2)))) (return (aeval pak4))))))
(progn (aeval (put (quote cal) (quote procedure_type) (quote (arrow (times 
general general) general)))) (aeval (put (quote cal) (quote defined!-in!-file) (
quote susy2!/susy2!.red))) (aeval (put (quote cal) (quote defined!-on!-line) 
1459)) (progn (put (quote cal) (quote number!-of!-args) 2) (flag (quote (cal)) (
quote opfn)) (de cal (wrt wx) (prog (wem wem1 wem2 wem3 wem4 wem5 wem6 z_z_z) (
cond ((evalequal (aeval wx) 0) (return 0))) (setq wem (aeval (list (quote maxi)
wrt wx))) (setq wem1 (aeval (list (quote first) wem))) (setq wem2 (aeval (list (
quote second) wem))) (setq z_z_z (aeval 0)) (while (evalneq (aeval!* wem1) 0) (
progn (setq wem3 (aeval!* (list (quote sub) (list (quote equal) (quote zen) (
quote fer)) (list (quote equal) (quote zan) (quote bos)) wem1))) (setq wem4 (
aeval!* (list (quote whereexp) (list (quote list) (setk (quote help!*) (aeval!*
(list (quote !~mkid) (quote calkuj) wrt)))) wem1))) (setq wem5 (aeval!* (list (
quote sub) (list (quote equal) (list (quote der) 3) 0) (list (quote equal) (list
(quote der) 1) 0) (list (quote equal) (list (quote d) 1) 0) (list (quote equal)
(list (quote der) 2) 0) (list (quote whereexp) (list (quote list) (setk (quote 
help!*) (aeval!* (list (quote !~mkid) (quote pocalkuj) wrt)))) (list (quote 
minus) wem1))))) (cond ((evalequal (aeval!* wem4) 0) (setq z_z_z (aeval!* (list
(quote plus) z_z_z (list (quote times) (list (quote del) (list (quote minus) wrt
)) wem3))))) (t (progn (setk (quote xxx) (aeval!* (list (quote whereexp) (list (
quote list) (list (quote list) (list (quote replaceby) wem3 (quote koz)))) (list
(quote plus) (list (quote minus) (list (quote times) (quote l_a_!@m) wem4)) wem3
wem5)))) (setq wem6 (aeval!* (list (quote rhs) (list (quote first) (list (quote
solve) (quote xxx) (quote koz)))))) (aeval!* (!~clear (list (quote xxx)))) (setq
z_z_z (aeval!* (list (quote plus) z_z_z (list (quote coeffn) wem6 (quote l_a_!@m
) 1)))) (setq wem6 (aeval!* (list (quote sub) (list (quote equal) (quote l_a_!@m
) 0) wem6))) (setq wem2 (aeval!* (list (quote plus) wem2 wem6)))))) (setq wem6 (
aeval!* (list (quote maxi) wrt wem2))) (setq wem1 (aeval!* (list (quote first) 
wem6))) (setq wem2 (aeval!* (list (quote second) wem6))) (aeval!* (quote nil))))
(return (aeval z_z_z))))))
(progn (aeval (put (quote hom) (quote procedure_type) (quote (arrow general 
general)))) (aeval (put (quote hom) (quote defined!-in!-file) (quote 
susy2!/susy2!.red))) (aeval (put (quote hom) (quote defined!-on!-line) 1480)) (
progn (put (quote hom) (quote number!-of!-args) 1) (flag (quote (hom)) (quote 
opfn)) (de hom (wx) (prog (zet1 zet2 iks iks1 iks2) (cond ((evalequal (aeval wx)
0) (return (aeval (list (quote list) (list (quote list) 0) 0))))) (setq iks (
aeval (list (quote num) wx))) (setq iks2 (aeval (list (quote den) wx))) (setq 
iks1 (cond ((evalequal (aeval (list (quote part) iks 0)) (aeval (quote minus)))
(minus 1)) (t 1))) (setq iks (aeval (list (quote times) iks1 iks))) (setq zet1 (
aeval (list (quote whereexp) (list (quote list) (list (quote list) (list (quote
replaceby) (list (quote fer) (list (quote !~) (quote f)) (list (quote !~) (quote
k)) (list (quote !~) (quote n))) (list (quote times) (list (quote !&a) (quote f)
) (list (quote expt) (list (quote !&a) (quote !@)) (list (quote plus) (list (
quote times) 2 (quote n)) (list (quote cond) (list (list (quote or) (list (quote
evalequal) (list (quote aeval) (quote (quote k))) 1) (list (quote evalequal) (
list (quote aeval) (quote (quote k))) 2)) 1) (list (list (quote evalequal) (list
(quote aeval) (quote (quote k))) 3) 2) (list (quote t) 0)))) (list (quote zen) (
quote f) (quote k) (quote n)))) (list (quote replaceby) (list (quote bos) (list
(quote !~) (quote f)) (list (quote !~) (quote k)) (list (quote !~) (quote n))) (
list (quote times) (list (quote !&a) (quote f)) (list (quote expt) (list (quote
!&a) (quote !@)) (list (quote plus) (list (quote times) 2 (quote n)) (list (
quote cond) (list (list (quote or) (list (quote evalequal) (list (quote aeval) (
quote (quote k))) 1) (list (quote evalequal) (list (quote aeval) (quote (quote k
))) 2)) 1) (list (list (quote evalequal) (list (quote aeval) (quote (quote k)))
3) 2) (list (quote t) 0)))) (list (quote zan) (quote f) (quote k) (quote n))))))
iks))) (setq zet2 (aeval (list (quote setpart!*) (list (quote plus) zet1 (quote
x_x)) 0 (aeval (quote list))))) (setq zet1 (aeval (list (quote reverse) (list (
quote rest) (list (quote reverse) zet2))))) (return (aeval (list (quote list) (
list (quote list) (list (quote quotient) iks1 iks2)) (list (quote sub) (list (
quote equal) (quote zen) (quote fer)) (list (quote equal) (quote zan) (quote bos
)) (list (quote whereexp) (list (quote list) (list (quote list) (list (quote 
replaceby) (list (quote !&a) (list (quote !~) (quote f))) 1) (list (quote 
replaceby) (list (quote !&a) (quote !@)) 1))) zet1)))))))))
(!~let (quote (trad)))
